# coding: utf-8

"""
    Metal API

    This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import metal
from models.devices_api import DevicesApi  # noqa: E501
from metal.rest import ApiException


class TestDevicesApi(unittest.TestCase):
    """DevicesApi unit test stubs"""

    def setUp(self):
        self.api = models.devices_api.DevicesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_bgp_session(self):
        """Test case for create_bgp_session

        Create a BGP session  # noqa: E501
        """
        pass

    def test_create_device(self):
        """Test case for create_device

        Create a device  # noqa: E501
        """
        pass

    def test_create_device_batch(self):
        """Test case for create_device_batch

        Create a devices batch  # noqa: E501
        """
        pass

    def test_create_ip_assignment(self):
        """Test case for create_ip_assignment

        Create an ip assignment  # noqa: E501
        """
        pass

    def test_delete_device(self):
        """Test case for delete_device

        Delete the device  # noqa: E501
        """
        pass

    def test_find_bgp_sessions(self):
        """Test case for find_bgp_sessions

        Retrieve all BGP sessions  # noqa: E501
        """
        pass

    def test_find_device_by_id(self):
        """Test case for find_device_by_id

        Retrieve a device  # noqa: E501
        """
        pass

    def test_find_device_customdata(self):
        """Test case for find_device_customdata

        Retrieve the custom metadata of an instance  # noqa: E501
        """
        pass

    def test_find_device_events(self):
        """Test case for find_device_events

        Retrieve device's events  # noqa: E501
        """
        pass

    def test_find_device_usages(self):
        """Test case for find_device_usages

        Retrieve all usages for device  # noqa: E501
        """
        pass

    def test_find_instance_bandwidth(self):
        """Test case for find_instance_bandwidth

        Retrieve an instance bandwidth  # noqa: E501
        """
        pass

    def test_find_ip_assignment_customdata(self):
        """Test case for find_ip_assignment_customdata

        Retrieve the custom metadata of an IP Assignment  # noqa: E501
        """
        pass

    def test_find_ip_assignments(self):
        """Test case for find_ip_assignments

        Retrieve all ip assignments  # noqa: E501
        """
        pass

    def test_find_organization_devices(self):
        """Test case for find_organization_devices

        Retrieve all devices of an organization  # noqa: E501
        """
        pass

    def test_find_project_devices(self):
        """Test case for find_project_devices

        Retrieve all devices of a project  # noqa: E501
        """
        pass

    def test_find_project_usage(self):
        """Test case for find_project_usage

        Retrieve all usages for project  # noqa: E501
        """
        pass

    def test_find_traffic(self):
        """Test case for find_traffic

        Retrieve device traffic  # noqa: E501
        """
        pass

    def test_get_bgp_neighbor_data(self):
        """Test case for get_bgp_neighbor_data

        Retrieve BGP neighbor data for this device  # noqa: E501
        """
        pass

    def test_perform_action(self):
        """Test case for perform_action

        Perform an action  # noqa: E501
        """
        pass

    def test_update_device(self):
        """Test case for update_device

        Update the device  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
