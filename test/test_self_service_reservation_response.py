# coding: utf-8

"""
    Metal API

    This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import metal
from metal.types.self_service_reservation_response import SelfServiceReservationResponse  # noqa: E501
from metal.rest import ApiException

class TestSelfServiceReservationResponse(unittest.TestCase):
    """SelfServiceReservationResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SelfServiceReservationResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = metal.models.self_service_reservation_response.SelfServiceReservationResponse()  # noqa: E501
        if include_optional :
            return SelfServiceReservationResponse(
                status = '', 
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                period = metal.models.create_self_service_reservation_request_period.CreateSelfServiceReservationRequest_period(
                    unit = 'monthly', 
                    count = 1.337, ), 
                total_cost = 56, 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                notes = '', 
                organization = '', 
                organization_id = '', 
                project = '', 
                project_id = '', 
                item = [
                    metal.models.self_service_reservation_item_response.SelfServiceReservationItemResponse(
                        id = '', 
                        metro_id = '', 
                        metro_code = '', 
                        metro_name = '', 
                        plan_id = '', 
                        plan_name = '', 
                        plan_slug = '', 
                        quantity = 56, 
                        amount = 1.337, 
                        term = '', )
                    ]
            )
        else :
            return SelfServiceReservationResponse(
        )

    def testSelfServiceReservationResponse(self):
        """Test SelfServiceReservationResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
