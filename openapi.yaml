openapi: 3.0.1
info:
  contact:
    email: support@equinixmetal.com
    name: Equinix Metal API Team
  description: |
    This is the API for Equinix Metal. The API allows you to programmatically interact with all
    of your Equinix Metal resources, including devices, networks, addresses, organizations,
    projects, and your user account.

    The official API docs are hosted at <https://metal.equinix.com/developers/api>.
  license:
    name: Equinix Metal
    url: https://metal.equinix.com/legal/
  termsOfService: https://metal.equinix.com/legal/
  title: Metal API
  version: 1.0.0
servers:
- url: https://api.equinix.com/metal/v1
security:
- x_auth_token: []
tags:
- description: |+
    Hint: Equinix Metal's API can be reached at https://api.equinix.com/metal/v1

    Most of the endpoints in the API require authentication. Authenticating is done with an authentication token in the X-Auth-Token header.

    ```
    curl -H 'X-Auth-Token: my_authentication_token'
    ```

    Authentication tokens are used to identify the user your application is connecting to the API on behalf of. Think of authentication tokens as permanent sessions—the user creates authentication tokens, and your app can use them to connect to the API on their behalf until they delete the token.

  name: Authentication
- description: |
    The Equinix Metal API uses a few methods to minimize network traffic and bandwidth:

    `include`

    For resources that contain collections of other resources, the Equinix Metal API will return links to the other resources by default.

    ```json
    {
      ...
      // Includes "href" links if the resource is reachable through the API.
      "projects": [
        { "href": "/projects/5b590e4f-be96-4400-ae32-c315ee67964d" },
        { "href": "/projects/f3f131c8-f302-49ef-8c44-9405022dc6dd" }
      ],
      // Includes "id" attributes if not.
      "emails": [
        { "id": "eb5d8c89-4d15-4c87-859c-5ae190ad5d9a" },
        { "id": "c17f77ad-9070-4084-abaa-7538581d9523" }
      ]
      ...
    }
    ```

    However, if you're interested in acting on resources in the projects collection, it doesn't make sense to make a separate API call to retrieve each project. Instead, you can specify which collections you'd like to be included using the include parameter.

    ```
    /user?include=projects
    ```
    will return

    ```json
    {
      ...
      "projects": [
        {
          "href": "/projects/c851d3c5-d55d-4b1a-99f1-96fc64768bc3",
          "id": "c851d3c5-d55d-4b1a-99f1-96fc64768bc3",
          "name": "Project 1",
          ...
        },
        {
          "href": "/projects/21f8e88b-bd4e-44ca-b956-4f3f88e6e5f2",
          "id": "21f8e88b-bd4e-44ca-b956-4f3f88e6e5f2",
          "name": "Project 2",
          ...
        }
      ],
      ...
    }
    ```

    The `include` parameter is accepted for all `GET` requests on all resources and collections, and should be specified as a comma-separated list.

    ```
    /user?include=emails,projects,memberships
    ```

    You may also include nested associations up to 3 levels deep using dot notation:

    ```
    /user?include=memberships.projects
    ```
  name: Common Parameters
- description: |
    Equinix Metal uses conventional HTTP response codes to indicate the success or failure of an API request.

    In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with Equinix Metal's servers (these are rare).

    | Code                               | Summary
    | ---------------------------------- | ------------------------------------------------------
    | 200 OK                             | Everything worked as expected.
    | 201 Create                         | Everything worked as expected, the resource was created.
    | 422 Bad Request                    | The request was unacceptable, often due to missing a required parameter.
    | 401 Unauthorized                   | No valid API key provided.
    | 404 Not Found                      | The requested resource doesn't exist.
    | 500, 502, 503, 504 - Server Errors | Something went wrong on Equinix Metal's end. (These are rare.)

    Errors (4xx, 5xx) reported by the API will include a JSON error response.  This response will be structured as one of the following:

    ```json
    {"error": "the error message"}
    ```

    or

    ```json
    {"errors": ["one error", "another error"}
    ```

    The JSON response is not guaranteed so check the HTTP status message. JSON may not be included if the error is reported by an API intermediary, like a loadbalancer service.
  name: Errors
- description: Manage device batches. See project endpoints to list batches for a
    particular project. Check out the product docs to learn more about [Batch Deployment](https://metal.equinix.com/developers/docs/deploy/batch-deployment/).
  name: Batches
- description: Manage BGP configs and sessions. See device endpoints to create and
    list BGP sessions for a particular device. Check out the product docs to learn
    more about [Local and Global BGP](https://metal.equinix.com/developers/docs/networking/local-global-bgp/).
  name: BGP
- description: Capacity Management. Check out the product docs to learn more about
    [Capacity](https://metal.equinix.com/developers/docs/locations/capacity/).
  name: Capacity
- description: Network Interconnections. See Instructions to create Network Interconnections
    at Check out the product docs to learn more about [Equinix Fabric](https://metal.equinix.com/developers/docs/networking/fabric/).
  name: Connections
- description: Device Management. Check out the product docs to learn more about [Server
    Devices](https://metal.equinix.com/developers/docs/servers/).
  name: Devices
- description: Email Management
  name: Emails
- description: Event Management
  name: Events
- description: Facility Management. Check out the product docs to learn more about
    [Facilities](https://metal.equinix.com/developers/docs/locations/).
  name: Facilities
- description: Global BGP Range Management
  name: GlobalBgpRanges
- description: Hardware Reservation Management. Check out the product docs to learn
    more about [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/).
  name: HardwareReservations
- description: Incident Management
  name: Incidents
- description: Manage invitations. See project endpoints to create a new invitation.
    Check out the product docs to learn more about [Invitations](https://metal.equinix.com/developers/docs/accounts/).
  name: Invitations
- description: Manage IP addresses. See device and project endpoints to list and create
    IP assignments for a particular project or device. Check out the product docs
    to learn more about [the basic networking features](https://metal.equinix.com/developers/docs/networking/standard-ips/).
  name: IPAddresses
- description: Manage licenses. See project endpoints to list and create licenses
    for a particular project.
  name: Licenses
- description: Membership Management (Project). Check out the product docs to learn
    more about [Membership](https://metal.equinix.com/developers/docs/accounts/).
  name: Memberships
- description: Metal Gateway Management.Check out the product docs to learn more about
    [Metal Gateways](https://metal.equinix.com/developers/docs/networking/metal-gateway/).
  name: MetalGateways
- description: Metro Management. Check out the product docs to learn more about [Metros](https://metal.equinix.com/developers/docs/locations/metros/).
  name: Metros
- description: Operating System Management. Check out the product docs to learn more
    about [Operating Systems choices](https://metal.equinix.com/developers/docs/operating-systems/).
  name: OperatingSystems
- description: Operating System Version Management
  name: OperatingSystemVersions
- description: Organizations Management. Check out the product docs to learn more
    about [Organizations](https://metal.equinix.com/developers/docs/accounts/).
  name: Organizations
- description: Otps ManagementCheck out the product docs to learn more about [OTP](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).
  name: Otps
- description: Password Reset Token Management
  name: PasswordResetTokens
- description: Payment Method Management
  name: PaymentMethods
- description: Plan Management (Device). Check out the product docs to learn more
    about [Device Plans](https://metal.equinix.com/developers/docs/servers/).
  name: Plans
- description: Port ManagementCheck out the product docs to learn more about [Port
    configurations](https://metal.equinix.com/developers/docs/networking/layer2/).
  name: Ports
- description: Project Management. Check out the product docs to learn more about
    [Projects](https://metal.equinix.com/developers/docs/accounts/).
  name: Projects
- description: Spot Market Prices Management. Check out the product docs to learn
    more about [Spot Market features](https://metal.equinix.com/developers/docs/deploy/spot-market/).
  name: Market
- description: Self Service Reservations
  name: SelfServiceReservations
- description: Spot Market Requests Management. Check out the product docs to learn
    more about [Spot Market features](https://metal.equinix.com/developers/docs/deploy/spot-market/).
  name: SpotMarketRequest
- description: Manage SSH keys. See project endpoints to list and create project-level
    SSH keys.
  name: SSHKeys
- description: Support request
  name: SupportRequest
- description: Project Transfer Requests Management
  name: TransferRequests
- description: Two Factor Authentication Management. Check out the product docs to
    learn more about [2FA](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).
  name: TwoFactorAuth
- description: Usage Management
  name: Usages
- description: Userdata Management
  name: Userdata
- description: User Management
  name: Users
- description: User Verification Token Management
  name: UserVerificationTokens
- description: Manage virtual networks (VLANs). See project endpoints to list and
    create virtual networks. Check out the product docs to learn more about [VLANs](https://metal.equinix.com/developers/docs/networking/layer2/).
  name: VLANs
- description: 'Volume Management (Block Storage). Notice: Block storage support will
    be deprecated soon. Please check here: https://metal.equinix.com/developers/docs/resilience-recovery/elastic-block-storage/
    for more details.'
  name: Volumes
paths:
  /user/api-keys:
    get:
      description: Returns all API keys for the current user.
      operationId: findAPIKeys
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all user API keys
      tags:
      - Authentication
    post:
      description: Creates a API key for the current user.
      operationId: createAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenInput'
        description: API key to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a API key
      tags:
      - Authentication
      x-codegen-request-body-name: auth_token
  /user/api-keys/{id}:
    delete:
      description: Deletes the current user API key.
      operationId: deleteUserAPIKey
      parameters:
      - description: API Key UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the API key
      tags:
      - Authentication
  /projects/{id}/api-keys:
    get:
      description: Returns all API keys for a specific project.
      operationId: findProjectAPIKeys
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all API keys for the project.
      tags:
      - Authentication
    post:
      description: Creates an API key for a project.
      operationId: createProjectAPIKey
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenInput'
        description: API Key to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create an API key for a project.
      tags:
      - Authentication
      x-codegen-request-body-name: auth_token
  /api-keys/{id}:
    delete:
      description: Deletes the API key.
      operationId: deleteAPIKey
      parameters:
      - description: API Key UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the API key
      tags:
      - Authentication
  /projects/{id}/batches:
    get:
      description: Returns all batches for the given project
      operationId: findBatchesByProject
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all batches by project
      tags:
      - Projects
  /batches/{id}:
    delete:
      description: Deletes the Batch.
      operationId: deleteBatch
      parameters:
      - description: Batch UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Delete all instances created from this batch
        in: query
        name: remove_associated_instances
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: no content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the Batch
      tags:
      - Batches
    get:
      description: Returns a Batch
      operationId: findBatchById
      parameters:
      - description: Batch UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a Batch
      tags:
      - Batches
  /projects/{id}/bgp-configs:
    post:
      description: Requests to enable bgp configuration for a project.
      operationId: requestBgpConfig
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgpConfigRequestInput'
        description: BGP config Request to create
        required: true
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Requesting bgp config
      tags:
      - Projects
      x-codegen-request-body-name: bgp_config_request
  /projects/{id}/bgp-config:
    get:
      description: Returns a bgp config
      operationId: findBgpConfigByProject
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpConfig'
          description: |
            ok

            When BGP configuration is not enabled empty structure is returned.
            When BGP configuration is disabled after being enabled BGP configuration data is returned with status disabled.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: |
            not found

            The project was not found.
      summary: Retrieve a bgp config
      tags:
      - Projects
  /devices/{id}/bgp/neighbors:
    get:
      description: Provides a summary of the BGP neighbor data associated to the BGP
        sessions for this device.
      operationId: getBgpNeighborData
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSessionNeighbors'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve BGP neighbor data for this device
      tags:
      - Devices
  /projects/{id}/bgp/sessions:
    get:
      description: Provides a listing of available BGP sessions for the project.
      operationId: findProjectBgpSessions
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSessionList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all BGP sessions for project
      tags:
      - Projects
  /devices/{id}/bgp/sessions:
    get:
      description: Provides a listing of available BGP sessions for the device.
      operationId: findBgpSessions
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSessionList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
      summary: Retrieve all BGP sessions
      tags:
      - Devices
    post:
      description: Creates a BGP session.
      operationId: createBgpSession
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPSessionInput'
        description: BGP session to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSession'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a BGP session
      tags:
      - Devices
      x-codegen-request-body-name: bgp_session
  /bgp/sessions/{id}:
    delete:
      description: Deletes the BGP session.
      operationId: deleteBgpSession
      parameters:
      - description: BGP session UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the BGP session
      tags:
      - BGP
    get:
      description: Returns a BGP session
      operationId: findBgpSessionById
      parameters:
      - description: BGP session UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSession'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a BGP session
      tags:
      - BGP
    put:
      description: Updates the BGP session by either enabling or disabling the default
        route functionality.
      operationId: updateBgpSession
      parameters:
      - description: BGP session UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Default route
        required: true
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the BGP session
      tags:
      - BGP
      x-codegen-request-body-name: default_route
  /capacity:
    get:
      description: Returns a list of facilities and plans with their current capacity.
      operationId: findCapacityForFacility
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: View capacity
      tags:
      - Capacity
    post:
      description: Validates if a deploy can be fulfilled.
      operationId: checkCapacityForFacility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityInput'
        description: Facility to check capacity in
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCheckPerFacilityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Check capacity
      tags:
      - Capacity
      x-codegen-request-body-name: facility
  /capacity/metros:
    get:
      description: Returns a list of metros and plans with their current capacity.
      operationId: findCapacityForMetro
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetroCapacityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: View capacity for metros
      tags:
      - Capacity
    post:
      description: Validates if a deploy can be fulfilled in a metro.
      operationId: checkCapacityForMetro
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityPerMetroInput'
        description: Metro to check capacity in
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCheckPerMetroList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Check capacity for a metro
      tags:
      - Capacity
      x-codegen-request-body-name: servers
  /organizations/{id}/capacity/metros:
    get:
      description: Returns a list of metros and plans with their current capacity.
      operationId: findOrganizationCapacityPerMetro
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetroCapacityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
      summary: View available hardware plans per Metro for given organization
      tags:
      - Capacity
  /organizations/{id}/capacity:
    get:
      description: Returns a list of facilities and plans with their current capacity.
      operationId: findOrganizationCapacityPerFacility
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
      summary: View available hardware plans per Facility for given organization
      tags:
      - Capacity
  /devices/{id}/events:
    get:
      description: Returns a list of events pertaining to a specific device
      operationId: findDeviceEvents
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve device's events
      tags:
      - Events
  /organizations/{id}/events:
    get:
      description: Returns a list of events for a single organization
      operationId: findOrganizationEvents
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve organization's events
      tags:
      - Events
  /projects/{id}/events:
    get:
      description: Returns a list of events for a single project
      operationId: findProjectEvents
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve project's events
      tags:
      - Events
  /volumes/{id}/events:
    get:
      description: Returns a list of the current volume’s events
      operationId: findVolumeEvents
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve volume's events
      tags:
      - Events
  /events:
    get:
      description: Returns a list of the current user’s events
      operationId: findEvents
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve current user's events
      tags:
      - Events
  /events/{id}:
    get:
      description: Returns a single event if the user has access
      operationId: findEventById
      parameters:
      - description: Event UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve an event
      tags:
      - Events
  /connections/{connection_id}/events:
    get:
      description: Returns a list of the connection events
      operationId: findConnectionEvents
      parameters:
      - description: Connection UUID
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve connection events
      tags:
      - Events
  /connections/{connection_id}/ports/{id}/events:
    get:
      description: Returns a list of the connection port events
      operationId: findConnectionPortEvents
      parameters:
      - description: Connection UUID
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Connection Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve connection port events
      tags:
      - Events
  /virtual-circuit/{id}/events:
    get:
      description: Returns a list of the virtual circuit events
      operationId: findVirtualCircuitEvents
      parameters:
      - description: Virtual Circuit UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve connection events
      tags:
      - Events
  /facilities:
    get:
      description: Provides a listing of available datacenters where you can provision
        Packet devices.
      operationId: findFacilities
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            enum:
            - address
            - labels
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          default: '["address"]'
          items:
            enum:
            - address
            - labels
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all facilities
      tags:
      - Facilities
  /projects/{id}/facilities:
    get:
      description: Returns a listing of available datacenters for the given project
      operationId: findFacilitiesByProject
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all facilities visible by the project
      tags:
      - Facilities
  /organizations/{id}/facilities:
    get:
      description: Returns a listing of available datacenters for the given organization
      operationId: findFacilitiesByOrganization
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all facilities visible by the organization
      tags:
      - Facilities
  /projects/{id}/global-bgp-ranges:
    get:
      description: Returns all global bgp ranges for a project
      operationId: findGlobalBgpRanges
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalBgpRangeList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all global bgp ranges
      tags:
      - GlobalBgpRanges
  /projects/{id}/hardware-reservations:
    get:
      description: Provides a collection of hardware reservations for a given project.
      operationId: findProjectHardwareReservations
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareReservationList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all hardware reservations for a given project
      tags:
      - Projects
  /hardware-reservations/{id}:
    get:
      description: Returns a single hardware reservation
      operationId: findHardwareReservationById
      parameters:
      - description: HardwareReservation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a hardware reservation
      tags:
      - HardwareReservations
  /incidents:
    get:
      description: Retrieve the number of incidents.
      operationId: findIncidents
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve the number of incidents
      tags:
      - Incidents
  /devices/{id}/actions:
    post:
      description: 'Performs an action for the given device.  Possible actions include:
        power_on, power_off, reboot, reinstall, and rescue (reboot the device into
        rescue OS.)'
      operationId: performAction
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Action to perform
        in: query
        name: type
        required: true
        schema:
          enum:
          - power_on
          - power_off
          - reboot
          - rescue
          - reinstall
          type: string
      responses:
        "202":
          content: {}
          description: accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Perform an action
      tags:
      - Devices
  /organizations/{id}/devices:
    get:
      description: Provides a collection of devices for a given organization.
      operationId: findOrganizationDevices
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all devices of an organization
      tags:
      - Organizations
  /projects/{id}/devices:
    get:
      description: Provides a collection of devices for a given project.
      operationId: findProjectDevices
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all devices of a project
      tags:
      - Projects
    post:
      description: |-
        Creates a new device and provisions it in the specified location.

              Device type-specific options are accepted.  For example, `baremetal` devices accept `operating_system`, `hostname`, and `plan`. These parameters may not be accepted for other device types. The default device type is `baremetal`.
      operationId: createDevice
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCreateInput'
        description: Device to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a device
      tags:
      - Projects
      x-codegen-request-body-name: device
  /devices/{id}:
    delete:
      description: Deletes a device and deprovisions it in our datacenter.
      operationId: deleteDevice
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Force the deletion of the device, by detaching any storage volume
          still active.
        in: query
        name: force_delete
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Delete the device
      tags:
      - Devices
    get:
      description: |-
        Type-specific options (such as facility for baremetal devices) will be included as part of the main data structure.
                                 State value can be one of: active inactive queued or provisioning
      operationId: findDeviceById
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a device
      tags:
      - Devices
    put:
      description: Updates the device.
      operationId: updateDevice
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdateInput'
        description: Facility to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the device
      tags:
      - Devices
      x-codegen-request-body-name: device
  /projects/{id}/devices/batch:
    post:
      description: |-
        Creates new devices in batch and provisions them in our datacenter.

        Type-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.

        The features attribute allows you to optionally specify what features your server should have.

        For example, if you require a server with a TPM chip, you may specify `{ "features": { "tpm": "required" } }` (or `{ "features": ["tpm"] }` in shorthand).

        The request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).

        The request will not fail if we have no servers with that feature in our inventory.

        The facilities attribute specifies in what datacenter you wish to create the device.

        You can either specify a single facility `{ "facility": "f1" }` , or you can instruct to create the device in the best available datacenter `{ "facility": "any" }`. Additionally it is possible to set a prioritized location selection.

        For example `{ "facility": ["f3", "f2", "any"] }` will try to assign to the facility f3, if there are no available f2, and so on. If "any" is not specified for "facility", the request will fail unless it can assign in the selected locations.

        With `{ "facility": "any" }` you have the option to diversify to indicate how many facilities you are willing to be spread across. For this purpose use parameter: `facility_diversity_level = N`.

        For example:

        `{ "facilities": ["sjc1", "ewr1", "any"] ,  "facility_diversity_level" = 1, "quantity" = 10 }` will assign 10 devices into the same facility, trying first in "sjc1", and if there aren’t available, it will try in  "ewr1", otherwise any other.

        The `ip_addresses` attribute will allow you to specify the addresses you want created with your device.

        To maintain backwards compatibility, If the attribute is not sent in the request, it will be treated as if `{ "ip_addresses": [{ "address_family": 4, "public": true }, { "address_family": 4, "public": false }, { "address_family": 6, "public": true }] }` was sent.

        The private IPv4 address is required and always need to be sent in the array. Not all operating systems support no public IPv4 address, so in those cases you will receive an error message.

        For example, to only configure your server with a private IPv4 address, you can send `{ "ip_addresses": [{ "address_family": 4, "public": false }] }`.

        Note: when specifying a subnet size larger than a /30, you will need to supply the UUID(s) of existing ip_reservations in your project to assign IPs from.

        For example, `{ "ip_addresses": [..., {"address_family": 4, "public": true, "ip_reservations": ["uuid1", "uuid2"]}] }`

        To access a server without public IPs, you can use our Out-of-Band console access (SOS) or use another server with public IPs as a proxy.
      operationId: createDeviceBatch
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesBatchCreateInput'
        description: Batches to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesList'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a devices batch
      tags:
      - Devices
      x-codegen-request-body-name: batch
  /devices/{id}/bandwidth:
    get:
      description: Retrieve an instance bandwidth for a given period of time.
      operationId: findInstanceBandwidth
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Timestamp from range
        in: query
        name: from
        required: true
        schema:
          type: string
      - description: Timestamp to range
        in: query
        name: until
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve an instance bandwidth
      tags:
      - Devices
  /organizations/{organization_id}/connections:
    get:
      description: List the connections belonging to the organization
      operationId: organizationListInterconnections
      parameters:
      - description: UUID of the organization
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionList'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: List organization connections
      tags:
      - Connections
    post:
      description: Creates a new connection request. A Project ID must be specified
        in the request body for connections on shared ports.
      operationId: createOrganizationInterconnection
      parameters:
      - description: UUID of the organization
        in: path
        name: organization_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterconnectionCreateInput'
        description: Connection details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
          description: created
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Request a new connection for the organization
      tags:
      - Connections
      x-codegen-request-body-name: connection
  /projects/{project_id}/connections:
    get:
      description: List the connections belonging to the project
      operationId: projectListInterconnections
      parameters:
      - description: UUID of the project
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionList'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: List project connections
      tags:
      - Connections
    post:
      description: Creates a new connection request
      operationId: createProjectInterconnection
      parameters:
      - description: UUID of the project
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterconnectionCreateInput'
        description: Connection details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
          description: created
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Request a new connection for the project's organization
      tags:
      - Connections
      x-codegen-request-body-name: connection
  /connections/{connection_id}:
    delete:
      description: Delete a connection, its associated ports and virtual circuits.
      operationId: deleteInterconnection
      parameters:
      - description: Connection UUID
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
          description: accepted
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete connection
      tags:
      - Connections
    get:
      description: Get the details of a connection
      operationId: getInterconnection
      parameters:
      - description: Connection UUID
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Get connection
      tags:
      - Connections
    put:
      description: Update the details of a connection
      operationId: updateInterconnection
      parameters:
      - description: Connection UUID
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterconnectionUpdateInput'
        description: Updated connection details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Update connection
      tags:
      - Connections
      x-codegen-request-body-name: connection
  /connections/{connection_id}/ports:
    get:
      description: List the ports associated to an connection.
      operationId: listConnectionPorts
      parameters:
      - description: UUID of the connection
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionPortList'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: List a connection's ports
      tags:
      - Connections
  /connections/{connection_id}/ports/{id}:
    get:
      description: Get the details of an connection port.
      operationId: getConnectionPort
      parameters:
      - description: UUID of the connection
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionPort'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Get a connection port
      tags:
      - Connections
  /connections/{connection_id}/ports/{port_id}/virtual-circuits:
    get:
      description: List the virtual circuit record(s) associatiated with a particular
        connection port.
      operationId: listConnectionPortVirtualCircuits
      parameters:
      - description: UUID of the connection
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      - description: UUID of the connection port
        in: path
        name: port_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuitList'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: List a connection port's virtual circuits
      tags:
      - Connections
    post:
      description: Create a new Virtual Circuit on a dedicated connection using a
        Virtual Network record and an NNI VLAN value.
      operationId: createConnectionPortVirtualCircuit
      parameters:
      - description: UUID of the connection
        in: path
        name: connection_id
        required: true
        schema:
          format: uuid
          type: string
      - description: UUID of the connection port
        in: path
        name: port_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualCircuitCreateInput'
        description: Virtual Circuit details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuitList'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Create a new Virtual Circuit
      tags:
      - Connections
      x-codegen-request-body-name: virtual_circuit
  /virtual-circuits/{id}:
    delete:
      description: Delete a virtual circuit from a dedicated port.
      operationId: deleteVirtualCircuit
      parameters:
      - description: Virtual Circuit UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
          description: accepted
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete a virtual circuit
      tags:
      - Connections
    get:
      description: Get the details of a virtual circuit
      operationId: getVirtualCircuit
      parameters:
      - description: Virtual Circuit UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
          description: ok
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Get a virtual circuit
      tags:
      - Connections
    put:
      description: Update the details of a virtual circuit.
      operationId: updateVirtualCircuit
      parameters:
      - description: Virtual Circuit UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualCircuitUpdateInput'
        description: Updated Virtual Circuit details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
          description: ok
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
          description: accepted
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Update a virtual circuit
      tags:
      - Connections
      x-codegen-request-body-name: virtual_circuit
  /invitations/{id}:
    delete:
      description: Decline an invitation.
      operationId: declineInvitation
      parameters:
      - description: Invitation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Decline an invitation
      tags:
      - Invitations
    get:
      description: Returns a single invitation. (It include the `invitable` to maintain
        backward compatibility but will be removed soon)
      operationId: findInvitationById
      parameters:
      - description: Invitation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: View an invitation
      tags:
      - Invitations
    put:
      description: Accept an invitation.
      operationId: acceptInvitation
      parameters:
      - description: Invitation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Accept an invitation
      tags:
      - Invitations
  /projects/{project_id}/invitations:
    get:
      description: Returns all invitations in a project.
      operationId: findProjectInvitations
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve project invitations
      tags:
      - Invitations
    post:
      description: In order to add a user to a project, they must first be invited.
      operationId: createProjectInvitation
      parameters:
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationInput'
        description: Invitation to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create an invitation for a project
      tags:
      - Invitations
      x-codegen-request-body-name: invitation
  /organizations/{id}/invitations:
    get:
      description: Returns all invitations in an organization.
      operationId: findOrganizationInvitations
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve organization invitations
      tags:
      - Invitations
    post:
      description: |-
        In order to add a user to an organization, they must first be invited.
        To invite to several projects the parameter `projects_ids:[a,b,c]` can be used
      operationId: createOrganizationInvitation
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationInput'
        description: Invitation to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create an invitation for an organization
      tags:
      - Invitations
      x-codegen-request-body-name: invitation
  /invitations:
    get:
      description: Returns all invitations in current user.
      operationId: findInvitations
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve current user invitations
      tags:
      - Invitations
  /ips/{id}:
    delete:
      description: Note! This call can be used to un-assign an IP assignment or delete
        an IP reservation. Un-assign an IP address record. Use the assignment UUID
        you get after attaching the IP. This will remove the relationship between
        an IP and the device and will make the IP address available to be assigned
        to another device. Delete and IP reservation. Use the reservation UUID you
        get after adding the IP to the project. This will permanently delete the IP
        block reservation from the project.
      operationId: deleteIPAddress
      parameters:
      - description: IP Address UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Unassign an ip address
      tags:
      - IPAddresses
    get:
      description: Returns a single ip address if the user has access.
      operationId: findIPAddressById
      parameters:
      - description: IP Address UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignment'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve an ip address
      tags:
      - IPAddresses
    patch:
      description: Update details about an ip address
      operationId: updateIPAddress
      parameters:
      - description: IP Address UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Notes for this IP Assignment
        in: query
        name: details
        required: true
        schema:
          type: string
      - description: Provides the custom metadata stored for this IP Assignment in
          json format
        in: query
        name: customdata
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignment'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Update an ip address
      tags:
      - IPAddresses
  /devices/{id}/ips:
    get:
      description: Returns all ip assignments for a device.
      operationId: findIPAssignments
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignmentList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all ip assignments
      tags:
      - Devices
    post:
      description: Creates an ip assignment for a device.
      operationId: createIPAssignment
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAssignmentInput'
        description: IPAssignment to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignment'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create an ip assignment
      tags:
      - Devices
      x-codegen-request-body-name: ip_assignment
  /ips/{id}/available:
    get:
      description: Provides a list of IP resevations for a single project.
      operationId: findIPAvailabilities
      parameters:
      - description: IP Reservation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Size of subnets in bits
        in: query
        name: cidr
        required: true
        schema:
          enum:
          - "20"
          - "21"
          - "22"
          - "23"
          - "24"
          - "25"
          - "26"
          - "27"
          - "28"
          - "29"
          - "30"
          - "31"
          - "32"
          - "33"
          - "34"
          - "35"
          - "36"
          - "37"
          - "38"
          - "39"
          - "40"
          - "41"
          - "42"
          - "43"
          - "44"
          - "45"
          - "46"
          - "47"
          - "48"
          - "49"
          - "50"
          - "51"
          - "52"
          - "53"
          - "54"
          - "55"
          - "56"
          - "57"
          - "58"
          - "59"
          - "60"
          - "61"
          - "62"
          - "63"
          - "64"
          - "65"
          - "66"
          - "67"
          - "68"
          - "69"
          - "70"
          - "71"
          - "72"
          - "73"
          - "74"
          - "75"
          - "76"
          - "77"
          - "78"
          - "79"
          - "80"
          - "81"
          - "82"
          - "83"
          - "84"
          - "85"
          - "86"
          - "87"
          - "88"
          - "89"
          - "90"
          - "91"
          - "92"
          - "93"
          - "94"
          - "95"
          - "96"
          - "97"
          - "98"
          - "99"
          - "100"
          - "101"
          - "102"
          - "103"
          - "104"
          - "105"
          - "106"
          - "107"
          - "108"
          - "109"
          - "110"
          - "111"
          - "112"
          - "113"
          - "114"
          - "115"
          - "116"
          - "117"
          - "118"
          - "119"
          - "120"
          - "121"
          - "122"
          - "123"
          - "124"
          - "125"
          - "126"
          - "127"
          - "128"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAvailabilitiesList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all available subnets of a particular reservation
      tags:
      - IPAddresses
  /projects/{id}/ips:
    get:
      description: Provides a list of IP resevations for a single project.
      operationId: findIPReservations
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPReservationList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all ip reservations
      tags:
      - Projects
    post:
      description: Request more IP space for a project in order to have additional
        IP addresses to assign to devices.  If the request is within the max quota,
        an IP reservation will be created. If the project will exceed its IP quota,
        a request will be submitted for review, and will return an IP Reservation
        with a `state` of `pending`. You can automatically have the request fail with
        HTTP status 422 instead of triggering the review process by providing the
        `fail_on_approval_required` parameter set to `true` in the request.
      operationId: requestIPReservation
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPReservationRequestInput'
        description: IP Reservation Request to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPReservation'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Requesting IP reservations
      tags:
      - Projects
      x-codegen-request-body-name: ip_reservation_request
  /projects/{id}/licenses:
    get:
      description: Provides a collection of licenses for a given project.
      operationId: findProjectLicenses
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all licenses
      tags:
      - Projects
    post:
      description: Creates a new license for the given project
      operationId: createLicense
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseCreateInput'
        description: License to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a License
      tags:
      - Projects
      x-codegen-request-body-name: license
  /licenses/{id}:
    delete:
      description: Deletes a license.
      operationId: deleteLicense
      parameters:
      - description: License UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the license
      tags:
      - Licenses
    get:
      description: Returns a license
      operationId: findLicenseById
      parameters:
      - description: License UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a license
      tags:
      - Licenses
    put:
      description: Updates the license.
      operationId: updateLicense
      parameters:
      - description: License UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseUpdateInput'
        description: License to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the license
      tags:
      - Licenses
      x-codegen-request-body-name: license
  /projects/{project_id}/memberships:
    get:
      description: Returns all memberships in a project.
      operationId: findProjectMemberships
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve project memberships
      tags:
      - Projects
  /memberships/{id}:
    delete:
      description: Deletes the membership.
      operationId: deleteMembership
      parameters:
      - description: Membership UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the membership
      tags:
      - Memberships
    get:
      description: Returns a single membership.
      operationId: findMembershipById
      parameters:
      - description: Membership UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a membership
      tags:
      - Memberships
    put:
      description: Updates the membership.
      operationId: updateMembership
      parameters:
      - description: Membership UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipInput'
        description: Membership to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the membership
      tags:
      - Memberships
      x-codegen-request-body-name: membership
  /projects/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this project in json format
      operationId: findProjectCustomdata
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of a project
      tags:
      - Projects
  /organizations/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this organization in json
        format
      operationId: findOrganizationCustomdata
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of an organization
      tags:
      - Organizations
  /users/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this user in json format
      operationId: findUserCustomdata
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of a user
      tags:
      - Users
  /devices/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this instance in json format
      operationId: findDeviceCustomdata
      parameters:
      - description: Instance UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of an instance
      tags:
      - Devices
  /storage/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this storage volume in
        json format
      operationId: findVolumeCustomdata
      parameters:
      - description: Storage Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of a storage volume
      tags:
      - Volumes
  /projects/{project_id}/ips/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this IP Reservation in
        json format
      operationId: findIPReservationCustomdata
      parameters:
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Ip Reservation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of an IP Reservation
      tags:
      - Projects
  /devices/{instance_id}/ips/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this IP Assignment in json
        format
      operationId: findIPAssignmentCustomdata
      parameters:
      - description: Instance UUID
        in: path
        name: instance_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Ip Assignment UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of an IP Assignment
      tags:
      - Devices
  /ips/{id}/customdata:
    get:
      description: Provides the custom metadata stored for this IP Reservation or
        IP Assignment in json format
      operationId: findIPAddressCustomdata
      parameters:
      - description: Ip Reservation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve the custom metadata of an IP Reservation or IP Assignment
      tags:
      - IPAddresses
  /locations/metros:
    get:
      description: Provides a listing of available metros
      operationId: findMetros
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetroList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all metros
      tags:
      - Metros
  /locations/metros/{id}:
    get:
      description: Show the details for a metro, including name, code, and country.
      operationId: getMetro
      parameters:
      - description: Metro UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metro'
          description: ok
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a specific Metro's details
      tags:
      - Metros
  /hardware-reservations/{id}/move:
    post:
      description: Move a hardware reservation to another project
      operationId: moveHardwareReservation
      parameters:
      - description: Hardware Reservation UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              format: uuid
              type: string
        description: Project UUID
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareReservation'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Move a hardware reservation
      tags:
      - HardwareReservations
      x-codegen-request-body-name: project_id
  /organizations/{id}/operating-systems:
    get:
      description: Returns a listing of available operating systems for the given
        organization
      operationId: findOperatingSystemsByOrganization
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all operating systems visible by the organization
      tags:
      - OperatingSystems
  /operating-systems:
    get:
      description: Provides a listing of available operating systems to provision
        your new device with.
      operationId: findOperatingSystems
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all operating systems
      tags:
      - OperatingSystems
  /operating-system-versions:
    get:
      description: Provides a listing of available operating system versions.
      operationId: findOperatingSystemVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all operating system versions
      tags:
      - OperatingSystemVersions
  /organizations:
    get:
      description: Returns a list of organizations that are accessible to the current
        user.
      operationId: findOrganizations
      parameters:
      - description: Include, exclude or show only personal organizations.
        in: query
        name: personal
        schema:
          enum:
          - include
          - exclude
          - only
          type: string
      - description: Include, exclude or show only organizations that have no projects.
        in: query
        name: without_projects
        schema:
          enum:
          - include
          - exclude
          - only
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all organizations
      tags:
      - Organizations
    post:
      description: Creates an organization.
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
        description: Organization to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create an organization
      tags:
      - Organizations
      x-codegen-request-body-name: organization
  /organizations/{id}:
    delete:
      description: Deletes the organization.
      operationId: deleteOrganization
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the organization
      tags:
      - Organizations
    get:
      description: Returns a single organization's details, if the user is authorized
        to view it.
      operationId: findOrganizationById
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve an organization's details
      tags:
      - Organizations
    put:
      description: Updates the organization.
      operationId: updateOrganization
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
        description: Organization to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the organization
      tags:
      - Organizations
      x-codegen-request-body-name: organization
  /user/otp/recovery-codes:
    get:
      description: Returns my recovery codes.
      operationId: findRecoveryCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryCodeList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Retrieve my recovery codes
      tags:
      - Otps
    post:
      description: Generate a new set of recovery codes.
      operationId: regenerateCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryCodeList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Generate new recovery codes
      tags:
      - Otps
  /user/otp/verify/{otp}:
    post:
      description: It verifies the user once a valid OTP is provided. It gives back
        a session token, essentially logging in the user.
      operationId: findEnsureOtp
      parameters:
      - description: OTP
        in: path
        name: otp
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Verify user by providing an OTP
      tags:
      - Otps
  /user/otp/sms/receive:
    post:
      description: Sends an OTP to the user's mobile phone.
      operationId: receiveCodes
      responses:
        "204":
          content: {}
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: internal server error
      summary: Receive an OTP per sms
      tags:
      - Otps
  /reset-password:
    delete:
      description: Resets current user password.
      operationId: resetPassword
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPassword'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Reset current user password
      tags:
      - PasswordResetTokens
    post:
      description: Creates a password reset token
      operationId: createPasswordResetToken
      parameters:
      - description: Email of user to create password reset token
        in: query
        name: email
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a password reset token
      tags:
      - PasswordResetTokens
  /organizations/{id}/payment-methods:
    get:
      description: Returns all payment methods of an organization.
      operationId: findOrganizationPaymentMethods
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all payment methods of an organization
      tags:
      - Organizations
    post:
      description: Creates a payment method.
      operationId: createPaymentMethod
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreateInput'
        description: Payment Method to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a payment method for the given organization
      tags:
      - Organizations
      x-codegen-request-body-name: payment_method
  /payment-methods/{id}:
    delete:
      description: Deletes the payment method.
      operationId: deletePaymentMethod
      parameters:
      - description: Payment Method UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the payment method
      tags:
      - PaymentMethods
    get:
      description: Returns a payment method
      operationId: findPaymentMethodById
      parameters:
      - description: Payment Method UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a payment method
      tags:
      - PaymentMethods
    put:
      description: Updates the payment method.
      operationId: updatePaymentMethod
      parameters:
      - description: Payment Method UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodUpdateInput'
        description: Payment Method to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the payment method
      tags:
      - PaymentMethods
      x-codegen-request-body-name: payment_method
  /plans:
    get:
      description: Provides a listing of available plans to provision your device
        on.
      operationId: findPlans
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all plans
      tags:
      - Plans
  /projects/{id}/plans:
    get:
      description: Returns a listing of available plans for the given project
      operationId: findPlansByProject
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all plans visible by the project
      tags:
      - Plans
  /organizations/{id}/plans:
    get:
      description: Returns a listing of available plans for the given organization
      operationId: findPlansByOrganization
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all plans visible by the organization
      tags:
      - Plans
  /ports/{id}:
    get:
      description: Returns a port
      operationId: findPortById
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a port
      tags:
      - Ports
  /ports/{id}/assign:
    post:
      description: Assign a port for a hardware to virtual network.
      operationId: assignPort
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortAssignInput'
        description: 'Virtual Network ID. May be the UUID of the Virtual Network record,
          or the VLAN value itself (ex: ''1001'').'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Assign a port to virtual network
      tags:
      - Ports
      x-codegen-request-body-name: vnid
  /ports/{id}/unassign:
    post:
      description: Unassign a port for a hardware.
      operationId: unassignPort
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortAssignInput'
        description: 'Virtual Network ID. May be the UUID of the Virtual Network record,
          or the VLAN value itself (ex: ''1001'').'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Unassign a port
      tags:
      - Ports
      x-codegen-request-body-name: vnid
  /ports/{id}/disbond:
    post:
      description: Disabling bonding for one or all ports
      operationId: disbondPort
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: disable both ports
        in: query
        name: bulk_disable
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Disabling bonding
      tags:
      - Ports
  /ports/{id}/bond:
    post:
      description: Enabling bonding for one or all ports
      operationId: bondPort
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: enable both ports
        in: query
        name: bulk_enable
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Enabling bonding
      tags:
      - Ports
  /ports/{id}/convert/layer-2:
    post:
      description: Converts a bond port to Layer 2. IP assignments of the port will
        be removed.
      operationId: convertLayer2
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortAssignInput'
        description: Virtual Network ID
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Convert to Layer 2
      tags:
      - Ports
      x-codegen-request-body-name: vnid
  /ports/{id}/convert/layer-3:
    post:
      description: Converts a bond port to Layer 3. VLANs must first be unassigned.
      operationId: convertLayer3
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortConvertLayer3Input'
        description: IPs to request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Convert to Layer 3
      tags:
      - Ports
      x-codegen-request-body-name: request_ips
  /ports/{id}/native-vlan:
    delete:
      description: Removes the native VLAN from this port
      operationId: deleteNativeVlan
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Remove native VLAN
      tags:
      - Ports
    post:
      description: Sets a virtual network on this port as a "native VLAN". The VLAN
        must have already been assigned using the using the "Assign a port to a virtual
        network" operation.
      operationId: assignNativeVlan
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'Virtual Network ID. May be the UUID of the Virtual Network record,
          or the VLAN value itself (ex: ''1001'').'
        in: query
        name: vnid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Assign a native VLAN
      tags:
      - Ports
  /organizations/{id}/projects:
    get:
      description: Returns a collection of projects that belong to the organization.
      operationId: findOrganizationProjects
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all projects of an organization
      tags:
      - Organizations
    post:
      description: Creates a new project for the organization
      operationId: createOrganizationProject
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateInput'
        description: Project to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a project for the organization
      tags:
      - Organizations
      x-codegen-request-body-name: project
  /projects:
    get:
      description: Returns a collection of projects that the current user is a member
        of.
      operationId: findProjects
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all projects
      tags:
      - Projects
    post:
      description: Creates a new project for the user default organization. If the
        user don't have an organization, a new one will be created.
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateFromRootInput'
        description: Project to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a project
      tags:
      - Projects
      x-codegen-request-body-name: project
  /projects/{id}:
    delete:
      description: Deletes the project.
      operationId: deleteProject
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the project
      tags:
      - Projects
    get:
      description: Returns a single project if the user has access
      operationId: findProjectById
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a project
      tags:
      - Projects
    put:
      description: Updates the project.
      operationId: updateProject
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateInput'
        description: Project to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the project
      tags:
      - Projects
      x-codegen-request-body-name: project
  /projects/{project_id}/self-service/reservations:
    get:
      description: Returns all reservations.
      operationId: findSelfServiceReservations
      parameters:
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceReservationList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all reservations
      tags:
      - SelfServiceReservations
    post:
      description: Creates a reservation.
      operationId: createSelfServiceReservation
      parameters:
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSelfServiceReservationRequest'
        description: reservation to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceReservationResponse'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a reservation
      tags:
      - SelfServiceReservations
      x-codegen-request-body-name: reservation
  /projects/{project_id}/self-service/reservations/{id}:
    get:
      description: Returns a reservation
      operationId: findSelfServiceReservation
      parameters:
      - description: Reservation short_id
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceReservationResponse'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a reservation
      tags:
      - SelfServiceReservations
  /market/spot/prices:
    get:
      description: Get Equinix Metal current spot market prices.
      operationId: findSpotMarketPrices
      parameters:
      - description: Facility to check spot market prices
        in: query
        name: facility
        schema:
          type: string
      - description: Plan to check spot market prices
        in: query
        name: plan
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketPricesList'
          description: ok
      summary: Get current spot market prices
      tags:
      - Market
  /market/spot/prices/history:
    get:
      description: |-
        Get spot market prices for a given plan and facility in a fixed period of time

        *Note: In the `200` response, the property `datapoints` contains arrays of `[float, integer]`.*
      operationId: findSpotMarketPricesHistory
      parameters:
      - description: Facility to check spot market prices
        in: query
        name: facility
        required: true
        schema:
          type: string
      - description: Plan to check spot market prices
        in: query
        name: plan
        required: true
        schema:
          type: string
      - description: Metro to check spot market price history
        in: query
        name: metro
        schema:
          type: string
      - description: Timestamp from range
        in: query
        name: from
        required: true
        schema:
          type: string
      - description: Timestamp to range
        in: query
        name: until
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotPricesHistoryReport'
          description: ok
      summary: Get spot market prices for a given period of time
      tags:
      - Market
  /market/spot/prices/metros:
    get:
      description: Get Equinix Metal current spot market prices for all metros.
      operationId: findMetroSpotMarketPrices
      parameters:
      - description: Metro to filter spot market prices
        in: query
        name: metro
        schema:
          type: string
      - description: Plan to filter spot market prices
        in: query
        name: plan
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketPricesPerMetroList'
          description: ok
      summary: Get current spot market prices for metros
      tags:
      - Market
  /projects/{id}/spot-market-requests:
    get:
      description: View all spot market requests for a given project.
      operationId: listSpotMarketRequests
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketRequestList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: List spot market requests
      tags:
      - Projects
    post:
      description: |-
        Creates a new spot market request.

        Type-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.

        The features attribute allows you to optionally specify what features your server should have. For example, if you require a server with a TPM chip, you may specify `{ "features": { "tpm": "required" } }` (or `{ "features": ["tpm"] }` in shorthand).

        The request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).

        The request will not fail if we have no servers with that feature in our inventory.
      operationId: createSpotMarketRequest
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpotMarketRequestCreateInput'
        description: Spot Market Request to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketRequest'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a spot market request
      tags:
      - Projects
      x-codegen-request-body-name: spot_market_request
  /spot-market-requests/{id}:
    delete:
      description: Deletes the spot market request.
      operationId: deleteSpotMarketRequest
      parameters:
      - description: SpotMarketRequest UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Terminate associated spot instances
        in: query
        name: force_termination
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the spot market request
      tags:
      - SpotMarketRequest
    get:
      description: Returns a single spot market request
      operationId: findSpotMarketRequestById
      parameters:
      - description: SpotMarketRequest UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketRequest'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a spot market request
      tags:
      - SpotMarketRequest
  /ssh-keys:
    get:
      description: Returns a collection of the user’s ssh keys.
      operationId: findSSHKeys
      parameters:
      - description: Search by key, label, or fingerprint
        in: query
        name: Search string
        schema:
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all ssh keys
      tags:
      - SSHKeys
    post:
      description: Creates a ssh key.
      operationId: createSSHKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKeyCreateInput'
        description: ssh key to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a ssh key for the current user
      tags:
      - SSHKeys
      x-codegen-request-body-name: ssh key
  /projects/{id}/ssh-keys:
    get:
      description: Returns a collection of the project's ssh keys.
      operationId: findProjectSSHKeys
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Search by key, label, or fingerprint
        in: query
        name: Search string
        schema:
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve a project's ssh keys
      tags:
      - Projects
    post:
      description: Creates a ssh key.
      operationId: createProjectSSHKey
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKeyCreateInput'
        description: ssh key to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a ssh key for the given project
      tags:
      - Projects
      x-codegen-request-body-name: ssh key
  /devices/{id}/ssh-keys:
    get:
      description: Returns a collection of the device's ssh keys.
      operationId: findDeviceSSHKeys
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Search by key, label, or fingerprint
        in: query
        name: Search string
        schema:
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve a device's ssh keys
      tags:
      - Projects
  /ssh-keys/{id}:
    delete:
      description: Deletes the ssh key.
      operationId: deleteSSHKey
      parameters:
      - description: ssh key UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the ssh key
      tags:
      - SSHKeys
    get:
      description: Returns a single ssh key if the user has access
      operationId: findSSHKeyById
      parameters:
      - description: SSH Key UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a ssh key
      tags:
      - SSHKeys
    put:
      description: Updates the ssh key.
      operationId: updateSSHKey
      parameters:
      - description: SSH Key UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKeyInput'
        description: ssh key to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the ssh key
      tags:
      - SSHKeys
      x-codegen-request-body-name: ssh key
  /storage/{id}/attachments:
    get:
      deprecated: true
      description: Returns a list of the current volume’s attachments.
      operationId: findVolumeAttachments
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachmentList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all volume attachment
      tags:
      - Volumes
    post:
      deprecated: true
      description: Attach your volume to a device.
      operationId: createVolumeAttachment
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeAttachmentInput'
        description: Device to attach
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Attach your volume
      tags:
      - Volumes
      x-codegen-request-body-name: attachment
  /storage/attachments/{id}:
    delete:
      deprecated: true
      description: Detach volume.
      operationId: deleteVolumeAttachment
      parameters:
      - description: Attachment UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Detach volume
      tags:
      - Volumes
    get:
      deprecated: true
      description: Returns a single attachment if the user has access
      operationId: findVolumeAttachmentById
      parameters:
      - description: Attachment UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve an attachment
      tags:
      - Volumes
  /storage/{id}/snapshots:
    get:
      deprecated: true
      description: Returns a list of the current volume’s snapshots. To create Volume
        Snapshots, please check the Volume Snapshot Policies feature.
      operationId: findVolumeSnapshots
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all volume snapshot
      tags:
      - Volumes
  /storage/{volume_id}/snapshots/{id}:
    delete:
      deprecated: true
      description: Delete volume snapshot.
      operationId: deleteVolumeSnapshot
      parameters:
      - description: Volume UUID
        in: path
        name: volume_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Snapshot UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete volume snapshot
      tags:
      - Volumes
  /storage/{id}/snapshot-policies:
    post:
      deprecated: true
      description: Creates a new snapshot policy of your volume.
      operationId: createVolumeSnapshotPolicy
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Snapshot count
        in: query
        name: snapshot_count
        schema:
          type: integer
      - description: Snapshot frequency
        in: query
        name: snapshot_frequency
        required: true
        schema:
          enum:
          - 1min
          - 15min
          - 1hour
          - 1day
          - 1week
          - 1month
          - 1year
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotPolicy'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a volume snapshot policy
      tags:
      - Volumes
  /storage/snapshot-policies/{id}:
    delete:
      deprecated: true
      description: Deletes the volume snapshot policy.
      operationId: deleteVolumeSnapshotPolicy
      parameters:
      - description: Snapshot Policy UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the volume snapshot policy
      tags:
      - Volumes
    put:
      deprecated: true
      description: Updates the volume snapshot policy.
      operationId: updateVolumeSnapshotPolicy
      parameters:
      - description: Snapshot Policy UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Snapshot count
        in: query
        name: snapshot_count
        schema:
          type: integer
      - description: Snapshot frequency
        in: query
        name: snapshot_frequency
        required: true
        schema:
          enum:
          - 1min
          - 15min
          - 1hour
          - 1day
          - 1week
          - 1month
          - 1year
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotPolicy'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the volume snapshot policy
      tags:
      - Volumes
  /projects/{id}/storage:
    get:
      deprecated: true
      description: Returns a list of the current projects’s volumes.
      operationId: findVolumes
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all volumes
      tags:
      - Volumes
    post:
      deprecated: true
      description: |-
        Creates a new volume in our datacenter. The valid attribute values for `plan` and `facility` are:

                 "facility": "ams1", "ewr1", "nrt1", "sjc1"
                 "plan": "storage_1" (Standard), "storage_2" (Performance)
      operationId: createVolume
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeCreateInput'
        description: Volume to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a volume
      tags:
      - Volumes
      x-codegen-request-body-name: volume
  /storage/{id}:
    delete:
      deprecated: true
      description: Deletes the volume.
      operationId: deleteVolume
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the volume
      tags:
      - Volumes
    get:
      deprecated: true
      description: Returns a single volume if the user has access
      operationId: findVolumeById
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a volume
      tags:
      - Volumes
    put:
      deprecated: true
      description: Updates the volume.
      operationId: updateVolume
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeUpdateInput'
        description: Volume to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the volume
      tags:
      - Volumes
      x-codegen-request-body-name: volume
  /storage/{id}/restore:
    post:
      deprecated: true
      description: Restore the volume to the given snapshot.
      operationId: restoreVolume
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: restore point
        in: query
        name: restore_point
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Restore volume
      tags:
      - Volumes
  /storage/{id}/clone:
    post:
      deprecated: true
      description: Clone your volume or snapshot into a new volume. To clone the volume,
        send an empty body. To promote a volume snapshot into a new volume, include
        the snapshot_timestamp attribute in the request body.
      operationId: cloneVolume
      parameters:
      - description: Volume UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: snapshot timestamp
        in: query
        name: snapshot_timestamp
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Clone volume/snapshot
      tags:
      - Volumes
  /support-requests:
    post:
      description: Support Ticket.
      operationId: requestSuppert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportRequestInput'
        description: Support Request to create
        required: true
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a support ticket
      tags:
      - SupportRequest
      x-codegen-request-body-name: support_request
  /user/otp/app:
    delete:
      description: Disables two factor authentication.
      operationId: disableTfaApp
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Disable two factor authentication
      tags:
      - TwoFactorAuth
    post:
      description: Enables two factor authentication using authenticator app.
      operationId: enableTfaApp
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Enable two factor auth using app
      tags:
      - TwoFactorAuth
  /user/otp/sms:
    delete:
      description: Disables two factor authentication.
      operationId: disableTfaSms
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Disable two factor authentication
      tags:
      - TwoFactorAuth
    post:
      description: Enables two factor authentication with sms.
      operationId: enableTfaSms
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Enable two factor auth using sms
      tags:
      - TwoFactorAuth
  /devices/{id}/traffic:
    get:
      description: Returns traffic for a specific device.
      operationId: findTraffic
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Traffic direction
        in: query
        name: direction
        required: true
        schema:
          enum:
          - inbound
          - outbound
          type: string
      - description: Traffic interval
        in: query
        name: interval
        schema:
          enum:
          - minute
          - hour
          - day
          - week
          - month
          - year
          - hour_of_day
          - day_of_week
          - day_of_month
          - month_of_year
          type: string
      - description: Traffic bucket
        in: query
        name: bucket
        schema:
          enum:
          - internal
          - external
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timeframe'
        description: Traffic timeframe
        required: true
      responses:
        "200":
          content: {}
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve device traffic
      tags:
      - Devices
      x-codegen-request-body-name: timeframe
  /organizations/{id}/transfers:
    get:
      description: Provides a collection of project transfer requests from or to the
        organization.
      operationId: findOrganizationTransfers
      parameters:
      - description: Organization UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRequestList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
      summary: Retrieve all project transfer requests from or to an organization
      tags:
      - Organizations
  /projects/{id}/transfers:
    post:
      description: Organization owners can transfer their projects to other organizations.
      operationId: createTransferRequest
      parameters:
      - description: UUID of the project to be transferred
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestInput'
        description: Transfer Request to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRequest'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a transfer request
      tags:
      - Projects
      x-codegen-request-body-name: transfer_request
  /transfers/{id}:
    delete:
      description: Decline a transfer request.
      operationId: declineTransferRequest
      parameters:
      - description: Transfer request UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Decline a transfer request
      tags:
      - TransferRequests
    get:
      description: Returns a single transfer request.
      operationId: findTransferRequestById
      parameters:
      - description: Transfer request UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRequest'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: View a transfer request
      tags:
      - TransferRequests
    put:
      description: Accept a transfer request.
      operationId: acceptTransferRequest
      parameters:
      - description: Transfer request UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Accept a transfer request
      tags:
      - TransferRequests
  /devices/{id}/usages:
    get:
      description: Returns all usages for a device.
      operationId: findDeviceUsages
      parameters:
      - description: Device UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter usages created after this date
        in: query
        name: created[after]
        schema:
          format: datetime
          type: string
      - description: Filter usages created before this date
        in: query
        name: created[before]
        schema:
          format: datetime
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUsageList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all usages for device
      tags:
      - Devices
  /projects/{id}/usages:
    get:
      description: Returns all usages for a project.
      operationId: findProjectUsage
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Filter usages created after this date
        in: query
        name: created[after]
        schema:
          format: datetime
          type: string
      - description: Filter usages created before this date
        in: query
        name: created[before]
        schema:
          format: datetime
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUsageList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all usages for project
      tags:
      - Devices
  /userdata/validate:
    post:
      description: Validates user data (Userdata)
      operationId: validateUserdata
      parameters:
      - description: Userdata to validate
        in: query
        name: userdata
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Validate user data
      tags:
      - Userdata
  /users:
    get:
      description: Returns a list of users that the are accessible to the current
        user (all users in the current user’s projects, essentially).
      operationId: findUsers
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve all users
      tags:
      - Users
    post:
      description: Creates a user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateInput'
        description: User to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a user
      tags:
      - Users
      x-codegen-request-body-name: user
  /users/{id}:
    get:
      description: Returns a single user if the user has access
      operationId: findUserById
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a user
      tags:
      - Users
  /user:
    get:
      description: Returns the user object for the currently logged-in user.
      operationId: findCurrentUser
      parameters:
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
      summary: Retrieve the current user
      tags:
      - Users
    put:
      description: Updates the currently logged-in user.
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateInput'
        description: User to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the current user
      tags:
      - Users
      x-codegen-request-body-name: user
  /verify-email:
    post:
      description: Creates an email verification request
      operationId: createValidationRequest
      parameters:
      - description: Email for verification request
        in: query
        name: login
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create an email verification request
      tags:
      - UserVerificationTokens
    put:
      description: Consumes an email verification token and verifies the user associated
        with it.
      operationId: consumeVerificationRequest
      parameters:
      - description: User verification token
        in: query
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ok
      summary: Verify a user using an email verification token
      tags:
      - UserVerificationTokens
  /projects/{id}/virtual-networks:
    get:
      description: Provides a list of virtual networks for a single project.
      operationId: findVirtualNetworks
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by Facility ID (uuid) or Facility Code
        in: query
        name: facility
        schema:
          type: string
      - description: Filter by Metro ID (uuid) or Metro Code
        in: query
        name: metro
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve all virtual networks
      tags:
      - Projects
    post:
      description: Creates an virtual network.
      operationId: createVirtualNetwork
      parameters:
      - description: Project UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkCreateInput'
        description: Virtual Network to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a virtual network
      tags:
      - Projects
      x-codegen-request-body-name: virtual_network
  /virtual-networks/{id}:
    delete:
      description: Deletes a virtual network.
      operationId: deleteVirtualNetwork
      parameters:
      - description: Virtual Network UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Delete a virtual network
      tags:
      - VLANs
    get:
      description: Get a virtual network.
      operationId: getVirtualNetwork
      parameters:
      - description: Virtual Network UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Get a virtual network
      tags:
      - VLANs
  /ports/{id}/vlan-assignments/batches:
    get:
      description: Show all the VLAN assignment batches that have been created for
        managing this port's VLAN assignments
      operationId: findPortVlanAssignmentBatches
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentBatchList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: List the VLAN Assignment Batches for a port
      tags:
      - Ports
    post:
      description: Create a new asynchronous batch request which handles adding and/or
        removing the VLANs to which the port is assigned.
      operationId: createPortVlanAssignmentBatch
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortVlanAssignmentBatchCreateInput'
        description: VLAN Assignment batch details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentBatch'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a new Port-VLAN Assignment management batch
      tags:
      - Ports
      x-codegen-request-body-name: vlan_assignments
  /ports/{id}/vlan-assignments/batches/{batch_id}:
    get:
      description: Returns the details of an existing Port-VLAN Assignment batch,
        including the list of VLANs to assign or unassign, and the current state of
        the batch.
      operationId: findPortVlanAssignmentBatchByPortIdAndBatchId
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Batch ID
        in: path
        name: batch_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentBatch'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve a VLAN Assignment Batch's details
      tags:
      - Ports
  /ports/{id}/vlan-assignments:
    get:
      description: Show the port's current VLAN assignments, including if this VLAN
        is set as native, and the current state of the assignment (ex. 'assigned'
        or 'unassigning')
      operationId: findPortVlanAssignments
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          default: '["port","virtual_network"]'
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: List Current VLAN assignments for a port
      tags:
      - Ports
  /ports/{id}/vlan-assignments/{assignment_id}:
    get:
      description: Show the details of a specific Port-VLAN assignment, including
        the current state and if the VLAN is set as native.
      operationId: findPortVlanAssignmentByPortIdAndAssignmentId
      parameters:
      - description: Port UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Assignment ID
        in: path
        name: assignment_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          default: '["port","virtual_network"]'
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignment'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Show a particular Port VLAN assignment's details
      tags:
      - Ports
  /projects/{project_id}/metal-gateways:
    get:
      description: Return all metal gateways for a project
      operationId: findMetalGatewaysByProject
      parameters:
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetalGatewayList'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Returns all metal gateways for a project
      tags:
      - MetalGateways
    post:
      description: Create a metal gateway in a project
      operationId: createMetalGateway
      parameters:
      - description: Project UUID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Page to return
        in: query
        name: page
        schema:
          default: 1
          format: int32
          maximum: 100000
          minimum: 1
          type: integer
      - description: Items returned per page
        in: query
        name: per_page
        schema:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetalGatewayInput'
        description: Metal Gateway to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetalGateway'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create a metal gateway
      tags:
      - MetalGateways
      x-codegen-request-body-name: metal_gateway
  /metal-gateways/{id}:
    delete:
      description: Deletes a specific metal gateway
      operationId: deleteMetalGateway
      parameters:
      - description: Metal Gateway UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Deletes the metal gateway
      tags:
      - MetalGateways
    get:
      description: Returns a specific metal gateway
      operationId: findMetalGatewayById
      parameters:
      - description: Metal Gateway UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetalGateway'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Returns the metal gateway
      tags:
      - MetalGateways
  /emails:
    post:
      description: Add a new email address to the current user.
      operationId: createEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailInput'
        description: Email to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Create an email
      tags:
      - Emails
      x-codegen-request-body-name: email
  /emails/{id}:
    delete:
      description: Deletes the email.
      operationId: deleteEmail
      parameters:
      - description: Email UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Delete the email
      tags:
      - Emails
    get:
      description: Provides one of the user’s emails.
      operationId: findEmailById
      parameters:
      - description: Email UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        explode: false
        in: query
        name: include
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        explode: false
        in: query
        name: exclude
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
      summary: Retrieve an email
      tags:
      - Emails
    put:
      description: Updates the email.
      operationId: updateEmail
      parameters:
      - description: Email UUID
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailInput'
        description: email to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unprocessable entity
      summary: Update the email
      tags:
      - Emails
      x-codegen-request-body-name: email
components:
  schemas:
    Address:
      example:
        country: country
        address: address
        address2: address2
        city: city
        coordinates:
          latitude: latitude
          longitude: longitude
        state: state
        zip_code: zip_code
      properties:
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
      required:
      - address
      - country
      - zip_code
      type: object
    Coordinates:
      example:
        latitude: latitude
        longitude: longitude
      properties:
        latitude:
          type: string
        longitude:
          type: string
      type: object
    AuthToken:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        read_only: true
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        project: '{}'
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: '{}'
        token: token
      properties:
        id:
          format: uuid
          type: string
        token:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        description:
          description: Available only for API keys
          type: string
        read_only:
          type: boolean
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: Available only for user tokens
            type: object
          type: object
        project:
          allOf:
          - $ref: '#/components/schemas/Project'
          - description: Available only for project tokens
            type: object
          type: object
      type: object
    AuthTokenInput:
      example:
        read_only: true
        description: description
      properties:
        description:
          type: string
        read_only:
          type: boolean
      type: object
    AuthTokenList:
      example:
        api_keys:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          read_only: true
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          project: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: '{}'
          token: token
        - updated_at: 2000-01-23T04:56:07.000+00:00
          read_only: true
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          project: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: '{}'
          token: token
      properties:
        api_keys:
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
      type: object
    Batch:
      example:
        quantity: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        devices:
        - href: href
        - href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        error_messages:
        - error_messages
        - error_messages
      properties:
        id:
          format: uuid
          type: string
        error_messages:
          items:
            type: string
          type: array
        quantity:
          type: integer
        state:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        devices:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        project:
          $ref: '#/components/schemas/Href'
      type: object
    BatchesList:
      example:
        batches:
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          devices:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          error_messages:
          - error_messages
          - error_messages
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          devices:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          error_messages:
          - error_messages
          - error_messages
      properties:
        batches:
          items:
            $ref: '#/components/schemas/Batch'
          type: array
      type: object
    InstancesBatchCreateInput:
      example:
        batches:
        - user_ssh_keys:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ip_addresses:
          - address_family: 4.0
            public: false
            ip_reservations:
            - ip_reservations
            - ip_reservations
            cidr: 28.0
          - address_family: 4.0
            public: false
            ip_reservations:
            - ip_reservations
            - ip_reservations
            cidr: 28.0
          description: description
          hostnames:
          - hostnames
          - hostnames
          termination_time: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          project_ssh_keys:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userdata: userdata
          features:
          - features
          - features
          hostname: hostname
          no_ssh_keys: true
          metro: metro
          operating_system: operating_system
          billing_cycle: billing_cycle
          always_pxe: true
          customdata: '{}'
          locked: true
          plan: plan
          facility:
          - facility
          - facility
        - user_ssh_keys:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ip_addresses:
          - address_family: 4.0
            public: false
            ip_reservations:
            - ip_reservations
            - ip_reservations
            cidr: 28.0
          - address_family: 4.0
            public: false
            ip_reservations:
            - ip_reservations
            - ip_reservations
            cidr: 28.0
          description: description
          hostnames:
          - hostnames
          - hostnames
          termination_time: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          project_ssh_keys:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userdata: userdata
          features:
          - features
          - features
          hostname: hostname
          no_ssh_keys: true
          metro: metro
          operating_system: operating_system
          billing_cycle: billing_cycle
          always_pxe: true
          customdata: '{}'
          locked: true
          plan: plan
          facility:
          - facility
          - facility
      properties:
        batches:
          items:
            $ref: '#/components/schemas/InstancesBatchCreateInput_batches'
          type: array
      type: object
    EmailInput:
      example:
        default: true
        address: address
      properties:
        address:
          type: string
        default:
          type: boolean
      required:
      - address
      type: object
    Entitlement:
      example:
        ip_quota: '{}'
        project_quota: 6
        feature_access: '{}'
        name: name
        description: description
        weight: 0
        volume_limits: '{}'
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        volume_quota: '{}'
        instance_quota: '{}'
        slug: slug
      properties:
        id:
          format: uuid
          type: string
        description:
          type: string
        slug:
          type: string
        name:
          type: string
        weight:
          type: integer
        instance_quota:
          properties: {}
          type: object
        project_quota:
          type: integer
        volume_quota:
          properties: {}
          type: object
        ip_quota:
          properties: {}
          type: object
        feature_access:
          properties: {}
          type: object
        href:
          type: string
        volume_limits:
          properties: {}
          type: object
      required:
      - id
      - slug
      - weight
      type: object
    Event:
      example:
        relationships:
        - href: href
        - href: href
        interpolated: interpolated
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        href: href
        type: type
        body: body
      properties:
        id:
          format: uuid
          type: string
        state:
          type: string
        type:
          type: string
        body:
          type: string
        relationships:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        interpolated:
          type: string
        created_at:
          format: date-time
          type: string
        href:
          type: string
      type: object
    EventList:
      example:
        meta:
          next:
            href: href
          total: 0
          previous:
            href: href
          last:
            href: href
          self:
            href: href
          first:
            href: href
        events:
        - relationships:
          - href: href
          - href: href
          interpolated: interpolated
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          href: href
          type: type
          body: body
        - relationships:
          - href: href
          - href: href
          interpolated: interpolated
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          href: href
          type: type
          body: body
      properties:
        events:
          items:
            $ref: '#/components/schemas/Event'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    Facility:
      example:
        features:
        - baremetal
        - backend_transfer
        - global_ipv4
        code: code
        address:
          country: country
          address: address
          address2: address2
          city: city
          coordinates:
            latitude: latitude
            longitude: longitude
          state: state
          zip_code: zip_code
        ip_ranges:
        - 2604:1380::/36
        - 147.75.192.0/21
        metro: '{}'
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        code:
          type: string
        features:
          example:
          - baremetal
          - backend_transfer
          - global_ipv4
          items:
            enum:
            - baremetal
            - backend_transfer
            - layer_2
            - global_ipv4
            - ibx
            type: string
          type: array
        ip_ranges:
          description: IP ranges registered in facility. Can be used for GeoIP location
          example:
          - 2604:1380::/36
          - 147.75.192.0/21
          items:
            type: string
          type: array
        address:
          $ref: '#/components/schemas/Address'
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - description: The metro the facility is in
            type: object
          type: object
      type: object
    FacilityList:
      example:
        facilities:
        - features:
          - baremetal
          - backend_transfer
          - global_ipv4
          code: code
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          ip_ranges:
          - 2604:1380::/36
          - 147.75.192.0/21
          metro: '{}'
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - features:
          - baremetal
          - backend_transfer
          - global_ipv4
          code: code
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          ip_ranges:
          - 2604:1380::/36
          - 147.75.192.0/21
          metro: '{}'
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        facilities:
          items:
            $ref: '#/components/schemas/Facility'
          type: array
      type: object
    HardwareReservation:
      example:
        custom_rate: 1050.5
        project:
          devices:
          - href: href
          - href: href
          volumes:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          memberships:
          - href: href
          - href: href
          bgp_config:
            href: href
          max_devices: '{}'
          ssh_keys:
          - href: href
          - href: href
          updated_at: 2000-01-23T04:56:07.000+00:00
          invitations:
          - href: href
          - href: href
          members:
          - href: href
          - href: href
          name: name
          network_status: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customdata: '{}'
          payment_method:
            href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        switch_uuid: switch_uuid
        short_id: short_id
        provisionable: true
        need_of_service: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        facility:
          features:
          - baremetal
          - backend_transfer
          - global_ipv4
          code: code
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          ip_ranges:
          - 2604:1380::/36
          - 147.75.192.0/21
          metro: '{}'
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plan:
          specs: '{}'
          legacy: true
          line: line
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          available_in:
          - href: href
          - href: href
          class: class
          slug: slug
          pricing: '{}'
        device:
          ip_addresses:
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          iqn: iqn
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          project: '{}'
          switch_uuid: switch_uuid
          bonding_mode: 0
          provisioning_events:
          - relationships:
            - href: href
            - href: href
            interpolated: interpolated
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            href: href
            type: type
            body: body
          - relationships:
            - href: href
            - href: href
            interpolated: interpolated
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            href: href
            type: type
            body: body
          network_ports: '{}'
          userdata: userdata
          hostname: hostname
          updated_at: 2000-01-23T04:56:07.000+00:00
          operating_system:
            distro: distro
            preinstallable: true
            licensed: true
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            provisionable_on:
            - provisionable_on
            - provisionable_on
            version: version
            slug: slug
            pricing: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          billing_cycle: billing_cycle
          customdata: '{}'
          href: href
          locked: true
          spot_price_max: 6.0274563
          plan:
            specs: '{}'
            legacy: true
            line: line
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            available_in:
            - href: href
            - href: href
            class: class
            slug: slug
            pricing: '{}'
          provisioning_percentage: 1.4658129
          image_url: image_url
          root_password: root_password
          volumes:
          - href: href
          - href: href
          project_lite: '{}'
          short_id: short_id
          termination_time: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          spot_instance: true
          hardware_reservation:
            href: href
          ssh_keys:
          - href: href
          - href: href
          metro: '{}'
          always_pxe: true
          ipxe_script_url: ipxe_script_url
          user: user
          facility:
            features:
            - baremetal
            - backend_transfer
            - global_ipv4
            code: code
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            ip_ranges:
            - 2604:1380::/36
            - 147.75.192.0/21
            metro: '{}'
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        spare: true
      properties:
        id:
          format: uuid
          type: string
        short_id:
          description: Short version of the ID.
          format: string
          type: string
        facility:
          $ref: '#/components/schemas/Facility'
        plan:
          $ref: '#/components/schemas/Plan'
        href:
          type: string
        project:
          $ref: '#/components/schemas/Project'
        device:
          $ref: '#/components/schemas/Device'
        created_at:
          format: date-time
          type: string
        spare:
          description: Whether the Hardware Reservation is a spare. Spare Hardware
            Reservations are used when a Hardware Reservations requires service from
            Metal Equinix
          type: boolean
        need_of_service:
          description: Whether this Device requires assistance from Metal Equinix.
          type: boolean
        provisionable:
          description: Whether the reserved server is provisionable or not. Spare
            devices can't be provisioned unless they are activated first.
          type: boolean
        custom_rate:
          description: Amount that will be charged for every billing_cycle.
          example: 1050.5
          format: float
          type: number
        switch_uuid:
          description: Switch short id. This can be used to determine if two devices
            are connected to the same switch, for example.
          type: string
      type: object
    HardwareReservationList:
      example:
        meta:
          next:
            href: href
          total: 0
          previous:
            href: href
          last:
            href: href
          self:
            href: href
          first:
            href: href
        hardware_reservations:
        - custom_rate: 1050.5
          project:
            devices:
            - href: href
            - href: href
            volumes:
            - href: href
            - href: href
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - href: href
            - href: href
            bgp_config:
              href: href
            max_devices: '{}'
            ssh_keys:
            - href: href
            - href: href
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - href: href
            - href: href
            members:
            - href: href
            - href: href
            name: name
            network_status: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            customdata: '{}'
            payment_method:
              href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          switch_uuid: switch_uuid
          short_id: short_id
          provisionable: true
          need_of_service: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          facility:
            features:
            - baremetal
            - backend_transfer
            - global_ipv4
            code: code
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            ip_ranges:
            - 2604:1380::/36
            - 147.75.192.0/21
            metro: '{}'
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan:
            specs: '{}'
            legacy: true
            line: line
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            available_in:
            - href: href
            - href: href
            class: class
            slug: slug
            pricing: '{}'
          device:
            ip_addresses:
            - address: address
              parent_block:
                netmask: netmask
                cidr: 2
                href: href
                network: network
              created_at: 2000-01-23T04:56:07.000+00:00
              enabled: true
              manageable: true
              network: network
              address_family: 5
              public: true
              netmask: netmask
              management: true
              metro: '{}'
              cidr: 5
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              href: href
              global_ip: true
              gateway: gateway
              assigned_to:
                href: href
            - address: address
              parent_block:
                netmask: netmask
                cidr: 2
                href: href
                network: network
              created_at: 2000-01-23T04:56:07.000+00:00
              enabled: true
              manageable: true
              network: network
              address_family: 5
              public: true
              netmask: netmask
              management: true
              metro: '{}'
              cidr: 5
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              href: href
              global_ip: true
              gateway: gateway
              assigned_to:
                href: href
            iqn: iqn
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            project: '{}'
            switch_uuid: switch_uuid
            bonding_mode: 0
            provisioning_events:
            - relationships:
              - href: href
              - href: href
              interpolated: interpolated
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              href: href
              type: type
              body: body
            - relationships:
              - href: href
              - href: href
              interpolated: interpolated
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              href: href
              type: type
              body: body
            network_ports: '{}'
            userdata: userdata
            hostname: hostname
            updated_at: 2000-01-23T04:56:07.000+00:00
            operating_system:
              distro: distro
              preinstallable: true
              licensed: true
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              provisionable_on:
              - provisionable_on
              - provisionable_on
              version: version
              slug: slug
              pricing: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            billing_cycle: billing_cycle
            customdata: '{}'
            href: href
            locked: true
            spot_price_max: 6.0274563
            plan:
              specs: '{}'
              legacy: true
              line: line
              name: name
              description: description
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              available_in:
              - href: href
              - href: href
              class: class
              slug: slug
              pricing: '{}'
            provisioning_percentage: 1.4658129
            image_url: image_url
            root_password: root_password
            volumes:
            - href: href
            - href: href
            project_lite: '{}'
            short_id: short_id
            termination_time: 2000-01-23T04:56:07.000+00:00
            tags:
            - tags
            - tags
            spot_instance: true
            hardware_reservation:
              href: href
            ssh_keys:
            - href: href
            - href: href
            metro: '{}'
            always_pxe: true
            ipxe_script_url: ipxe_script_url
            user: user
            facility:
              features:
              - baremetal
              - backend_transfer
              - global_ipv4
              code: code
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              ip_ranges:
              - 2604:1380::/36
              - 147.75.192.0/21
              metro: '{}'
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          spare: true
        - custom_rate: 1050.5
          project:
            devices:
            - href: href
            - href: href
            volumes:
            - href: href
            - href: href
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - href: href
            - href: href
            bgp_config:
              href: href
            max_devices: '{}'
            ssh_keys:
            - href: href
            - href: href
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - href: href
            - href: href
            members:
            - href: href
            - href: href
            name: name
            network_status: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            customdata: '{}'
            payment_method:
              href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          switch_uuid: switch_uuid
          short_id: short_id
          provisionable: true
          need_of_service: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          facility:
            features:
            - baremetal
            - backend_transfer
            - global_ipv4
            code: code
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            ip_ranges:
            - 2604:1380::/36
            - 147.75.192.0/21
            metro: '{}'
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan:
            specs: '{}'
            legacy: true
            line: line
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            available_in:
            - href: href
            - href: href
            class: class
            slug: slug
            pricing: '{}'
          device:
            ip_addresses:
            - address: address
              parent_block:
                netmask: netmask
                cidr: 2
                href: href
                network: network
              created_at: 2000-01-23T04:56:07.000+00:00
              enabled: true
              manageable: true
              network: network
              address_family: 5
              public: true
              netmask: netmask
              management: true
              metro: '{}'
              cidr: 5
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              href: href
              global_ip: true
              gateway: gateway
              assigned_to:
                href: href
            - address: address
              parent_block:
                netmask: netmask
                cidr: 2
                href: href
                network: network
              created_at: 2000-01-23T04:56:07.000+00:00
              enabled: true
              manageable: true
              network: network
              address_family: 5
              public: true
              netmask: netmask
              management: true
              metro: '{}'
              cidr: 5
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              href: href
              global_ip: true
              gateway: gateway
              assigned_to:
                href: href
            iqn: iqn
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            project: '{}'
            switch_uuid: switch_uuid
            bonding_mode: 0
            provisioning_events:
            - relationships:
              - href: href
              - href: href
              interpolated: interpolated
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              href: href
              type: type
              body: body
            - relationships:
              - href: href
              - href: href
              interpolated: interpolated
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              href: href
              type: type
              body: body
            network_ports: '{}'
            userdata: userdata
            hostname: hostname
            updated_at: 2000-01-23T04:56:07.000+00:00
            operating_system:
              distro: distro
              preinstallable: true
              licensed: true
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              provisionable_on:
              - provisionable_on
              - provisionable_on
              version: version
              slug: slug
              pricing: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            billing_cycle: billing_cycle
            customdata: '{}'
            href: href
            locked: true
            spot_price_max: 6.0274563
            plan:
              specs: '{}'
              legacy: true
              line: line
              name: name
              description: description
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              available_in:
              - href: href
              - href: href
              class: class
              slug: slug
              pricing: '{}'
            provisioning_percentage: 1.4658129
            image_url: image_url
            root_password: root_password
            volumes:
            - href: href
            - href: href
            project_lite: '{}'
            short_id: short_id
            termination_time: 2000-01-23T04:56:07.000+00:00
            tags:
            - tags
            - tags
            spot_instance: true
            hardware_reservation:
              href: href
            ssh_keys:
            - href: href
            - href: href
            metro: '{}'
            always_pxe: true
            ipxe_script_url: ipxe_script_url
            user: user
            facility:
              features:
              - baremetal
              - backend_transfer
              - global_ipv4
              code: code
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              ip_ranges:
              - 2604:1380::/36
              - 147.75.192.0/21
              metro: '{}'
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          spare: true
      properties:
        hardware_reservations:
          items:
            $ref: '#/components/schemas/HardwareReservation'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    Device:
      example:
        ip_addresses:
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 5
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 5
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        iqn: iqn
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        project: '{}'
        switch_uuid: switch_uuid
        bonding_mode: 0
        provisioning_events:
        - relationships:
          - href: href
          - href: href
          interpolated: interpolated
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          href: href
          type: type
          body: body
        - relationships:
          - href: href
          - href: href
          interpolated: interpolated
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          href: href
          type: type
          body: body
        network_ports: '{}'
        userdata: userdata
        hostname: hostname
        updated_at: 2000-01-23T04:56:07.000+00:00
        operating_system:
          distro: distro
          preinstallable: true
          licensed: true
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          provisionable_on:
          - provisionable_on
          - provisionable_on
          version: version
          slug: slug
          pricing: '{}'
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        billing_cycle: billing_cycle
        customdata: '{}'
        href: href
        locked: true
        spot_price_max: 6.0274563
        plan:
          specs: '{}'
          legacy: true
          line: line
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          available_in:
          - href: href
          - href: href
          class: class
          slug: slug
          pricing: '{}'
        provisioning_percentage: 1.4658129
        image_url: image_url
        root_password: root_password
        volumes:
        - href: href
        - href: href
        project_lite: '{}'
        short_id: short_id
        termination_time: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
        spot_instance: true
        hardware_reservation:
          href: href
        ssh_keys:
        - href: href
        - href: href
        metro: '{}'
        always_pxe: true
        ipxe_script_url: ipxe_script_url
        user: user
        facility:
          features:
          - baremetal
          - backend_transfer
          - global_ipv4
          code: code
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          ip_ranges:
          - 2604:1380::/36
          - 147.75.192.0/21
          metro: '{}'
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        short_id:
          type: string
        hostname:
          type: string
        description:
          type: string
        state:
          type: string
        tags:
          items:
            type: string
          type: array
        image_url:
          type: string
        billing_cycle:
          type: string
        user:
          type: string
        iqn:
          type: string
        locked:
          type: boolean
        bonding_mode:
          type: integer
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        spot_instance:
          description: Whether or not the device is a spot instance.
          type: boolean
        spot_price_max:
          description: The maximum price per hour you are willing to pay to keep this
            spot instance.  If you are outbid, the termination will be set allowing
            two minutes before shutdown.
          format: float
          type: number
        termination_time:
          description: When the device will be terminated. This is commonly set in
            advance for ephemeral spot market instances but this field may also be
            set with on-demand and reservation instances to automatically delete the
            resource at a given time. The termination time can also be used to release
            a hardware reservation instance at a given time, keeping the reservation
            open for other uses.  On a spot market device, the termination time will
            be set automatically when outbid.
          format: date-time
          type: string
        customdata:
          properties: {}
          type: object
        provisioning_percentage:
          description: Only visible while device provisioning
          format: float
          type: number
        operating_system:
          $ref: '#/components/schemas/OperatingSystem'
        always_pxe:
          type: boolean
        ipxe_script_url:
          type: string
        facility:
          $ref: '#/components/schemas/Facility'
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - description: The metro the facility is in
            type: object
          type: object
        plan:
          $ref: '#/components/schemas/Plan'
        userdata:
          type: string
        root_password:
          description: Root password is automatically generated when server is provisioned
            and it is removed after 24 hours
          type: string
        switch_uuid:
          description: Switch short id. This can be used to determine if two devices
            are connected to the same switch, for example.
          type: string
        network_ports:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: By default, servers at Equinix Metal are configured in a
              “bonded” mode using LACP (Link Aggregation Control Protocol). Each 2-NIC
              server is configured with a single bond (namely bond0) with both interfaces
              eth0 and eth1 as members of the bond in a default Layer 3 mode. Some
              device plans may have a different number of ports and bonds available.
            type: object
          type: object
        href:
          type: string
        project:
          allOf:
          - $ref: '#/components/schemas/Href'
          - description: Full version of project object when included
            type: object
          type: object
        project_lite:
          allOf:
          - $ref: '#/components/schemas/Href'
          - description: Lite version of project object when included
            type: object
          type: object
        volumes:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        hardware_reservation:
          $ref: '#/components/schemas/Href'
        ssh_keys:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        ip_addresses:
          items:
            $ref: '#/components/schemas/IPAssignment'
          type: array
        provisioning_events:
          items:
            $ref: '#/components/schemas/Event'
          type: array
      type: object
    DeviceCreateInput:
      example:
        user_ssh_keys:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ip_addresses:
        - address_family: 4.0
          public: false
          ip_reservations:
          - ip_reservations
          - ip_reservations
          cidr: 28.0
        - address_family: 4.0
          public: false
          ip_reservations:
          - ip_reservations
          - ip_reservations
          cidr: 28.0
        private_ipv4_subnet_size: 1.4658129805029452
        description: description
        userdata: userdata
        features:
        - features
        - features
        hostname: hostname
        public_ipv4_subnet_size: 6.027456183070403
        operating_system: operating_system
        billing_cycle: hourly
        customdata: '{}'
        locked: false
        spot_price_max: 0.8008282
        plan: plan
        termination_time: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
        project_ssh_keys:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        spot_instance: true
        ssh_keys:
        - label: label
          key: key
        - label: label
          key: key
        no_ssh_keys: false
        metro: metro
        hardware_reservation_id: next-available
        always_pxe: false
        ipxe_script_url: ipxe_script_url
        facility: facility
      properties:
        facility:
          description: |-
            The datacenter where the device should be created.

            The API will accept either a single facility `{ "facility": "f1" }`, or it can be instructed to create the device in the best available datacenter `{ "facility": "any" }`.

            Additionally it is possible to set a prioritized location selection. For example `{ "facility": ["f3", "f2", "any"] }` can be used to prioritize `f3` and then `f2` before accepting `any` facility. If none of the facilities provided have availability for the requested device the request will fail.
          type: string
        plan:
          description: The slug of the device plan to provision.
          type: string
        hostname:
          description: The hostname to use within the operating system. The same hostname
            may be used on multiple devices within a project.
          type: string
        description:
          description: Any description of the device or how it will be used. This
            may be used to inform other API consumers with project access.
          type: string
        billing_cycle:
          description: The billing cycle of the device.
          enum:
          - hourly
          - daily
          - monthly
          - yearly
          type: string
        operating_system:
          description: The slug of the operating system to provision. Check the Equinix
            Metal operating system documentation for rules that may be imposed per
            operating system, including restrictions on IP address options and device
            plans.
          type: string
        always_pxe:
          default: false
          description: When true, devices with a `custom_ipxe` OS will always boot
            to iPXE. The default setting of false ensures that iPXE will be used on
            only the first boot.
          type: boolean
        ipxe_script_url:
          description: |-
            When set, the device will chainload an iPXE Script at boot fetched from the supplied URL.

                  See [Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/) for more details.
          type: string
        userdata:
          description: |-
            The userdata presented in the metadata service for this device.  Userdata is fetched and interpretted by the operating system installed on the device. Acceptable formats are determined by the operating system, with the exception of a special iPXE enabling syntax which is handled before the operating system starts.

                  See [Server User Data](https://metal.equinix.com/developers/docs/servers/user-data/) and [Provisioning with Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/#provisioning-with-custom-ipxe) for more details.
          type: string
        locked:
          default: false
          description: Whether the device should be locked, preventing accidental
            deletion.
          type: boolean
        customdata:
          description: Customdata is an arbitrary JSON value that can be accessed
            via the metadata service.
          properties: {}
          type: object
        metro:
          description: Metro code or ID of where the instance should be provisioned
            in.
          type: string
        hardware_reservation_id:
          default: ""
          description: |-
            The Hardware Reservation UUID to provision. Alternatively, `next-available` can be specified to select from any of the available hardware reservations. An error will be returned if the requested reservation option is not available.

                  See [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/) for more details.
          example: next-available
          type: string
        spot_instance:
          type: boolean
        spot_price_max:
          format: float
          type: number
        termination_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
        project_ssh_keys:
          description: |+
            A list of UUIDs identifying the device parent project
            that should be authorized to access this device (typically
            via /root/.ssh/authorized_keys). These keys will also appear in the device metadata.

            If no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),
            all parent project keys, parent project members keys and organization members keys will be included. This behaviour can
            be changed with 'no_ssh_keys' option to omit any SSH key being added.

          items:
            format: uuid
            type: string
          nullable: true
          type: array
        user_ssh_keys:
          description: |
            A list of UUIDs identifying the users
            that should be authorized to access this device (typically
            via /root/.ssh/authorized_keys).  These keys will also
            appear in the device metadata.

            The users must be members of the project or organization.

            If no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),
            all parent project keys, parent project members keys and organization members keys will be included. This behaviour can
            be changed with 'no_ssh_keys' option to omit any SSH key being added.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        ssh_keys:
          description: |
            A list of new or existing project ssh_keys
            that should be authorized to access this device (typically
            via /root/.ssh/authorized_keys). These keys will also
            appear in the device metadata.

            These keys are added in addition to any keys defined by
              `project_ssh_keys` and `user_ssh_keys`.
          items:
            $ref: '#/components/schemas/SSHKeyInput'
          nullable: true
          type: array
        no_ssh_keys:
          default: false
          description: Overrides default behaviour of attaching all of the organization
            members ssh keys and project ssh keys to device if no specific keys specified
          nullable: true
          type: boolean
        features:
          description: |-
            The features attribute allows you to optionally specify what features your server should have.

            In the API shorthand syntax, all features listed are `required`:

            ```
            { "features": ["tpm"] }
            ```

            Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a `preferred` value. The request will not fail if we have no servers with that feature in our inventory. The API offers an alternative syntax for mixing preferred and required features:

            ```
            { "features": { "tpm": "required", "raid": "preferred" } }
            ```

            The request will only fail if there are no available servers matching the required `tpm` criteria.
          items:
            type: string
          type: array
        public_ipv4_subnet_size:
          description: Deprecated. Use ip_addresses. Subnet range for addresses allocated
            to this device. Your project must have addresses available for a non-default
            request.
          format: integer
          type: number
          x-deprecated: true
        private_ipv4_subnet_size:
          description: Deprecated. Use ip_addresses. Subnet range for addresses allocated
            to this device.
          format: integer
          type: number
          x-deprecated: true
        ip_addresses:
          description: |-
            The `ip_addresses attribute will allow you to specify the addresses you want created with your device.

            The default value configures public IPv4, public IPv6, and private IPv4.

            Private IPv4 address is required. When specifying `ip_addresses`, one of the array items must enable private IPv4.

            Some operating systems require public IPv4 address. In those cases you will receive an error message if public IPv4 is not enabled.

            For example, to only configure your server with a private IPv4 address, you can send `{ "ip_addresses": [{ "address_family": 4, "public": false }] }`.

            It is possible to request a subnet size larger than a `/30` by assigning addresses using the UUID(s) of ip_reservations in your project.

            For example, `{ "ip_addresses": [..., {"address_family": 4, "public": true, "ip_reservations": ["uuid1", "uuid2"]}] }`

            To access a server without public IPs, you can use our Out-of-Band console access (SOS) or proxy through another server in the project with public IPs enabled.
          items:
            $ref: '#/components/schemas/DeviceCreateInput_ip_addresses'
          type: array
      required:
      - facility
      - operating_system
      - plan
      type: object
    DeviceUpdateInput:
      example:
        userdata: userdata
        hostname: hostname
        spot_instance: true
        network_frozen: true
        description: description
        billing_cycle: billing_cycle
        always_pxe: true
        ipxe_script_url: ipxe_script_url
        customdata: '{}'
        locked: true
        tags:
        - tags
        - tags
      properties:
        hostname:
          type: string
        description:
          type: string
        billing_cycle:
          type: string
        userdata:
          type: string
        locked:
          type: boolean
        tags:
          items:
            type: string
          type: array
        always_pxe:
          type: boolean
        ipxe_script_url:
          type: string
        spot_instance:
          type: boolean
        customdata:
          properties: {}
          type: object
        network_frozen:
          description: If true, this instance can not be converted to a different
            network type.
          type: boolean
      type: object
    DeviceList:
      example:
        devices:
        - ip_addresses:
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          iqn: iqn
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          project: '{}'
          switch_uuid: switch_uuid
          bonding_mode: 0
          provisioning_events:
          - relationships:
            - href: href
            - href: href
            interpolated: interpolated
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            href: href
            type: type
            body: body
          - relationships:
            - href: href
            - href: href
            interpolated: interpolated
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            href: href
            type: type
            body: body
          network_ports: '{}'
          userdata: userdata
          hostname: hostname
          updated_at: 2000-01-23T04:56:07.000+00:00
          operating_system:
            distro: distro
            preinstallable: true
            licensed: true
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            provisionable_on:
            - provisionable_on
            - provisionable_on
            version: version
            slug: slug
            pricing: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          billing_cycle: billing_cycle
          customdata: '{}'
          href: href
          locked: true
          spot_price_max: 6.0274563
          plan:
            specs: '{}'
            legacy: true
            line: line
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            available_in:
            - href: href
            - href: href
            class: class
            slug: slug
            pricing: '{}'
          provisioning_percentage: 1.4658129
          image_url: image_url
          root_password: root_password
          volumes:
          - href: href
          - href: href
          project_lite: '{}'
          short_id: short_id
          termination_time: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          spot_instance: true
          hardware_reservation:
            href: href
          ssh_keys:
          - href: href
          - href: href
          metro: '{}'
          always_pxe: true
          ipxe_script_url: ipxe_script_url
          user: user
          facility:
            features:
            - baremetal
            - backend_transfer
            - global_ipv4
            code: code
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            ip_ranges:
            - 2604:1380::/36
            - 147.75.192.0/21
            metro: '{}'
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - ip_addresses:
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          iqn: iqn
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          project: '{}'
          switch_uuid: switch_uuid
          bonding_mode: 0
          provisioning_events:
          - relationships:
            - href: href
            - href: href
            interpolated: interpolated
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            href: href
            type: type
            body: body
          - relationships:
            - href: href
            - href: href
            interpolated: interpolated
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            href: href
            type: type
            body: body
          network_ports: '{}'
          userdata: userdata
          hostname: hostname
          updated_at: 2000-01-23T04:56:07.000+00:00
          operating_system:
            distro: distro
            preinstallable: true
            licensed: true
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            provisionable_on:
            - provisionable_on
            - provisionable_on
            version: version
            slug: slug
            pricing: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          billing_cycle: billing_cycle
          customdata: '{}'
          href: href
          locked: true
          spot_price_max: 6.0274563
          plan:
            specs: '{}'
            legacy: true
            line: line
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            available_in:
            - href: href
            - href: href
            class: class
            slug: slug
            pricing: '{}'
          provisioning_percentage: 1.4658129
          image_url: image_url
          root_password: root_password
          volumes:
          - href: href
          - href: href
          project_lite: '{}'
          short_id: short_id
          termination_time: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          spot_instance: true
          hardware_reservation:
            href: href
          ssh_keys:
          - href: href
          - href: href
          metro: '{}'
          always_pxe: true
          ipxe_script_url: ipxe_script_url
          user: user
          facility:
            features:
            - baremetal
            - backend_transfer
            - global_ipv4
            code: code
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            ip_ranges:
            - 2604:1380::/36
            - 147.75.192.0/21
            metro: '{}'
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        meta:
          next:
            href: href
          total: 0
          previous:
            href: href
          last:
            href: href
          self:
            href: href
          first:
            href: href
      properties:
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    Interconnection:
      example:
        description: description
        type: type
        ports:
        - role: role
          virtual_circuits:
            virtual_circuits:
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
          organization:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          status: status
        - role: role
          virtual_circuits:
            virtual_circuits:
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
          organization:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          status: status
        speed: 0
        contact_email: contact_email
        tags:
        - tags
        - tags
        mode: standard
        metro: '{}'
        organization:
          href: href
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redundancy: redundancy
        facility:
          href: href
        status: status
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        contact_email:
          type: string
        status:
          type: string
        type:
          type: string
        redundancy:
          type: string
        speed:
          description: The connection's speed in bps.
          type: integer
        tags:
          items:
            type: string
          type: array
        ports:
          items:
            $ref: '#/components/schemas/InterconnectionPort'
          type: array
        facility:
          $ref: '#/components/schemas/Href'
        organization:
          $ref: '#/components/schemas/Href'
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - description: Details of the metro the facility is in
            type: object
          type: object
        mode:
          description: |-
            The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.
              The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.
              In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.
          enum:
          - standard
          - tunnel
          example: standard
          type: string
      type: object
    InterconnectionList:
      example:
        interconnections:
        - description: description
          type: type
          ports:
          - role: role
            virtual_circuits:
              virtual_circuits:
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
            organization:
              href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            status: status
          - role: role
            virtual_circuits:
              virtual_circuits:
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
            organization:
              href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            status: status
          speed: 0
          contact_email: contact_email
          tags:
          - tags
          - tags
          mode: standard
          metro: '{}'
          organization:
            href: href
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redundancy: redundancy
          facility:
            href: href
          status: status
        - description: description
          type: type
          ports:
          - role: role
            virtual_circuits:
              virtual_circuits:
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
            organization:
              href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            status: status
          - role: role
            virtual_circuits:
              virtual_circuits:
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
              - virtual_network:
                  href: href
                vnid: 6
                nni_vlan: 1
                name: name
                description: description
                project:
                  href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                speed: 5
                status: status
                tags:
                - tags
                - tags
            organization:
              href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            status: status
          speed: 0
          contact_email: contact_email
          tags:
          - tags
          - tags
          mode: standard
          metro: '{}'
          organization:
            href: href
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redundancy: redundancy
          facility:
            href: href
          status: status
      properties:
        interconnections:
          items:
            $ref: '#/components/schemas/Interconnection'
          type: array
      type: object
    InterconnectionCreateInput:
      example:
        mode: standard
        metro: metro
        name: name
        description: description
        project: project
        redundancy: redundancy
        type: type
        facility: facility
        speed: speed
        contact_email: contact_email
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        description:
          type: string
        facility:
          description: A Facility ID or code.
          type: string
        metro:
          description: A Metro ID or code. Required for creating a connection, unless
            creating with facility.
          type: string
        type:
          description: Either 'shared' or 'dedicated'.
          type: string
        redundancy:
          description: Either 'primary' or 'redundant'.
          type: string
        contact_email:
          type: string
        project:
          type: string
        speed:
          description: 'A connection speed, in bps, mbps, or gbps. Ex: ''100000000''
            or ''100 mbps''.'
          type: string
        tags:
          items:
            type: string
          type: array
        mode:
          description: |-
            The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.
              The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.
              In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.
          enum:
          - standard
          - tunnel
          example: standard
          type: string
      required:
      - facility
      - name
      - redundancy
      - type
      type: object
    InterconnectionUpdateInput:
      example:
        mode: standard
        name: name
        description: description
        redundancy: redundancy
        contact_email: contact_email
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        redundancy:
          description: Updating from 'redundant' to 'primary' will remove a secondary
            port, while updating from 'primary' to 'redundant' will add one.
          type: string
        description:
          type: string
        contact_email:
          type: string
        tags:
          items:
            type: string
          type: array
        mode:
          description: |-
            The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.
              The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.
              In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.
          enum:
          - standard
          - tunnel
          example: standard
          type: string
      type: object
    InterconnectionPort:
      example:
        role: role
        virtual_circuits:
          virtual_circuits:
          - virtual_network:
              href: href
            vnid: 6
            nni_vlan: 1
            name: name
            description: description
            project:
              href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            speed: 5
            status: status
            tags:
            - tags
            - tags
          - virtual_network:
              href: href
            vnid: 6
            nni_vlan: 1
            name: name
            description: description
            project:
              href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            speed: 5
            status: status
            tags:
            - tags
            - tags
        organization:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        switch_id: switch_id
        status: status
      properties:
        id:
          format: uuid
          type: string
        role:
          description: Either 'primary' or 'secondary'.
          type: string
        status:
          type: string
        switch_id:
          description: A switch 'short ID'
          type: string
        virtual_circuits:
          $ref: '#/components/schemas/VirtualCircuitList'
        organization:
          $ref: '#/components/schemas/Href'
      type: object
    InterconnectionPortList:
      example:
        ports:
        - role: role
          virtual_circuits:
            virtual_circuits:
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
          organization:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          status: status
        - role: role
          virtual_circuits:
            virtual_circuits:
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
            - virtual_network:
                href: href
              vnid: 6
              nni_vlan: 1
              name: name
              description: description
              project:
                href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              speed: 5
              status: status
              tags:
              - tags
              - tags
          organization:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          status: status
      properties:
        ports:
          items:
            $ref: '#/components/schemas/InterconnectionPort'
          type: array
      type: object
    VirtualCircuit:
      example:
        virtual_network:
          href: href
        vnid: 6
        nni_vlan: 1
        name: name
        description: description
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        speed: 5
        status: status
        tags:
        - tags
        - tags
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
        vnid:
          type: integer
        nni_vlan:
          type: integer
        speed:
          description: integer representing bps speed
          type: integer
        tags:
          items:
            type: string
          type: array
        project:
          $ref: '#/components/schemas/Href'
        virtual_network:
          $ref: '#/components/schemas/Href'
      type: object
    VirtualCircuitList:
      example:
        virtual_circuits:
        - virtual_network:
            href: href
          vnid: 6
          nni_vlan: 1
          name: name
          description: description
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          speed: 5
          status: status
          tags:
          - tags
          - tags
        - virtual_network:
            href: href
          vnid: 6
          nni_vlan: 1
          name: name
          description: description
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          speed: 5
          status: status
          tags:
          - tags
          - tags
      properties:
        virtual_circuits:
          items:
            $ref: '#/components/schemas/VirtualCircuit'
          type: array
      type: object
    VirtualCircuitCreateInput:
      example:
        vnid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nni_vlan: 2468
        name: name
        description: description
        project: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        speed: 0
        tags:
        - tags
        - tags
      properties:
        description:
          type: string
        name:
          type: string
        speed:
          description: speed can be passed as integer number representing bps speed
            or string (e.g. '52m' or '100g' or '4 gbps')
          type: integer
        tags:
          items:
            type: string
          type: array
        vnid:
          description: A Virtual Network record UUID or the VNID of a Virtual Network
            in your project (sent as integer).
          format: uuid
          type: string
        nni_vlan:
          maximum: 4094
          minimum: 2
          type: integer
        project:
          format: uuid
          type: string
      type: object
    VirtualCircuitUpdateInput:
      example:
        vnid: vnid
        name: name
        description: description
        speed: speed
        tags:
        - tags
        - tags
      properties:
        description:
          type: string
        name:
          type: string
        speed:
          type: string
        tags:
          items:
            type: string
          type: array
        vnid:
          description: A Virtual Network record UUID or the VNID of a Virtual Network
            in your project.
          type: string
      type: object
    Invitation:
      example:
        projects_ids:
        - projects_ids
        - projects_ids
        updated_at: 2000-01-23T04:56:07.000+00:00
        invitation:
          href: href
        roles:
        - roles
        - roles
        organization:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invited_by:
          href: href
        href: href
        invitee: invitee
      properties:
        id:
          format: uuid
          type: string
        roles:
          items:
            type: string
          type: array
        invitee:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        invited_by:
          $ref: '#/components/schemas/Href'
        organization:
          $ref: '#/components/schemas/Href'
        projects_ids:
          items:
            type: string
          type: array
        invitation:
          $ref: '#/components/schemas/Href'
        href:
          type: string
      type: object
    InvitationList:
      example:
        invitations:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          user:
            href: href
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          user:
            href: href
      properties:
        invitations:
          items:
            $ref: '#/components/schemas/Membership'
          type: array
      type: object
    InvitationInput:
      example:
        projects_ids:
        - projects_ids
        - projects_ids
        roles:
        - roles
        - roles
        message: message
        invitee: invitee
      properties:
        invitee:
          type: string
        message:
          type: string
        roles:
          items:
            type: string
          type: array
        projects_ids:
          items:
            type: string
          type: array
      required:
      - invitee
      type: object
    License:
      example:
        licensee_product:
          href: href
        size: 0.8008281904610115
        description: description
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        license_key: license_key
      properties:
        id:
          format: uuid
          type: string
        description:
          type: string
        license_key:
          type: string
        licensee_product:
          $ref: '#/components/schemas/Href'
        size:
          type: number
        project:
          $ref: '#/components/schemas/Href'
      type: object
    LicenseCreateInput:
      example:
        size: 0.8008281904610115
        licensee_product_id: licensee_product_id
        description: description
      properties:
        description:
          type: string
        size:
          type: number
        licensee_product_id:
          type: string
      type: object
    LicenseUpdateInput:
      example:
        size: 0.8008281904610115
        description: description
      properties:
        description:
          type: string
        size:
          type: number
      type: object
    LicenseList:
      example:
        licenses:
        - licensee_product:
            href: href
          size: 0.8008281904610115
          description: description
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          license_key: license_key
        - licensee_product:
            href: href
          size: 0.8008281904610115
          description: description
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          license_key: license_key
      properties:
        licenses:
          items:
            $ref: '#/components/schemas/License'
          type: array
      type: object
    Membership:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        roles:
        - roles
        - roles
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        user:
          href: href
      properties:
        id:
          format: uuid
          type: string
        roles:
          items:
            type: string
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        project:
          $ref: '#/components/schemas/Href'
        user:
          $ref: '#/components/schemas/Href'
        href:
          type: string
      type: object
    MembershipList:
      example:
        memberships:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          user:
            href: href
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          user:
            href: href
      properties:
        memberships:
          items:
            $ref: '#/components/schemas/Membership'
          type: array
      type: object
    MembershipInput:
      example:
        role:
        - role
        - role
      properties:
        role:
          items:
            type: string
          type: array
      type: object
    Metro:
      example:
        country: country
        code: code
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        code:
          type: string
        country:
          type: string
      type: object
    MetroList:
      example:
        metros:
        - country: country
          code: code
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - country: country
          code: code
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        metros:
          items:
            $ref: '#/components/schemas/Metro'
          type: array
      type: object
    BgpConfigRequestInput:
      example:
        use_case: use_case
        deployment_type: deployment_type
        asn: 0
        md5: md5
      properties:
        deployment_type:
          type: string
        asn:
          type: integer
        md5:
          type: string
        use_case:
          type: string
      required:
      - asn
      - deployment_type
      type: object
    BgpConfig:
      example:
        sessions:
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          default_route: true
          device:
            href: href
          status: unknown
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          default_route: true
          device:
            href: href
          status: unknown
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
        ranges:
        - address_family: 6
          range: range
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
        - address_family: 6
          range: range
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
        max_prefix: 0
        project:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        route_object: route_object
        deployment_type: local
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        asn: 65000
        status: requested
        md5: md5
        requested_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        status:
          description: Status of the BGP Config. Status "requested" is valid only
            with the "global" deployment_type.
          enum:
          - requested
          - enabled
          - disabled
          type: string
        deployment_type:
          description: |
            In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space.
          enum:
          - global
          - local
          example: local
          type: string
        asn:
          description: Autonomous System Number. ASN is required with Global BGP.
            With Local BGP the private ASN, 65000, is assigned.
          example: 65000
          format: int32
          type: integer
        route_object:
          description: Specifies AS-MACRO (aka AS-SET) to use when building client
            route filters
          type: string
        md5:
          description: (Optional) Password for BGP session in plaintext (not a checksum)
          nullable: true
          type: string
        max_prefix:
          description: The maximum number of route filters allowed per server
          type: integer
        project:
          $ref: '#/components/schemas/Href'
        created_at:
          format: date-time
          type: string
        requested_at:
          format: date-time
          type: string
        sessions:
          description: The direct connections between neighboring routers that want
            to exchange routing information.
          items:
            $ref: '#/components/schemas/BgpSession'
          type: array
        ranges:
          description: The IP block ranges associated to the ASN (Populated in Global
            BGP only)
          items:
            $ref: '#/components/schemas/GlobalBgpRange'
          type: array
        href:
          type: string
      type: object
    BgpSessionNeighbors:
      example:
        bgp_neighbors:
        - md5_password: md5_password
          customer_as: 65000.0
          address_family: 4.0
          routes_in:
          - route: 10.32.16.0/31
            exact: true
          - route: 10.32.16.0/31
            exact: true
          customer_ip: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
          multihop: true
          peer_as: 65530.0
          md5_enabled: true
          peer_ips:
          - 169.254.255.1
          - 169.254.255.2
          routes_out:
          - route: 0.0.0.0/0
            exact: true
          - route: 0.0.0.0/0
            exact: true
        - md5_password: md5_password
          customer_as: 65000.0
          address_family: 4.0
          routes_in:
          - route: 10.32.16.0/31
            exact: true
          - route: 10.32.16.0/31
            exact: true
          customer_ip: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
          multihop: true
          peer_as: 65530.0
          md5_enabled: true
          peer_ips:
          - 169.254.255.1
          - 169.254.255.2
          routes_out:
          - route: 0.0.0.0/0
            exact: true
          - route: 0.0.0.0/0
            exact: true
      properties:
        bgp_neighbors:
          description: A list of BGP session neighbor data
          items:
            $ref: '#/components/schemas/BgpNeighborData'
          type: array
      type: object
    BgpNeighborData:
      example:
        md5_password: md5_password
        customer_as: 65000.0
        address_family: 4.0
        routes_in:
        - route: 10.32.16.0/31
          exact: true
        - route: 10.32.16.0/31
          exact: true
        customer_ip: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
        multihop: true
        peer_as: 65530.0
        md5_enabled: true
        peer_ips:
        - 169.254.255.1
        - 169.254.255.2
        routes_out:
        - route: 0.0.0.0/0
          exact: true
        - route: 0.0.0.0/0
          exact: true
      properties:
        address_family:
          description: Address Family for IP Address. Accepted values are 4 or 6
          example: 4.0
          format: integer
          type: number
        customer_as:
          description: The customer's ASN. In a local BGP deployment, this will be
            an internal ASN used to route within the data center. For a global BGP
            deployment, this will be the your own ASN, configured when you set up
            BGP for your project.
          example: 65000.0
          format: integer
          type: number
        customer_ip:
          description: The device's IP address. For an IPv4 BGP session, this is typically
            the private bond0 address for the device.
          example: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
          type: string
        md5_enabled:
          description: True if an MD5 password is configured for the project.
          type: boolean
        md5_password:
          description: The MD5 password configured for the project, if set.
          type: string
        multihop:
          description: True when the BGP session should be configured as multihop.
          type: boolean
        peer_as:
          description: The Peer ASN to use when configuring BGP on your device.
          example: 65530.0
          format: integer
          type: number
        peer_ips:
          description: A list of one or more IP addresses to use for the Peer IP section
            of your BGP configuration. For non-multihop sessions, this will typically
            be a single gateway address for the device. For multihop sessions, it
            will be a list of IPs.
          example:
          - 169.254.255.1
          - 169.254.255.2
          items:
            type: string
          type: array
        routes_in:
          description: A list of project subnets
          items:
            $ref: '#/components/schemas/BgpNeighborData_routes_in'
          type: array
        routes_out:
          description: A list of outgoing routes. Only populated if the BGP session
            has default route enabled.
          items:
            $ref: '#/components/schemas/BgpNeighborData_routes_out'
          type: array
      type: object
    BgpSession:
      example:
        address_family: ipv4
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        default_route: true
        device:
          href: href
        status: unknown
        learned_routes:
        - 10.32.16.0/31
        - 10.32.16.0/31
      properties:
        id:
          format: uuid
          type: string
        status:
          description: ' The status of the BGP Session. Multiple status values may
            be reported when the device is connected to multiple switches, one value
            per switch. Each status will start with "unknown" and progress to "up"
            or "down" depending on the connected device. Subsequent "unknown" values
            indicate a problem acquiring status from the switch. '
          enum:
          - unknown
          - up
          - down
          type: string
        learned_routes:
          items:
            description: IPv4 or IPv6 range
            example: 10.32.16.0/31
            type: string
          type: array
        address_family:
          enum:
          - ipv4
          - ipv6
          type: string
        device:
          $ref: '#/components/schemas/Href'
        href:
          type: string
        default_route:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - address_family
      type: object
    BGPSessionInput:
      example:
        address_family: ipv4
        default_route: false
      properties:
        address_family:
          description: Address family for BGP session.
          enum:
          - ipv4
          - ipv6
          example: ipv4
          type: string
        default_route:
          default: false
          description: Set the default route policy.
          type: boolean
      type: object
    BgpSessionList:
      example:
        bgp_sessions:
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          default_route: true
          device:
            href: href
          status: unknown
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          default_route: true
          device:
            href: href
          status: unknown
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
      properties:
        bgp_sessions:
          items:
            $ref: '#/components/schemas/BgpSession'
          type: array
      type: object
    GlobalBgpRange:
      example:
        address_family: 6
        range: range
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
      properties:
        id:
          format: uuid
          type: string
        address_family:
          type: integer
        range:
          type: string
        href:
          type: string
        project:
          $ref: '#/components/schemas/Href'
      type: object
    GlobalBgpRangeList:
      example:
        global_bgp_ranges:
        - address_family: 6
          range: range
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
        - address_family: 6
          range: range
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
      properties:
        global_bgp_ranges:
          items:
            $ref: '#/components/schemas/GlobalBgpRange'
          type: array
      type: object
    IPAssignment:
      example:
        address: address
        parent_block:
          netmask: netmask
          cidr: 2
          href: href
          network: network
        created_at: 2000-01-23T04:56:07.000+00:00
        enabled: true
        manageable: true
        network: network
        address_family: 5
        public: true
        netmask: netmask
        management: true
        metro: '{}'
        cidr: 5
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        global_ip: true
        gateway: gateway
        assigned_to:
          href: href
      properties:
        id:
          format: uuid
          type: string
        address_family:
          type: integer
        netmask:
          type: string
        public:
          type: boolean
        enabled:
          type: boolean
        cidr:
          type: integer
        management:
          type: boolean
        manageable:
          type: boolean
        global_ip:
          type: boolean
        assigned_to:
          $ref: '#/components/schemas/Href'
        network:
          type: string
        address:
          type: string
        gateway:
          type: string
        href:
          type: string
        created_at:
          format: date-time
          type: string
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - description: The metro the IP address is in
            type: object
          type: object
        parent_block:
          $ref: '#/components/schemas/ParentBlock'
      type: object
    ParentBlock:
      example:
        netmask: netmask
        cidr: 2
        href: href
        network: network
      properties:
        network:
          type: string
        netmask:
          type: string
        cidr:
          type: integer
        href:
          type: string
      type: object
    IPReservation:
      example:
        assignments:
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 5
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 5
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        addon: true
        bill: true
        created_at: 2000-01-23T04:56:07.000+00:00
        enabled: true
        manageable: true
        network: network
        tags:
        - tags
        - tags
        address_family: 0
        public: true
        netmask: netmask
        management: true
        metro: '{}'
        cidr: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        state: state
        global_ip: true
        facility: '{}'
      properties:
        id:
          format: uuid
          type: string
        address_family:
          type: integer
        netmask:
          type: string
        public:
          type: boolean
        enabled:
          type: boolean
        cidr:
          type: integer
        management:
          type: boolean
        manageable:
          type: boolean
        global_ip:
          type: boolean
        addon:
          type: boolean
        bill:
          type: boolean
        assignments:
          items:
            $ref: '#/components/schemas/IPAssignment'
          type: array
        network:
          type: string
        created_at:
          format: date-time
          type: string
        facility:
          allOf:
          - $ref: '#/components/schemas/Facility'
          - description: The facility the IP reservation is in. If the facility the
              IP reservation was requested in is in a metro, a metro value will also
              be set, and the subsequent IP reservation can be used on a metro level.
              Can be null if requesting an IP reservation in a metro.
            type: object
          type: object
        href:
          type: string
        tags:
          items:
            type: string
          type: array
        state:
          type: string
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - description: The metro the IP reservation is in. As long as the IP reservation
              has a metro, it can be used on a metro level. Can be null if requesting
              an IP reservation in a facility that is not in a metro.
            type: object
          type: object
      type: object
    IPAssignmentInput:
      example:
        address: address
        customdata: '{}'
        manageable: true
      properties:
        address:
          type: string
        manageable:
          type: boolean
        customdata:
          properties: {}
          type: object
      required:
      - address
      type: object
    IPAssignmentList:
      example:
        ip_addresses:
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 5
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 5
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
      properties:
        ip_addresses:
          items:
            $ref: '#/components/schemas/IPAssignment'
          type: array
      type: object
    IPReservationList:
      example:
        ip_addresses:
        - assignments:
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          addon: true
          bill: true
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          tags:
          - tags
          - tags
          address_family: 0
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          state: state
          global_ip: true
          facility: '{}'
        - assignments:
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            netmask: netmask
            management: true
            metro: '{}'
            cidr: 5
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          addon: true
          bill: true
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          tags:
          - tags
          - tags
          address_family: 0
          public: true
          netmask: netmask
          management: true
          metro: '{}'
          cidr: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          state: state
          global_ip: true
          facility: '{}'
      properties:
        ip_addresses:
          items:
            $ref: '#/components/schemas/IPReservation'
          type: array
      type: object
    IPAvailabilitiesList:
      example:
        available:
        - available
        - available
      properties:
        available:
          items:
            type: string
          type: array
      type: object
    IPReservationRequestInput:
      example:
        fail_on_approval_required: true
        quantity: 0
        comments: comments
        metro: SV
        details: details
        customdata: '{}'
        type: type
        facility: facility
        tags:
        - tags
        - tags
      properties:
        type:
          type: string
        quantity:
          type: integer
        comments:
          type: string
        facility:
          type: string
        metro:
          description: The code of the metro you are requesting the IP reservation
            in.
          example: SV
          type: string
        customdata:
          properties: {}
          type: object
        tags:
          items:
            type: string
          type: array
        details:
          type: string
        fail_on_approval_required:
          type: boolean
      required:
      - quantity
      - type
      type: object
    VirtualNetwork:
      example:
        vxlan: 0
        metro_code: metro_code
        instances:
        - href: href
        - href: href
        metro:
          href: href
        description: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        facility:
          href: href
        assigned_to_virtual_circuit: true
        assigned_to:
          href: href
      properties:
        id:
          format: uuid
          type: string
        description:
          format: uuid
          type: string
        vxlan:
          type: integer
        facility:
          $ref: '#/components/schemas/Href'
        instances:
          description: A list of instances with ports currently associated to this
            Virtual Network.
          items:
            $ref: '#/components/schemas/Href'
          type: array
        metro_code:
          description: The Metro code of the metro in which this Virtual Network is
            defined.
          type: string
        metro:
          $ref: '#/components/schemas/Href'
        assigned_to_virtual_circuit:
          description: True if the virtual network is attached to a virtual circuit.
            False if not.
          type: boolean
        assigned_to:
          $ref: '#/components/schemas/Href'
        href:
          type: string
      type: object
    VirtualNetworkCreateInput:
      example:
        vxlan: 1099
        project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        metro: metro
        description: description
        facility: facility
      properties:
        project_id:
          format: uuid
          type: string
        description:
          type: string
        facility:
          description: The UUID (or facility code) for the Facility in which to create
            this Virtual network.
          type: string
        metro:
          description: The UUID (or metro code) for the Metro in which to create this
            Virtual Network.
          type: string
        vxlan:
          description: VLAN ID between 2-3999. Must be unique for the project within
            the Metro in which this Virtual Network is being created. If no value
            is specified, the next-available VLAN ID in the range 1000-1999 will be
            automatically selected.
          example: 1099
          type: integer
      required:
      - project_id
      type: object
    VirtualNetworkList:
      example:
        virtual_networks:
        - vxlan: 0
          metro_code: metro_code
          instances:
          - href: href
          - href: href
          metro:
            href: href
          description: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          facility:
            href: href
          assigned_to_virtual_circuit: true
          assigned_to:
            href: href
        - vxlan: 0
          metro_code: metro_code
          instances:
          - href: href
          - href: href
          metro:
            href: href
          description: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          facility:
            href: href
          assigned_to_virtual_circuit: true
          assigned_to:
            href: href
      properties:
        virtual_networks:
          items:
            $ref: '#/components/schemas/VirtualNetwork'
          type: array
      type: object
    OperatingSystem:
      example:
        distro: distro
        preinstallable: true
        licensed: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provisionable_on:
        - provisionable_on
        - provisionable_on
        version: version
        slug: slug
        pricing: '{}'
      properties:
        id:
          format: uuid
          type: string
        slug:
          type: string
        name:
          type: string
        distro:
          type: string
        version:
          type: string
        preinstallable:
          description: Servers can be already preinstalled with OS in order to shorten
            provision time.
          type: boolean
        provisionable_on:
          items:
            type: string
          type: array
        pricing:
          description: This object contains price per time unit and optional multiplier
            value if licence price depends on hardware plan or components (e.g. number
            of cores)
          properties: {}
          type: object
        licensed:
          description: Licenced OS is priced according to pricing property
          type: boolean
      type: object
    OperatingSystemList:
      items:
        $ref: '#/components/schemas/OperatingSystem'
      type: array
    Organization:
      example:
        website: website
        projects:
        - href: href
        - href: href
        address:
          country: country
          address: address
          address2: address2
          city: city
          coordinates:
            latitude: latitude
            longitude: longitude
          state: state
          zip_code: zip_code
        credit_amount: 5.962134
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        billing_address:
          country: country
          address: address
          address2: address2
          city: city
          coordinates:
            latitude: latitude
            longitude: longitude
          state: state
          zip_code: zip_code
        entitlement:
          ip_quota: '{}'
          project_quota: 6
          feature_access: '{}'
          name: name
          description: description
          weight: 0
          volume_limits: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          volume_quota: '{}'
          instance_quota: '{}'
          slug: slug
        memberships:
        - href: href
        - href: href
        enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
        twitter: twitter
        updated_at: 2000-01-23T04:56:07.000+00:00
        terms: 1
        members:
        - href: href
        - href: href
        name: name
        logo: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customdata: '{}'
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        website:
          type: string
        twitter:
          type: string
        logo:
          format: binary
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        projects:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        members:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        memberships:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        entitlement:
          $ref: '#/components/schemas/Entitlement'
        terms:
          type: integer
        credit_amount:
          format: float
          type: number
        customdata:
          properties: {}
          type: object
        enforce_2fa_at:
          description: Force to all members to have enabled the two factor authentication
            after that date, unless the value is null
          format: date-time
          type: string
      type: object
    OrganizationInput:
      example:
        website: website
        twitter: twitter
        address:
          country: country
          address: address
          address2: address2
          city: city
          coordinates:
            latitude: latitude
            longitude: longitude
          state: state
          zip_code: zip_code
        name: name
        description: description
        logo: ""
        billing_address:
          country: country
          address: address
          address2: address2
          city: city
          coordinates:
            latitude: latitude
            longitude: longitude
          state: state
          zip_code: zip_code
        customdata: '{}'
        enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        description:
          type: string
        website:
          type: string
        twitter:
          type: string
        logo:
          format: binary
          type: string
        address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        customdata:
          properties: {}
          type: object
        enforce_2fa_at:
          description: Force to all members to have enabled the two factor authentication
            after that date, unless the value is null
          format: date-time
          type: string
      type: object
    OrganizationList:
      example:
        meta:
          next:
            href: href
          total: 0
          previous:
            href: href
          last:
            href: href
          self:
            href: href
          first:
            href: href
        organizations:
        - website: website
          projects:
          - href: href
          - href: href
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          credit_amount: 5.962134
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          billing_address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          entitlement:
            ip_quota: '{}'
            project_quota: 6
            feature_access: '{}'
            name: name
            description: description
            weight: 0
            volume_limits: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            volume_quota: '{}'
            instance_quota: '{}'
            slug: slug
          memberships:
          - href: href
          - href: href
          enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
          twitter: twitter
          updated_at: 2000-01-23T04:56:07.000+00:00
          terms: 1
          members:
          - href: href
          - href: href
          name: name
          logo: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customdata: '{}'
        - website: website
          projects:
          - href: href
          - href: href
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          credit_amount: 5.962134
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          billing_address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          entitlement:
            ip_quota: '{}'
            project_quota: 6
            feature_access: '{}'
            name: name
            description: description
            weight: 0
            volume_limits: '{}'
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            volume_quota: '{}'
            instance_quota: '{}'
            slug: slug
          memberships:
          - href: href
          - href: href
          enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
          twitter: twitter
          updated_at: 2000-01-23T04:56:07.000+00:00
          terms: 1
          members:
          - href: href
          - href: href
          name: name
          logo: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customdata: '{}'
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    PaymentMethod:
      example:
        projects:
        - href: href
        - href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        billing_address:
          street_address: street_address
          country_code_alpha2: country_code_alpha2
          postal_code: postal_code
        type: type
        card_type: card_type
        cardholder_name: cardholder_name
        created_by_user:
          href: href
        expiration_year: expiration_year
        default: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        organization:
          href: href
        name: name
        expiration_month: expiration_month
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        type:
          type: string
        default:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        card_type:
          type: string
        expiration_month:
          type: string
        expiration_year:
          type: string
        cardholder_name:
          type: string
        billing_address:
          $ref: '#/components/schemas/PaymentMethodBillingAddress'
        email:
          type: string
        created_by_user:
          $ref: '#/components/schemas/Href'
        organization:
          $ref: '#/components/schemas/Href'
        projects:
          items:
            $ref: '#/components/schemas/Href'
          type: array
      type: object
    PaymentMethodBillingAddress:
      example:
        street_address: street_address
        country_code_alpha2: country_code_alpha2
        postal_code: postal_code
      properties:
        street_address:
          type: string
        postal_code:
          type: string
        country_code_alpha2:
          type: string
      type: object
    PaymentMethodCreateInput:
      example:
        default: true
        name: name
        nonce: nonce
      properties:
        name:
          type: string
        nonce:
          type: string
        default:
          type: boolean
      required:
      - name
      - nonce
      type: object
    PaymentMethodUpdateInput:
      example:
        expiration_year: 0
        default: true
        name: name
        expiration_month: expiration_month
        billing_address: '{}'
        cardholder_name: cardholder_name
      properties:
        name:
          type: string
        default:
          type: boolean
        cardholder_name:
          type: string
        expiration_month:
          type: string
        expiration_year:
          type: integer
        billing_address:
          properties: {}
          type: object
      type: object
    PaymentMethodList:
      example:
        payment_methods:
        - projects:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          billing_address:
            street_address: street_address
            country_code_alpha2: country_code_alpha2
            postal_code: postal_code
          type: type
          card_type: card_type
          cardholder_name: cardholder_name
          created_by_user:
            href: href
          expiration_year: expiration_year
          default: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          organization:
            href: href
          name: name
          expiration_month: expiration_month
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - projects:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          billing_address:
            street_address: street_address
            country_code_alpha2: country_code_alpha2
            postal_code: postal_code
          type: type
          card_type: card_type
          cardholder_name: cardholder_name
          created_by_user:
            href: href
          expiration_year: expiration_year
          default: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          organization:
            href: href
          name: name
          expiration_month: expiration_month
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
      properties:
        payment_methods:
          items:
            $ref: '#/components/schemas/PaymentMethod'
          type: array
      type: object
    Plan:
      example:
        specs: '{}'
        legacy: true
        line: line
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        available_in:
        - href: href
        - href: href
        class: class
        slug: slug
        pricing: '{}'
      properties:
        id:
          format: uuid
          type: string
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        line:
          type: string
        specs:
          properties: {}
          type: object
        pricing:
          properties: {}
          type: object
        legacy:
          type: boolean
        class:
          type: string
        available_in:
          description: Shows which facilities the plan is available in, and the facility-based
            price if it is different from the default price.
          items:
            $ref: '#/components/schemas/Href'
          type: array
      type: object
    PlanList:
      example:
        plans:
        - specs: '{}'
          legacy: true
          line: line
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          available_in:
          - href: href
          - href: href
          class: class
          slug: slug
          pricing: '{}'
        - specs: '{}'
          legacy: true
          line: line
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          available_in:
          - href: href
          - href: href
          class: class
          slug: slug
          pricing: '{}'
      properties:
        plans:
          items:
            $ref: '#/components/schemas/Plan'
          type: array
      type: object
    Port:
      example:
        disbond_operation_supported: true
        data: '{}'
        name: name
        virtual_networks:
        - href: href
        - href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        type: type
      properties:
        id:
          format: uuid
          type: string
        type:
          type: string
        name:
          type: string
        data:
          properties: {}
          type: object
        disbond_operation_supported:
          description: Indicates whether or not the bond can be broken on the port
            (when applicable).
          type: boolean
        virtual_networks:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        href:
          type: string
      type: object
    PortAssignInput:
      example:
        vnid: vnid
      properties:
        vnid:
          description: 'The UUID of the Virtual Network record, or the VLAN value
            itself (ex: ''1001'').'
          type: string
      type: object
    PortConvertLayer3Input:
      example:
        request_ips:
        - address_family: 0
          public: true
        - address_family: 0
          public: true
      properties:
        request_ips:
          items:
            $ref: '#/components/schemas/PortConvertLayer3Input_request_ips'
          type: array
      type: object
    Project:
      example:
        devices:
        - href: href
        - href: href
        volumes:
        - href: href
        - href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        memberships:
        - href: href
        - href: href
        bgp_config:
          href: href
        max_devices: '{}'
        ssh_keys:
        - href: href
        - href: href
        updated_at: 2000-01-23T04:56:07.000+00:00
        invitations:
        - href: href
        - href: href
        members:
        - href: href
        - href: href
        name: name
        network_status: '{}'
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customdata: '{}'
        payment_method:
          href: href
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        max_devices:
          properties: {}
          type: object
        members:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        memberships:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        network_status:
          properties: {}
          type: object
        invitations:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        payment_method:
          $ref: '#/components/schemas/Href'
        devices:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        ssh_keys:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        volumes:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        bgp_config:
          $ref: '#/components/schemas/Href'
        customdata:
          properties: {}
          type: object
      type: object
    ProjectCreateInput:
      example:
        payment_method_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        customdata: '{}'
      properties:
        name:
          type: string
        payment_method_id:
          format: uuid
          type: string
        customdata:
          properties: {}
          type: object
      required:
      - name
      type: object
    ProjectCreateFromRootInput:
      example:
        payment_method_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        customdata: '{}'
      properties:
        name:
          type: string
        organization_id:
          format: uuid
          type: string
        payment_method_id:
          format: uuid
          type: string
        customdata:
          properties: {}
          type: object
      required:
      - name
      type: object
    ProjectUpdateInput:
      example:
        payment_method_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        backend_transfer_enabled: true
        customdata: '{}'
      properties:
        name:
          type: string
        payment_method_id:
          format: uuid
          type: string
        backend_transfer_enabled:
          type: boolean
        customdata:
          properties: {}
          type: object
      type: object
    ProjectList:
      example:
        projects:
        - devices:
          - href: href
          - href: href
          volumes:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          memberships:
          - href: href
          - href: href
          bgp_config:
            href: href
          max_devices: '{}'
          ssh_keys:
          - href: href
          - href: href
          updated_at: 2000-01-23T04:56:07.000+00:00
          invitations:
          - href: href
          - href: href
          members:
          - href: href
          - href: href
          name: name
          network_status: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customdata: '{}'
          payment_method:
            href: href
        - devices:
          - href: href
          - href: href
          volumes:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          memberships:
          - href: href
          - href: href
          bgp_config:
            href: href
          max_devices: '{}'
          ssh_keys:
          - href: href
          - href: href
          updated_at: 2000-01-23T04:56:07.000+00:00
          invitations:
          - href: href
          - href: href
          members:
          - href: href
          - href: href
          name: name
          network_status: '{}'
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customdata: '{}'
          payment_method:
            href: href
        meta:
          next:
            href: href
          total: 0
          previous:
            href: href
          last:
            href: href
          self:
            href: href
          first:
            href: href
      properties:
        projects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    CreateSelfServiceReservationRequest:
      example:
        period:
          unit: monthly
          count: 0.8008281904610115
        item:
        - amount: 6.0274563
          metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          quantity: 0
          term: term
          plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - amount: 6.0274563
          metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          quantity: 0
          term: term
          plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notes: notes
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        start_date:
          format: date-time
          type: string
        period:
          $ref: '#/components/schemas/CreateSelfServiceReservationRequest_period'
        notes:
          type: string
        item:
          items:
            $ref: '#/components/schemas/SelfServiceReservationItemRequest'
          type: array
      type: object
    SelfServiceReservationResponse:
      example:
        period:
          unit: monthly
          count: 0.8008281904610115
        item:
        - plan_slug: plan_slug
          amount: 5.962134
          metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          quantity: 1
          metro_code: metro_code
          metro_name: metro_name
          term: term
          id: id
          plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan_name: plan_name
        - plan_slug: plan_slug
          amount: 5.962134
          metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          quantity: 1
          metro_code: metro_code
          metro_name: metro_name
          term: term
          id: id
          plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan_name: plan_name
        notes: notes
        total_cost: 6
        project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organization: organization
        organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        project: project
        status: status
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          type: string
        start_date:
          format: date-time
          type: string
        period:
          $ref: '#/components/schemas/CreateSelfServiceReservationRequest_period'
        total_cost:
          type: integer
        created_at:
          format: date-time
          type: string
        notes:
          type: string
        organization:
          type: string
        organization_id:
          format: uuid
          type: string
        project:
          type: string
        project_id:
          format: uuid
          type: string
        item:
          items:
            $ref: '#/components/schemas/SelfServiceReservationItemResponse'
          type: array
      type: object
    SelfServiceReservationList:
      example:
        reservations:
        - period:
            unit: monthly
            count: 0.8008281904610115
          item:
          - plan_slug: plan_slug
            amount: 5.962134
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 1
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          - plan_slug: plan_slug
            amount: 5.962134
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 1
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          notes: notes
          total_cost: 6
          project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization: organization
          organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          project: project
          status: status
          start_date: 2000-01-23T04:56:07.000+00:00
        - period:
            unit: monthly
            count: 0.8008281904610115
          item:
          - plan_slug: plan_slug
            amount: 5.962134
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 1
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          - plan_slug: plan_slug
            amount: 5.962134
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 1
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          notes: notes
          total_cost: 6
          project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization: organization
          organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          project: project
          status: status
          start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        reservations:
          items:
            $ref: '#/components/schemas/SelfServiceReservationResponse'
          type: array
      type: object
    SelfServiceReservationItemRequest:
      example:
        amount: 6.0274563
        metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        quantity: 0
        term: term
        plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        metro_id:
          format: uuid
          type: string
        plan_id:
          format: uuid
          type: string
        quantity:
          type: integer
        amount:
          format: float
          type: number
        term:
          type: string
      type: object
    SelfServiceReservationItemResponse:
      example:
        plan_slug: plan_slug
        amount: 5.962134
        metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        quantity: 1
        metro_code: metro_code
        metro_name: metro_name
        term: term
        id: id
        plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plan_name: plan_name
      properties:
        id:
          type: string
        metro_id:
          format: uuid
          type: string
        metro_code:
          type: string
        metro_name:
          type: string
        plan_id:
          format: uuid
          type: string
        plan_name:
          type: string
        plan_slug:
          type: string
        quantity:
          type: integer
        amount:
          format: float
          type: number
        term:
          type: string
      type: object
    SpotMarketRequest:
      example:
        end_at: 2000-01-23T04:56:07.000+00:00
        instances:
          href: href
        metro: '{}'
        devices_min: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        devices_max: 6
        max_bid_price: 1.4658129
        href: href
        facilities:
          href: href
      properties:
        id:
          format: uuid
          type: string
        devices_min:
          type: integer
        devices_max:
          type: integer
        max_bid_price:
          format: float
          type: number
        created_at:
          format: date-time
          type: string
        end_at:
          format: date-time
          type: string
        href:
          type: string
        facilities:
          $ref: '#/components/schemas/Href'
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - description: The metro the spot market request was created in
            type: object
          type: object
        project:
          $ref: '#/components/schemas/Href'
        instances:
          $ref: '#/components/schemas/Href'
      type: object
    SpotMarketRequestList:
      example:
        spot_market_requests:
        - end_at: 2000-01-23T04:56:07.000+00:00
          instances:
            href: href
          metro: '{}'
          devices_min: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          devices_max: 6
          max_bid_price: 1.4658129
          href: href
          facilities:
            href: href
        - end_at: 2000-01-23T04:56:07.000+00:00
          instances:
            href: href
          metro: '{}'
          devices_min: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          devices_max: 6
          max_bid_price: 1.4658129
          href: href
          facilities:
            href: href
      properties:
        spot_market_requests:
          items:
            $ref: '#/components/schemas/SpotMarketRequest'
          type: array
      type: object
    SpotMarketRequestCreateInput:
      example:
        end_at: 2000-01-23T04:56:07.000+00:00
        metro: metro
        instance_attributes:
          user_ssh_keys:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          private_ipv4_subnet_size: 6
          description: description
          hostnames:
          - hostnames
          - hostnames
          termination_time: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          project_ssh_keys:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userdata: userdata
          features:
          - features
          - features
          hostname: hostname
          no_ssh_keys: true
          public_ipv4_subnet_size: 0
          operating_system: operating_system
          billing_cycle: billing_cycle
          always_pxe: true
          customdata: '{}'
          locked: true
          plan: plan
        devices_min: 1
        devices_max: 5
        max_bid_price: 5.637377
        facilities:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        instance_attributes:
          $ref: '#/components/schemas/SpotMarketRequestCreateInput_instance_attributes'
        devices_min:
          type: integer
        devices_max:
          type: integer
        max_bid_price:
          format: float
          type: number
        end_at:
          format: date-time
          type: string
        facilities:
          items:
            format: uuid
            type: string
          type: array
        metro:
          description: The metro ID or code the spot market request will be created
            in.
          type: string
      type: object
    SSHKey:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        fingerprint: fingerprint
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        label: label
        href: href
        key: key
        entity:
          href: href
      properties:
        id:
          format: uuid
          type: string
        label:
          type: string
        key:
          type: string
        fingerprint:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        entity:
          $ref: '#/components/schemas/Href'
        href:
          type: string
      type: object
    SSHKeyInput:
      example:
        label: label
        key: key
      properties:
        label:
          type: string
        key:
          type: string
      type: object
    SSHKeyCreateInput:
      example:
        label: label
        key: key
        instances_ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        label:
          type: string
        key:
          type: string
        instances_ids:
          description: |-
            List of instance UUIDs to associate SSH key with, when empty array is sent all instances belonging
                  to entity will be included
          items:
            format: uuid
            type: string
          type: array
      type: object
    SSHKeyList:
      example:
        ssh_keys:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          href: href
          key: key
          entity:
            href: href
        - updated_at: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          href: href
          key: key
          entity:
            href: href
      properties:
        ssh_keys:
          items:
            $ref: '#/components/schemas/SSHKey'
          type: array
      type: object
    VolumeAttachment:
      example:
        volume:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        device:
          href: href
      properties:
        id:
          format: uuid
          type: string
        created_at:
          format: date-time
          type: string
        volume:
          $ref: '#/components/schemas/Href'
        device:
          $ref: '#/components/schemas/Href'
        href:
          type: string
      type: object
    VolumeAttachmentInput:
      example:
        device_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        device_id:
          format: uuid
          type: string
      required:
      - device_id
      type: object
    VolumeAttachmentList:
      example:
        attachments:
        - volume:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          device:
            href: href
        - volume:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          device:
            href: href
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/VolumeAttachment'
          type: array
      type: object
    VolumeSnapshot:
      example:
        volume:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: status
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
        timestamp:
          format: date-time
          type: string
        volume:
          $ref: '#/components/schemas/Href'
      type: object
    VolumeSnapshotList:
      example:
        snapshots:
        - volume:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: status
          timestamp: 2000-01-23T04:56:07.000+00:00
        - volume:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: status
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        snapshots:
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
          type: array
      type: object
    SnapshotPolicy:
      example:
        snapshot_frequency: snapshot_frequency
        volume:
          href: href
        snapshot_count: 20
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
      properties:
        id:
          format: uuid
          type: string
        snapshot_count:
          exclusiveMaximum: false
          maximum: 256
          type: integer
        snapshot_frequency:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        volume:
          $ref: '#/components/schemas/Href'
        href:
          type: string
      type: object
    SnapshotPolicyInput:
      example:
        snapshot_frequency: snapshot_frequency
        snapshot_count: 6
      properties:
        snapshot_count:
          type: integer
        snapshot_frequency:
          type: string
      type: object
    Volume:
      example:
        attachments:
        - href: href
        - href: href
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        size: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        snapshot_policies:
        - href: href
        - href: href
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        billing_cycle: billing_cycle
        state: state
        href: href
        customdata: '{}'
        locked: true
        facility:
          href: href
        plan:
          specs: '{}'
          legacy: true
          line: line
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          available_in:
          - href: href
          - href: href
          class: class
          slug: slug
          pricing: '{}'
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        size:
          type: integer
        locked:
          type: boolean
        billing_cycle:
          type: string
        state:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        project:
          $ref: '#/components/schemas/Href'
        facility:
          $ref: '#/components/schemas/Href'
        snapshot_policies:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        attachments:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        plan:
          $ref: '#/components/schemas/Plan'
        href:
          type: string
        customdata:
          properties: {}
          type: object
      type: object
    VolumeCreateInput:
      example:
        size: 0
        snapshot_policies:
          snapshot_frequency: snapshot_frequency
          snapshot_count: 6
        description: description
        billing_cycle: billing_cycle
        customdata: '{}'
        locked: true
        facility: facility
        plan: plan
      properties:
        description:
          type: string
        facility:
          description: ams1, ewr1, nrt1, sjc1
          type: string
        plan:
          description: storage_1, storage_2
          type: string
        size:
          type: integer
        locked:
          type: boolean
        billing_cycle:
          description: hourly
          type: string
        snapshot_policies:
          $ref: '#/components/schemas/SnapshotPolicyInput'
        customdata:
          properties: {}
          type: object
      required:
      - facility
      - plan
      - size
      type: object
    VolumeUpdateInput:
      example:
        size: 0
        description: description
        billing_cycle: billing_cycle
        customdata: '{}'
        locked: true
      properties:
        description:
          type: string
        size:
          type: integer
        locked:
          type: boolean
        billing_cycle:
          description: hourly
          type: string
        customdata:
          properties: {}
          type: object
      type: object
    VolumeList:
      example:
        meta:
          next:
            href: href
          total: 0
          previous:
            href: href
          last:
            href: href
          self:
            href: href
          first:
            href: href
        volumes:
        - attachments:
          - href: href
          - href: href
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          size: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          snapshot_policies:
          - href: href
          - href: href
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          billing_cycle: billing_cycle
          state: state
          href: href
          customdata: '{}'
          locked: true
          facility:
            href: href
          plan:
            specs: '{}'
            legacy: true
            line: line
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            available_in:
            - href: href
            - href: href
            class: class
            slug: slug
            pricing: '{}'
        - attachments:
          - href: href
          - href: href
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          size: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          snapshot_policies:
          - href: href
          - href: href
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          billing_cycle: billing_cycle
          state: state
          href: href
          customdata: '{}'
          locked: true
          facility:
            href: href
          plan:
            specs: '{}'
            legacy: true
            line: line
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            available_in:
            - href: href
            - href: href
            class: class
            slug: slug
            pricing: '{}'
      properties:
        volumes:
          items:
            $ref: '#/components/schemas/Volume'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    SupportRequestInput:
      example:
        device_id: device_id
        project_id: project_id
        subject: subject
        message: message
        priority: urgent
      properties:
        subject:
          type: string
        message:
          type: string
        project_id:
          type: string
        device_id:
          type: string
        priority:
          enum:
          - urgent
          - high
          - medium
          - low
          type: string
      required:
      - message
      - subject
      type: object
    Meta:
      example:
        next:
          href: href
        total: 0
        previous:
          href: href
        last:
          href: href
        self:
          href: href
        first:
          href: href
      properties:
        first:
          $ref: '#/components/schemas/Href'
        previous:
          $ref: '#/components/schemas/Href'
        self:
          $ref: '#/components/schemas/Href'
        next:
          $ref: '#/components/schemas/Href'
        last:
          $ref: '#/components/schemas/Href'
        total:
          type: integer
      type: object
    Href:
      example:
        href: href
      properties:
        href:
          type: string
      required:
      - href
      type: object
    Timeframe:
      example:
        started_at: 2000-01-23T04:56:07.000+00:00
        ended_at: 2000-01-23T04:56:07.000+00:00
      properties:
        started_at:
          format: date-time
          type: string
        ended_at:
          format: date-time
          type: string
      required:
      - ended_at
      - started_at
      type: object
    CapacityList:
      example:
        capacity:
          ord1:
            baremetal_1e:
              level: level
          syd1:
            baremetal_1e:
              level: level
          ams1:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          fra1:
            baremetal_1e:
              level: level
          sin1:
            baremetal_1e:
              level: level
          yyz1:
            baremetal_1e:
              level: level
          sjc1:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          nrt1:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          dfw1:
            baremetal_1e:
              level: level
          iad1:
            baremetal_1e:
              level: level
          atl1:
            baremetal_1e:
              level: level
          sea1:
            baremetal_1e:
              level: level
          lax1:
            baremetal_1e:
              level: level
          ewr1:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
      properties:
        capacity:
          $ref: '#/components/schemas/CapacityReport'
      type: object
    CapacityReport:
      example:
        ord1:
          baremetal_1e:
            level: level
        syd1:
          baremetal_1e:
            level: level
        ams1:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        fra1:
          baremetal_1e:
            level: level
        sin1:
          baremetal_1e:
            level: level
        yyz1:
          baremetal_1e:
            level: level
        sjc1:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        nrt1:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        dfw1:
          baremetal_1e:
            level: level
        iad1:
          baremetal_1e:
            level: level
        atl1:
          baremetal_1e:
            level: level
        sea1:
          baremetal_1e:
            level: level
        lax1:
          baremetal_1e:
            level: level
        ewr1:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
      properties:
        ams1:
          $ref: '#/components/schemas/CapacityPerFacility'
        atl1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        dfw1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        ewr1:
          $ref: '#/components/schemas/CapacityPerFacility'
        fra1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        iad1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        lax1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        nrt1:
          $ref: '#/components/schemas/CapacityPerFacility'
        ord1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        sea1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        sin1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        sjc1:
          $ref: '#/components/schemas/CapacityPerFacility'
        syd1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
        yyz1:
          $ref: '#/components/schemas/CapacityPerNewFacility'
      type: object
    MetroCapacityList:
      example:
        capacity:
          sv:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          sg:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          ch:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          la:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          ny:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          am:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
          da:
            c2.medium.x86:
              level: level
            baremetal_2a2:
              level: level
            m2.xlarge.x86:
              level: level
            baremetal_1:
              level: level
            baremetal_2a:
              level: level
            baremetal_0:
              level: level
            baremetal_3:
              level: level
            baremetal_s:
              level: level
            baremetal_2:
              level: level
      properties:
        capacity:
          $ref: '#/components/schemas/MetroCapacityReport'
      type: object
    MetroCapacityReport:
      example:
        sv:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        sg:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        ch:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        la:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        ny:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        am:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
        da:
          c2.medium.x86:
            level: level
          baremetal_2a2:
            level: level
          m2.xlarge.x86:
            level: level
          baremetal_1:
            level: level
          baremetal_2a:
            level: level
          baremetal_0:
            level: level
          baremetal_3:
            level: level
          baremetal_s:
            level: level
          baremetal_2:
            level: level
      properties:
        ny:
          $ref: '#/components/schemas/CapacityPerFacility'
        sv:
          $ref: '#/components/schemas/CapacityPerFacility'
        am:
          $ref: '#/components/schemas/CapacityPerFacility'
        ch:
          $ref: '#/components/schemas/CapacityPerFacility'
        la:
          $ref: '#/components/schemas/CapacityPerFacility'
        sg:
          $ref: '#/components/schemas/CapacityPerFacility'
        da:
          $ref: '#/components/schemas/CapacityPerFacility'
      type: object
    CapacityPerFacility:
      example:
        c2.medium.x86:
          level: level
        baremetal_2a2:
          level: level
        m2.xlarge.x86:
          level: level
        baremetal_1:
          level: level
        baremetal_2a:
          level: level
        baremetal_0:
          level: level
        baremetal_3:
          level: level
        baremetal_s:
          level: level
        baremetal_2:
          level: level
      properties:
        baremetal_2a:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        baremetal_2a2:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        baremetal_1:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        baremetal_3:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        c2.medium.x86:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        baremetal_2:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        m2.xlarge.x86:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        baremetal_s:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
        baremetal_0:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
      type: object
    CapacityPerNewFacility:
      example:
        baremetal_1e:
          level: level
      properties:
        baremetal_1e:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
      type: object
    CapacityLevelPerBaremetal:
      example:
        level: level
      properties:
        level:
          type: string
      type: object
    CapacityInput:
      example:
        servers:
        - quantity: quantity
          facility: facility
          plan: plan
        - quantity: quantity
          facility: facility
          plan: plan
      properties:
        servers:
          items:
            $ref: '#/components/schemas/ServerInfo'
          type: array
      type: object
    ServerInfo:
      example:
        quantity: quantity
        facility: facility
        plan: plan
      properties:
        facility:
          type: string
        plan:
          type: string
        quantity:
          type: string
      type: object
    CapacityPerMetroInput:
      example:
        servers:
        - quantity: quantity
          metro: metro
          plan: plan
        - quantity: quantity
          metro: metro
          plan: plan
      properties:
        servers:
          items:
            $ref: '#/components/schemas/MetroServerInfo'
          type: array
      type: object
    MetroServerInfo:
      example:
        quantity: quantity
        metro: metro
        plan: plan
      properties:
        metro:
          description: The metro ID or code to check the capacity in.
          type: string
        plan:
          description: The plan ID or slug to check the capacity of.
          type: string
        quantity:
          description: The number of servers to check the capacity of.
          type: string
      type: object
    CapacityCheckPerFacilityList:
      example:
        servers:
        - quantity: quantity
          available: true
          facility: facility
          plan: plan
        - quantity: quantity
          available: true
          facility: facility
          plan: plan
      properties:
        servers:
          items:
            $ref: '#/components/schemas/CapacityCheckPerFacilityInfo'
          type: array
      type: object
    CapacityCheckPerFacilityInfo:
      example:
        quantity: quantity
        available: true
        facility: facility
        plan: plan
      properties:
        facility:
          type: string
        plan:
          type: string
        quantity:
          type: string
        available:
          type: boolean
      type: object
    CapacityCheckPerMetroList:
      example:
        servers:
        - quantity: quantity
          metro: metro
          available: true
          plan: plan
        - quantity: quantity
          metro: metro
          available: true
          plan: plan
      properties:
        servers:
          items:
            $ref: '#/components/schemas/CapacityCheckPerMetroInfo'
          type: array
      type: object
    CapacityCheckPerMetroInfo:
      example:
        quantity: quantity
        metro: metro
        available: true
        plan: plan
      properties:
        metro:
          description: The metro ID or code sent to check capacity.
          type: string
        plan:
          description: The plan ID or slug sent to check capacity.
          type: string
        quantity:
          description: The number of servers sent to check capacity.
          type: string
        available:
          description: Returns true if there is enough capacity in the metro to fulfill
            the quantity set. Returns false if there is not enough.
          type: boolean
      type: object
    SpotMarketPricesList:
      example:
        spot_market_prices:
          ord1:
            baremetal_1e:
              price: 0.8008282
          syd1:
            baremetal_1e:
              price: 0.8008282
          ams1:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          fra1:
            baremetal_1e:
              price: 0.8008282
          sin1:
            baremetal_1e:
              price: 0.8008282
          yyz1:
            baremetal_1e:
              price: 0.8008282
          sjc1:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          nrt1:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          dfw1:
            baremetal_1e:
              price: 0.8008282
          iad1:
            baremetal_1e:
              price: 0.8008282
          atl1:
            baremetal_1e:
              price: 0.8008282
          sea1:
            baremetal_1e:
              price: 0.8008282
          lax1:
            baremetal_1e:
              price: 0.8008282
          ewr1:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
      properties:
        spot_market_prices:
          $ref: '#/components/schemas/SpotPricesReport'
      type: object
    SpotPricesReport:
      example:
        ord1:
          baremetal_1e:
            price: 0.8008282
        syd1:
          baremetal_1e:
            price: 0.8008282
        ams1:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        fra1:
          baremetal_1e:
            price: 0.8008282
        sin1:
          baremetal_1e:
            price: 0.8008282
        yyz1:
          baremetal_1e:
            price: 0.8008282
        sjc1:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        nrt1:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        dfw1:
          baremetal_1e:
            price: 0.8008282
        iad1:
          baremetal_1e:
            price: 0.8008282
        atl1:
          baremetal_1e:
            price: 0.8008282
        sea1:
          baremetal_1e:
            price: 0.8008282
        lax1:
          baremetal_1e:
            price: 0.8008282
        ewr1:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
      properties:
        ams1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        atl1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        dfw1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        ewr1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        fra1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        iad1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        lax1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        nrt1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        ord1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        sea1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        sin1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        sjc1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        syd1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        yyz1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
      type: object
    SpotMarketPricesPerMetroList:
      example:
        spot_market_prices:
          sv:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          sg:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          ch:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          la:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          ny:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          am:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
          da:
            c2.medium.x86:
              price: 0.8008282
            baremetal_2a2:
              price: 0.8008282
            m2.xlarge.x86:
              price: 0.8008282
            baremetal_1:
              price: 0.8008282
            baremetal_2a:
              price: 0.8008282
            baremetal_0:
              price: 0.8008282
            baremetal_3:
              price: 0.8008282
            baremetal_s:
              price: 0.8008282
            baremetal_2:
              price: 0.8008282
      properties:
        spot_market_prices:
          $ref: '#/components/schemas/SpotMarketPricesPerMetroReport'
      type: object
    SpotMarketPricesPerMetroReport:
      example:
        sv:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        sg:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        ch:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        la:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        ny:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        am:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
        da:
          c2.medium.x86:
            price: 0.8008282
          baremetal_2a2:
            price: 0.8008282
          m2.xlarge.x86:
            price: 0.8008282
          baremetal_1:
            price: 0.8008282
          baremetal_2a:
            price: 0.8008282
          baremetal_0:
            price: 0.8008282
          baremetal_3:
            price: 0.8008282
          baremetal_s:
            price: 0.8008282
          baremetal_2:
            price: 0.8008282
      properties:
        ny:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        sv:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        am:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        ch:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        la:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        sg:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        da:
          $ref: '#/components/schemas/SpotPricesPerFacility'
      type: object
    SpotPricesPerFacility:
      example:
        c2.medium.x86:
          price: 0.8008282
        baremetal_2a2:
          price: 0.8008282
        m2.xlarge.x86:
          price: 0.8008282
        baremetal_1:
          price: 0.8008282
        baremetal_2a:
          price: 0.8008282
        baremetal_0:
          price: 0.8008282
        baremetal_3:
          price: 0.8008282
        baremetal_s:
          price: 0.8008282
        baremetal_2:
          price: 0.8008282
      properties:
        baremetal_2a:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_2a2:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_1:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_3:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        c2.medium.x86:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_2:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        m2.xlarge.x86:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_s:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_0:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
      type: object
    SpotPricesPerNewFacility:
      example:
        baremetal_1e:
          price: 0.8008282
      properties:
        baremetal_1e:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
      type: object
    SpotPricesPerBaremetal:
      example:
        price: 0.8008282
      properties:
        price:
          format: float
          type: number
      type: object
    SpotPricesHistoryReport:
      example:
        prices_history:
          datapoints:
          - null
          - null
      properties:
        prices_history:
          $ref: '#/components/schemas/SpotPricesDatapoints'
      type: object
    SpotPricesDatapoints:
      example:
        datapoints:
        - null
        - null
      properties:
        datapoints:
          items:
            $ref: '#/components/schemas/SpotPricesDatapointsList'
          type: array
      type: object
    SpotPricesDatapointsList:
      items:
        type: number
      type: array
    NewPassword:
      example:
        new_password: new_password
      properties:
        new_password:
          type: string
      type: object
    RecoveryCodeList:
      example:
        recovery_codes:
        - recovery_codes
        - recovery_codes
      properties:
        recovery_codes:
          items:
            type: string
          type: array
      type: object
    TransferRequest:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        target_organization:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
      properties:
        id:
          format: uuid
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        target_organization:
          $ref: '#/components/schemas/Href'
        project:
          $ref: '#/components/schemas/Href'
        href:
          type: string
      type: object
    TransferRequestInput:
      example:
        target_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        target_organization_id:
          format: uuid
          type: string
      type: object
    TransferRequestList:
      example:
        transfers:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          target_organization:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
        - updated_at: 2000-01-23T04:56:07.000+00:00
          target_organization:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
      properties:
        transfers:
          items:
            $ref: '#/components/schemas/TransferRequest'
          type: array
      type: object
    DeviceUsage:
      example:
        unit: unit
        total: total
        quantity: quantity
      properties:
        quantity:
          type: string
        unit:
          type: string
        total:
          type: string
      type: object
    ProjectUsage:
      example:
        unit: unit
        total: total
        quantity: quantity
        plan_version: plan_version
        price: price
        name: name
        type: type
        facility: facility
        plan: plan
      properties:
        facility:
          type: string
        type:
          type: string
        name:
          type: string
        plan:
          type: string
        plan_version:
          type: string
        quantity:
          type: string
        unit:
          type: string
        price:
          type: string
        total:
          type: string
      type: object
    DeviceUsageList:
      example:
        usages:
        - unit: unit
          total: total
          quantity: quantity
        - unit: unit
          total: total
          quantity: quantity
      properties:
        usages:
          items:
            $ref: '#/components/schemas/DeviceUsage'
          type: array
      type: object
    ProjectUsageList:
      example:
        usages:
        - unit: unit
          total: total
          quantity: quantity
          plan_version: plan_version
          price: price
          name: name
          type: type
          facility: facility
          plan: plan
        - unit: unit
          total: total
          quantity: quantity
          plan_version: plan_version
          price: price
          name: name
          type: type
          facility: facility
          plan: plan
      properties:
        usages:
          items:
            $ref: '#/components/schemas/ProjectUsage'
          type: array
      type: object
    User:
      example:
        avatar_thumb_url: avatar_thumb_url
        last_login_at: 2000-01-23T04:56:07.000+00:00
        max_projects: 0
        timezone: timezone
        last_name: last_name
        created_at: 2000-01-23T04:56:07.000+00:00
        short_id: short_id
        fraud_score: fraud_score
        emails:
        - href: href
        - href: href
        full_name: full_name
        avatar_url: avatar_url
        updated_at: 2000-01-23T04:56:07.000+00:00
        phone_number: phone_number
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
        customdata: '{}'
        first_name: first_name
        two_factor_auth: two_factor_auth
        max_organizations: 6
        email: email
      properties:
        id:
          format: uuid
          type: string
        short_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        email:
          type: string
        avatar_url:
          type: string
        avatar_thumb_url:
          type: string
        two_factor_auth:
          type: string
        max_projects:
          type: integer
        max_organizations:
          type: integer
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        timezone:
          type: string
        fraud_score:
          type: string
        last_login_at:
          format: date-time
          type: string
        emails:
          items:
            $ref: '#/components/schemas/Href'
          type: array
        href:
          type: string
        phone_number:
          type: string
        customdata:
          properties: {}
          type: object
      type: object
    UserUpdateInput:
      example:
        password: password
        timezone: timezone
        last_name: last_name
        phone_number: phone_number
        avatar: ""
        customdata: '{}'
        first_name: first_name
      properties:
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
        timezone:
          type: string
        password:
          type: string
        avatar:
          format: binary
          type: string
        customdata:
          properties: {}
          type: object
      type: object
    UserCreateInput:
      example:
        level: level
        timezone: timezone
        last_name: last_name
        avatar: ""
        title: title
        emails:
        - default: true
          address: address
        - default: true
          address: address
        social_accounts: '{}'
        password: password
        verified_at: 2000-01-23T04:56:07.000+00:00
        company_name: company_name
        phone_number: phone_number
        company_url: company_url
        customdata: '{}'
        locked: true
        first_name: first_name
        two_factor_auth: two_factor_auth
      properties:
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
        timezone:
          type: string
        password:
          type: string
        level:
          type: string
        title:
          type: string
        company_name:
          type: string
        company_url:
          type: string
        verified_at:
          format: date-time
          type: string
        social_accounts:
          properties: {}
          type: object
        two_factor_auth:
          type: string
        avatar:
          format: binary
          type: string
        emails:
          items:
            $ref: '#/components/schemas/EmailInput'
          type: array
        locked:
          type: boolean
        customdata:
          properties: {}
          type: object
      required:
      - emails
      - first_name
      - last_name
      type: object
    UserList:
      example:
        meta:
          next:
            href: href
          total: 0
          previous:
            href: href
          last:
            href: href
          self:
            href: href
          first:
            href: href
        users:
        - avatar_thumb_url: avatar_thumb_url
          last_login_at: 2000-01-23T04:56:07.000+00:00
          max_projects: 0
          timezone: timezone
          last_name: last_name
          created_at: 2000-01-23T04:56:07.000+00:00
          short_id: short_id
          fraud_score: fraud_score
          emails:
          - href: href
          - href: href
          full_name: full_name
          avatar_url: avatar_url
          updated_at: 2000-01-23T04:56:07.000+00:00
          phone_number: phone_number
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          customdata: '{}'
          first_name: first_name
          two_factor_auth: two_factor_auth
          max_organizations: 6
          email: email
        - avatar_thumb_url: avatar_thumb_url
          last_login_at: 2000-01-23T04:56:07.000+00:00
          max_projects: 0
          timezone: timezone
          last_name: last_name
          created_at: 2000-01-23T04:56:07.000+00:00
          short_id: short_id
          fraud_score: fraud_score
          emails:
          - href: href
          - href: href
          full_name: full_name
          avatar_url: avatar_url
          updated_at: 2000-01-23T04:56:07.000+00:00
          phone_number: phone_number
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          customdata: '{}'
          first_name: first_name
          two_factor_auth: two_factor_auth
          max_organizations: 6
          email: email
      properties:
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    Email:
      example:
        default: true
        address: address
        verified: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
      properties:
        id:
          format: uuid
          type: string
        address:
          type: string
        default:
          type: boolean
        verified:
          type: boolean
        href:
          type: string
      type: object
    Error:
      description: Error responses are included with 4xx and 5xx HTTP responses from
        the API service. Either "error" or "errors" will be set.
      properties:
        error:
          description: A description of the error that caused the request to fail.
          type: string
        errors:
          description: A list of errors that contributed to the request failing.
          items:
            description: An error message that contributed to the request failing.
            type: string
          type: array
      type: object
    PortVlanAssignmentBatch:
      example:
        quantity: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        port:
          disbond_operation_supported: true
          data: '{}'
          name: name
          virtual_networks:
          - href: href
          - href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
          type: type
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: queued
        error_messages:
        - error_messages
        - error_messages
        vlan_assignments:
        - vlan: 6
          native: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
        - vlan: 6
          native: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
      properties:
        id:
          format: uuid
          type: string
        error_messages:
          items:
            type: string
          type: array
        quantity:
          type: integer
        state:
          enum:
          - queued
          - in_progress
          - completed
          - failed
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        port:
          $ref: '#/components/schemas/Port'
        vlan_assignments:
          items:
            $ref: '#/components/schemas/PortVlanAssignmentBatch_vlan_assignments'
          type: array
      type: object
    PortVlanAssignmentBatchList:
      example:
        batches:
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          port:
            disbond_operation_supported: true
            data: '{}'
            name: name
            virtual_networks:
            - href: href
            - href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            type: type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: queued
          error_messages:
          - error_messages
          - error_messages
          vlan_assignments:
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          port:
            disbond_operation_supported: true
            data: '{}'
            name: name
            virtual_networks:
            - href: href
            - href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
            type: type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: queued
          error_messages:
          - error_messages
          - error_messages
          vlan_assignments:
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
      properties:
        batches:
          items:
            $ref: '#/components/schemas/PortVlanAssignmentBatch'
          type: array
      type: object
    PortVlanAssignmentBatchCreateInput:
      example:
        vlan_assignments:
        - vlan: vlan
          native: true
          state: assigned
        - vlan: vlan
          native: true
          state: assigned
      properties:
        vlan_assignments:
          items:
            $ref: '#/components/schemas/PortVlanAssignmentBatchCreateInput_vlan_assignments'
          type: array
      type: object
    PortVlanAssignment:
      example:
        virtual_network:
          href: href
        updated_at: 2000-01-23T04:56:07.000+00:00
        vlan: 0
        native: true
        port:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: assigned
      properties:
        id:
          format: uuid
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        native:
          type: boolean
        state:
          enum:
          - assigned
          - unassigning
          type: string
        vlan:
          type: integer
        port:
          $ref: '#/components/schemas/Href'
        virtual_network:
          $ref: '#/components/schemas/Href'
      type: object
    PortVlanAssignmentList:
      example:
        vlan_assignments:
        - virtual_network:
            href: href
          updated_at: 2000-01-23T04:56:07.000+00:00
          vlan: 0
          native: true
          port:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
        - virtual_network:
            href: href
          updated_at: 2000-01-23T04:56:07.000+00:00
          vlan: 0
          native: true
          port:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
      properties:
        vlan_assignments:
          items:
            $ref: '#/components/schemas/PortVlanAssignment'
          type: array
      type: object
    MetalGateway:
      example:
        virtual_network:
          href: href
        updated_at: 2000-01-23T04:56:07.000+00:00
        ip_reservation:
          href: href
        project:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: ready
        href: href
        created_by:
          href: href
      properties:
        id:
          format: uuid
          type: string
        state:
          description: The current state of the Metal Gateway. 'Ready' indicates the
            gateway record has been configured, but is currently not active on the
            network. 'Active' indicates the gateway has been configured on the network.
            'Deleting' is a temporary state used to indicate that the gateway is in
            the process of being un-configured from the network, after which the gateway
            record will be deleted.
          enum:
          - ready
          - active
          - deleting
          type: string
        project:
          $ref: '#/components/schemas/Href'
        virtual_network:
          $ref: '#/components/schemas/Href'
        ip_reservation:
          $ref: '#/components/schemas/Href'
        href:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        created_by:
          $ref: '#/components/schemas/Href'
      type: object
    MetalGatewayLite:
      properties:
        id:
          format: uuid
          type: string
        state:
          description: The current state of the Metal Gateway. 'Ready' indicates the
            gateway record has been configured, but is currently not active on the
            network. 'Active' indicates the gateway has been configured on the network.
            'Deleting' is a temporary state used to indicate that the gateway is in
            the process of being un-configured from the network, after which the gateway
            record will be deleted.
          enum:
          - ready
          - active
          - deleting
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        gateway_address:
          description: The gateway address with subnet CIDR value for this Metal Gateway.
            For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27
            would have a gateway address of 10.1.2.1/27.
          type: string
        vlan:
          description: 'The VLAN id of the Virtual Network record associated to this
            Metal Gateway. Example: 1001.'
          type: number
        href:
          type: string
      type: object
    MetalGatewayInput:
      example:
        ip_reservation_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        private_ipv4_subnet_size: 0
        virtual_network_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        virtual_network_id:
          description: The UUID of a metro virtual network that belongs to the same
            project as where the metal gateway will be created in.
          format: uuid
          type: string
        ip_reservation_id:
          description: The UUID of an IP reservation that belongs to the same project
            as where the metal gateway will be created in. This field is required
            unless the private IPv4 subnet size is specified.
          format: uuid
          type: string
        private_ipv4_subnet_size:
          description: |-
            The subnet size (8, 16, 32, 64, or 128) of the private IPv4 reservation that will be created for the metal gateway. This field is required unless a project IP reservation was specified.
                      Please keep in mind that the number of private metal gateway ranges are limited per project. If you would like to increase the limit per project, please contact support for assistance.
          type: integer
      required:
      - virtual_network_id
      type: object
    MetalGatewayList:
      example:
        MetalGateways:
        - virtual_network:
            href: href
          updated_at: 2000-01-23T04:56:07.000+00:00
          ip_reservation:
            href: href
          project:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: ready
          href: href
          created_by:
            href: href
        - virtual_network:
            href: href
          updated_at: 2000-01-23T04:56:07.000+00:00
          ip_reservation:
            href: href
          project:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: ready
          href: href
          created_by:
            href: href
      properties:
        MetalGateways:
          items:
            $ref: '#/components/schemas/MetalGateway'
          type: array
      type: object
    CreateEmailInput:
      example:
        address: address
      properties:
        address:
          type: string
      required:
      - address
      type: object
    UpdateEmailInput:
      example:
        default: true
      properties:
        default:
          type: boolean
      type: object
    InstancesBatchCreateInput_ip_addresses:
      example:
        address_family: 4.0
        public: false
        ip_reservations:
        - ip_reservations
        - ip_reservations
        cidr: 28.0
      properties:
        address_family:
          description: Address Family for IP Address
          example: 4.0
          format: integer
          type: number
        public:
          default: true
          description: Address Type for IP Address
          example: false
          type: boolean
        cidr:
          description: Cidr Size for the IP Block created. Valid values depends on
            the operating system been provisioned (28..32 for IPv4 addresses, 124..127
            for IPv6 addresses).
          example: 28.0
          format: integer
          type: number
        ip_reservations:
          description: UUIDs of any IP reservations to use when assigning IPs
          items:
            type: string
          type: array
      type: object
    InstancesBatchCreateInput_batches:
      example:
        user_ssh_keys:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ip_addresses:
        - address_family: 4.0
          public: false
          ip_reservations:
          - ip_reservations
          - ip_reservations
          cidr: 28.0
        - address_family: 4.0
          public: false
          ip_reservations:
          - ip_reservations
          - ip_reservations
          cidr: 28.0
        description: description
        hostnames:
        - hostnames
        - hostnames
        termination_time: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
        project_ssh_keys:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userdata: userdata
        features:
        - features
        - features
        hostname: hostname
        no_ssh_keys: true
        metro: metro
        operating_system: operating_system
        billing_cycle: billing_cycle
        always_pxe: true
        customdata: '{}'
        locked: true
        plan: plan
        facility:
        - facility
        - facility
      properties:
        plan:
          type: string
        hostname:
          type: string
        hostnames:
          items:
            type: string
          type: array
        facility:
          description: Array of facility codes the batch can use for provisioning.
            This param also takes a string if you want the batch to be fulfilled in
            only one facility. Cannot be set if the metro is already set.
          items:
            type: string
          type: array
        metro:
          description: The metro ID or code the batch can use for provisioning. Cannot
            be set if the facility is already set.
          type: string
        description:
          type: string
        billing_cycle:
          type: string
        operating_system:
          type: string
        always_pxe:
          type: boolean
        userdata:
          type: string
        locked:
          type: boolean
        termination_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
        project_ssh_keys:
          items:
            format: uuid
            type: string
          type: array
        user_ssh_keys:
          description: The UUIDs of users whose SSH keys should be included on the
            provisioned device.
          items:
            format: uuid
            type: string
          type: array
        no_ssh_keys:
          type: boolean
        features:
          items:
            type: string
          type: array
        customdata:
          properties: {}
          type: object
        ip_addresses:
          items:
            $ref: '#/components/schemas/InstancesBatchCreateInput_ip_addresses'
          type: array
      type: object
    DeviceCreateInput_ip_addresses:
      example:
        address_family: 4.0
        public: false
        ip_reservations:
        - ip_reservations
        - ip_reservations
        cidr: 28.0
      properties:
        address_family:
          description: Address Family for IP Address
          example: 4.0
          format: integer
          type: number
        public:
          default: true
          description: Address Type for IP Address
          example: false
          type: boolean
        cidr:
          description: Cidr Size for the IP Block created. Valid values depends on
            the operating system being provisioned. (28..32 for IPv4 addresses, 124..127
            for IPv6 addresses)
          example: 28.0
          format: integer
          type: number
        ip_reservations:
          description: UUIDs of any IP reservations to use when assigning IPs
          items:
            type: string
          type: array
      type: object
    BgpNeighborData_routes_in:
      example:
        route: 10.32.16.0/31
        exact: true
      properties:
        route:
          description: A project network
          example: 10.32.16.0/31
          type: string
        exact:
          type: boolean
      type: object
    BgpNeighborData_routes_out:
      example:
        route: 0.0.0.0/0
        exact: true
      properties:
        route:
          example: 0.0.0.0/0
          type: string
        exact:
          type: boolean
      type: object
    PortConvertLayer3Input_request_ips:
      example:
        address_family: 0
        public: true
      properties:
        address_family:
          type: integer
        public:
          type: boolean
      type: object
    CreateSelfServiceReservationRequest_period:
      example:
        unit: monthly
        count: 0.8008281904610115
      properties:
        unit:
          enum:
          - monthly
          type: string
        count:
          type: number
      type: object
    SpotMarketRequestCreateInput_instance_attributes:
      example:
        user_ssh_keys:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        private_ipv4_subnet_size: 6
        description: description
        hostnames:
        - hostnames
        - hostnames
        termination_time: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
        project_ssh_keys:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userdata: userdata
        features:
        - features
        - features
        hostname: hostname
        no_ssh_keys: true
        public_ipv4_subnet_size: 0
        operating_system: operating_system
        billing_cycle: billing_cycle
        always_pxe: true
        customdata: '{}'
        locked: true
        plan: plan
      properties:
        plan:
          type: string
        hostname:
          type: string
        hostnames:
          items:
            type: string
          type: array
        description:
          type: string
        billing_cycle:
          type: string
        operating_system:
          type: string
        always_pxe:
          type: boolean
        userdata:
          type: string
        locked:
          type: boolean
        termination_time:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
        project_ssh_keys:
          items:
            format: uuid
            type: string
          type: array
        user_ssh_keys:
          description: The UUIDs of users whose SSH keys should be included on the
            provisioned device.
          items:
            format: uuid
            type: string
          type: array
        no_ssh_keys:
          type: boolean
        features:
          items:
            type: string
          type: array
        customdata:
          properties: {}
          type: object
        public_ipv4_subnet_size:
          type: integer
        private_ipv4_subnet_size:
          type: integer
      type: object
    PortVlanAssignmentBatch_vlan_assignments:
      example:
        vlan: 6
        native: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: assigned
      properties:
        id:
          format: uuid
          type: string
        vlan:
          type: integer
        state:
          enum:
          - assigned
          - unassigned
          type: string
        native:
          type: boolean
      type: object
    PortVlanAssignmentBatchCreateInput_vlan_assignments:
      example:
        vlan: vlan
        native: true
        state: assigned
      properties:
        vlan:
          type: string
        state:
          enum:
          - assigned
          - unassigned
          type: string
        native:
          type: boolean
      type: object
  securitySchemes:
    x_auth_token:
      in: header
      name: X-Auth-Token
      type: apiKey
x-original-swagger-version: "2.0"
