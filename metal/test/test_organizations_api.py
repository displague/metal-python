# coding: utf-8

"""
    Metal API

    This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import metal
from models.organizations_api import OrganizationsApi  # noqa: E501
from metal.rest import ApiException


class TestOrganizationsApi(unittest.TestCase):
    """OrganizationsApi unit test stubs"""

    def setUp(self):
        self.api = models.organizations_api.OrganizationsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_organization(self):
        """Test case for create_organization

        Create an organization  # noqa: E501
        """
        pass

    def test_create_organization_invitation(self):
        """Test case for create_organization_invitation

        Create an invitation for an organization  # noqa: E501
        """
        pass

    def test_create_organization_project(self):
        """Test case for create_organization_project

        Create a project for the organization  # noqa: E501
        """
        pass

    def test_create_payment_method(self):
        """Test case for create_payment_method

        Create a payment method for the given organization  # noqa: E501
        """
        pass

    def test_delete_organization(self):
        """Test case for delete_organization

        Delete the organization  # noqa: E501
        """
        pass

    def test_find_facilities_by_organization(self):
        """Test case for find_facilities_by_organization

        Retrieve all facilities visible by the organization  # noqa: E501
        """
        pass

    def test_find_operating_systems_by_organization(self):
        """Test case for find_operating_systems_by_organization

        Retrieve all operating systems visible by the organization  # noqa: E501
        """
        pass

    def test_find_organization_by_id(self):
        """Test case for find_organization_by_id

        Retrieve an organization's details  # noqa: E501
        """
        pass

    def test_find_organization_customdata(self):
        """Test case for find_organization_customdata

        Retrieve the custom metadata of an organization  # noqa: E501
        """
        pass

    def test_find_organization_devices(self):
        """Test case for find_organization_devices

        Retrieve all devices of an organization  # noqa: E501
        """
        pass

    def test_find_organization_events(self):
        """Test case for find_organization_events

        Retrieve organization's events  # noqa: E501
        """
        pass

    def test_find_organization_invitations(self):
        """Test case for find_organization_invitations

        Retrieve organization invitations  # noqa: E501
        """
        pass

    def test_find_organization_payment_methods(self):
        """Test case for find_organization_payment_methods

        Retrieve all payment methods of an organization  # noqa: E501
        """
        pass

    def test_find_organization_projects(self):
        """Test case for find_organization_projects

        Retrieve all projects of an organization  # noqa: E501
        """
        pass

    def test_find_organization_transfers(self):
        """Test case for find_organization_transfers

        Retrieve all project transfer requests from or to an organization  # noqa: E501
        """
        pass

    def test_find_organizations(self):
        """Test case for find_organizations

        Retrieve all organizations  # noqa: E501
        """
        pass

    def test_find_plans_by_organization(self):
        """Test case for find_plans_by_organization

        Retrieve all plans visible by the organization  # noqa: E501
        """
        pass

    def test_update_organization(self):
        """Test case for update_organization

        Update the organization  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
