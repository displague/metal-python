# coding: utf-8

"""
    Metal API

    This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import metal
from metal.types.staff_plan_version import StaffPlanVersion  # noqa: E501
from metal.rest import ApiException

class TestStaffPlanVersion(unittest.TestCase):
    """StaffPlanVersion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StaffPlanVersion
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = metal.models.staff_plan_version.StaffPlanVersion()  # noqa: E501
        if include_optional :
            return StaffPlanVersion(
                id = '', 
                name = '', 
                slug = '', 
                specs = '', 
                active = True, 
                priority = 56, 
                storage = '', 
                preinstallable = True, 
                plan = metal.models.staff::plan.Staff::Plan(
                    id = '', 
                    name = '', 
                    slug = '', 
                    description = '', 
                    line = '', 
                    specs = metal.models.specs.specs(), 
                    legacy = True, 
                    pricing = metal.models.pricing.pricing(), 
                    available_in_codes = [
                        ''
                        ], 
                    default_plan_version_id = '', 
                    original_slug = '', 
                    deployment_types = [
                        ''
                        ], 
                    zoho_item_id = '', 
                    configuration = metal.models.configuration.configuration(), 
                    features = [
                        ''
                        ], 
                    aliases = [
                        ''
                        ], 
                    default_preinstallable_operating_system_id = '', 
                    default_plan_version = metal.models.staff::plan_version.Staff::PlanVersion(
                        id = '', 
                        name = '', 
                        slug = '', 
                        specs = '', 
                        active = True, 
                        priority = 56, 
                        storage = '', 
                        preinstallable = True, 
                        plan = metal.models.staff::plan.Staff::Plan(
                            id = '', 
                            name = '', 
                            slug = '', 
                            description = '', 
                            line = '', 
                            specs = metal.models.specs.specs(), 
                            legacy = True, 
                            pricing = metal.models.pricing.pricing(), 
                            default_plan_version_id = '', 
                            original_slug = '', 
                            zoho_item_id = '', 
                            configuration = metal.models.configuration.configuration(), 
                            default_preinstallable_operating_system_id = '', 
                            plan_versions = [
                                metal.models.staff::plan_version.Staff::PlanVersion(
                                    id = '', 
                                    name = '', 
                                    slug = '', 
                                    specs = '', 
                                    active = True, 
                                    priority = 56, 
                                    storage = '', 
                                    preinstallable = True, 
                                    facility = metal.models.staff::facility_little.Staff::FacilityLittle(
                                        id = '', 
                                        name = '', 
                                        code = '', 
                                        metro = metal.models.staff::metro_little.Staff::MetroLittle(
                                            id = '', 
                                            name = '', 
                                            code = '', ), ), )
                                ], ), 
                        facility = metal.models.staff::facility_little.Staff::FacilityLittle(
                            id = '', 
                            name = '', 
                            code = '', ), ), 
                    plan_versions = [
                        metal.models.staff::plan_version.Staff::PlanVersion(
                            id = '', 
                            name = '', 
                            slug = '', 
                            specs = '', 
                            active = True, 
                            priority = 56, 
                            storage = '', 
                            preinstallable = True, )
                        ], ), 
                facility = metal.models.staff::facility_little.Staff::FacilityLittle(
                    id = '', 
                    name = '', 
                    code = '', 
                    metro = metal.models.staff::metro_little.Staff::MetroLittle(
                        id = '', 
                        name = '', 
                        code = '', 
                        features = [
                            ''
                            ], ), )
            )
        else :
            return StaffPlanVersion(
        )

    def testStaffPlanVersion(self):
        """Test StaffPlanVersion"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
