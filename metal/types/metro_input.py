# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class MetroInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metro: str=None):
        """MetroInput - a model defined in OpenAPI

        :param metro: The metro of this MetroInput.
        """
        self.openapi_types = {
            'metro': str
        }

        self.attribute_map = {
            'metro': 'metro'
        }

        self._metro = metro

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetroInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetroInput of this MetroInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metro(self):
        """Gets the metro of this MetroInput.

        Metro code or ID of where the instance should be provisioned in. Either metro or facility must be provided.

        :return: The metro of this MetroInput.
        :rtype: str
        """
        return self._metro

    @metro.setter
    def metro(self, metro):
        """Sets the metro of this MetroInput.

        Metro code or ID of where the instance should be provisioned in. Either metro or facility must be provided.

        :param metro: The metro of this MetroInput.
        :type metro: str
        """
        if metro is None:
            raise ValueError("Invalid value for `metro`, must not be `None`")

        self._metro = metro
