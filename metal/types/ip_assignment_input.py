# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class IPAssignmentInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, customdata: object=None, manageable: bool=None):
        """IPAssignmentInput - a model defined in OpenAPI

        :param address: The address of this IPAssignmentInput.
        :param customdata: The customdata of this IPAssignmentInput.
        :param manageable: The manageable of this IPAssignmentInput.
        """
        self.openapi_types = {
            'address': str,
            'customdata': object,
            'manageable': bool
        }

        self.attribute_map = {
            'address': 'address',
            'customdata': 'customdata',
            'manageable': 'manageable'
        }

        self._address = address
        self._customdata = customdata
        self._manageable = manageable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPAssignmentInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPAssignmentInput of this IPAssignmentInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this IPAssignmentInput.


        :return: The address of this IPAssignmentInput.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this IPAssignmentInput.


        :param address: The address of this IPAssignmentInput.
        :type address: str
        """
        if address is None:
            raise ValueError("Invalid value for `address`, must not be `None`")

        self._address = address

    @property
    def customdata(self):
        """Gets the customdata of this IPAssignmentInput.


        :return: The customdata of this IPAssignmentInput.
        :rtype: object
        """
        return self._customdata

    @customdata.setter
    def customdata(self, customdata):
        """Sets the customdata of this IPAssignmentInput.


        :param customdata: The customdata of this IPAssignmentInput.
        :type customdata: object
        """

        self._customdata = customdata

    @property
    def manageable(self):
        """Gets the manageable of this IPAssignmentInput.


        :return: The manageable of this IPAssignmentInput.
        :rtype: bool
        """
        return self._manageable

    @manageable.setter
    def manageable(self, manageable):
        """Sets the manageable of this IPAssignmentInput.


        :param manageable: The manageable of this IPAssignmentInput.
        :type manageable: bool
        """

        self._manageable = manageable
