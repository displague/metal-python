# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util


class SSHKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, entity: Href=None, fingerprint: str=None, href: str=None, id: str=None, key: str=None, label: str=None, updated_at: datetime=None):
        """SSHKey - a model defined in OpenAPI

        :param created_at: The created_at of this SSHKey.
        :param entity: The entity of this SSHKey.
        :param fingerprint: The fingerprint of this SSHKey.
        :param href: The href of this SSHKey.
        :param id: The id of this SSHKey.
        :param key: The key of this SSHKey.
        :param label: The label of this SSHKey.
        :param updated_at: The updated_at of this SSHKey.
        """
        self.openapi_types = {
            'created_at': datetime,
            'entity': Href,
            'fingerprint': str,
            'href': str,
            'id': str,
            'key': str,
            'label': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'entity': 'entity',
            'fingerprint': 'fingerprint',
            'href': 'href',
            'id': 'id',
            'key': 'key',
            'label': 'label',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._entity = entity
        self._fingerprint = fingerprint
        self._href = href
        self._id = id
        self._key = key
        self._label = label
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SSHKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SSHKey of this SSHKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this SSHKey.


        :return: The created_at of this SSHKey.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SSHKey.


        :param created_at: The created_at of this SSHKey.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def entity(self):
        """Gets the entity of this SSHKey.


        :return: The entity of this SSHKey.
        :rtype: Href
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this SSHKey.


        :param entity: The entity of this SSHKey.
        :type entity: Href
        """

        self._entity = entity

    @property
    def fingerprint(self):
        """Gets the fingerprint of this SSHKey.


        :return: The fingerprint of this SSHKey.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint):
        """Sets the fingerprint of this SSHKey.


        :param fingerprint: The fingerprint of this SSHKey.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint

    @property
    def href(self):
        """Gets the href of this SSHKey.


        :return: The href of this SSHKey.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this SSHKey.


        :param href: The href of this SSHKey.
        :type href: str
        """

        self._href = href

    @property
    def id(self):
        """Gets the id of this SSHKey.


        :return: The id of this SSHKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SSHKey.


        :param id: The id of this SSHKey.
        :type id: str
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this SSHKey.


        :return: The key of this SSHKey.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SSHKey.


        :param key: The key of this SSHKey.
        :type key: str
        """

        self._key = key

    @property
    def label(self):
        """Gets the label of this SSHKey.


        :return: The label of this SSHKey.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this SSHKey.


        :param label: The label of this SSHKey.
        :type label: str
        """

        self._label = label

    @property
    def updated_at(self):
        """Gets the updated_at of this SSHKey.


        :return: The updated_at of this SSHKey.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this SSHKey.


        :param updated_at: The updated_at of this SSHKey.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
