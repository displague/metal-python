# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class MetalGatewayCreateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_reservation_id: str=None, private_ipv4_subnet_size: int=None, virtual_network_id: str=None):
        """MetalGatewayCreateInput - a model defined in OpenAPI

        :param ip_reservation_id: The ip_reservation_id of this MetalGatewayCreateInput.
        :param private_ipv4_subnet_size: The private_ipv4_subnet_size of this MetalGatewayCreateInput.
        :param virtual_network_id: The virtual_network_id of this MetalGatewayCreateInput.
        """
        self.openapi_types = {
            'ip_reservation_id': str,
            'private_ipv4_subnet_size': int,
            'virtual_network_id': str
        }

        self.attribute_map = {
            'ip_reservation_id': 'ip_reservation_id',
            'private_ipv4_subnet_size': 'private_ipv4_subnet_size',
            'virtual_network_id': 'virtual_network_id'
        }

        self._ip_reservation_id = ip_reservation_id
        self._private_ipv4_subnet_size = private_ipv4_subnet_size
        self._virtual_network_id = virtual_network_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetalGatewayCreateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetalGatewayCreateInput of this MetalGatewayCreateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_reservation_id(self):
        """Gets the ip_reservation_id of this MetalGatewayCreateInput.

        The UUID of an IP reservation that belongs to the same project as where the metal gateway will be created in. This field is required unless the private IPv4 subnet size is specified.

        :return: The ip_reservation_id of this MetalGatewayCreateInput.
        :rtype: str
        """
        return self._ip_reservation_id

    @ip_reservation_id.setter
    def ip_reservation_id(self, ip_reservation_id):
        """Sets the ip_reservation_id of this MetalGatewayCreateInput.

        The UUID of an IP reservation that belongs to the same project as where the metal gateway will be created in. This field is required unless the private IPv4 subnet size is specified.

        :param ip_reservation_id: The ip_reservation_id of this MetalGatewayCreateInput.
        :type ip_reservation_id: str
        """

        self._ip_reservation_id = ip_reservation_id

    @property
    def private_ipv4_subnet_size(self):
        """Gets the private_ipv4_subnet_size of this MetalGatewayCreateInput.

        The subnet size (8, 16, 32, 64, or 128) of the private IPv4 reservation that will be created for the metal gateway. This field is required unless a project IP reservation was specified.           Please keep in mind that the number of private metal gateway ranges are limited per project. If you would like to increase the limit per project, please contact support for assistance.

        :return: The private_ipv4_subnet_size of this MetalGatewayCreateInput.
        :rtype: int
        """
        return self._private_ipv4_subnet_size

    @private_ipv4_subnet_size.setter
    def private_ipv4_subnet_size(self, private_ipv4_subnet_size):
        """Sets the private_ipv4_subnet_size of this MetalGatewayCreateInput.

        The subnet size (8, 16, 32, 64, or 128) of the private IPv4 reservation that will be created for the metal gateway. This field is required unless a project IP reservation was specified.           Please keep in mind that the number of private metal gateway ranges are limited per project. If you would like to increase the limit per project, please contact support for assistance.

        :param private_ipv4_subnet_size: The private_ipv4_subnet_size of this MetalGatewayCreateInput.
        :type private_ipv4_subnet_size: int
        """

        self._private_ipv4_subnet_size = private_ipv4_subnet_size

    @property
    def virtual_network_id(self):
        """Gets the virtual_network_id of this MetalGatewayCreateInput.

        The UUID of a metro virtual network that belongs to the same project as where the metal gateway will be created in.

        :return: The virtual_network_id of this MetalGatewayCreateInput.
        :rtype: str
        """
        return self._virtual_network_id

    @virtual_network_id.setter
    def virtual_network_id(self, virtual_network_id):
        """Sets the virtual_network_id of this MetalGatewayCreateInput.

        The UUID of a metro virtual network that belongs to the same project as where the metal gateway will be created in.

        :param virtual_network_id: The virtual_network_id of this MetalGatewayCreateInput.
        :type virtual_network_id: str
        """
        if virtual_network_id is None:
            raise ValueError("Invalid value for `virtual_network_id`, must not be `None`")

        self._virtual_network_id = virtual_network_id
