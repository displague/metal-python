# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.facility_input_facility import FacilityInputFacility
from metal import util


class FacilityInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facility: FacilityInputFacility=None):
        """FacilityInput - a model defined in OpenAPI

        :param facility: The facility of this FacilityInput.
        """
        self.openapi_types = {
            'facility': FacilityInputFacility
        }

        self.attribute_map = {
            'facility': 'facility'
        }

        self._facility = facility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FacilityInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FacilityInput of this FacilityInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facility(self):
        """Gets the facility of this FacilityInput.


        :return: The facility of this FacilityInput.
        :rtype: FacilityInputFacility
        """
        return self._facility

    @facility.setter
    def facility(self, facility):
        """Sets the facility of this FacilityInput.


        :param facility: The facility of this FacilityInput.
        :type facility: FacilityInputFacility
        """
        if facility is None:
            raise ValueError("Invalid value for `facility`, must not be `None`")

        self._facility = facility
