# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.metro import Metro
from metal.types.project import Project
from metal.types.user import User
from metal import util


class Vrf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, description: str=None, local_asn: int=None, ip_ranges: List[str]=None, project: Project=None, metro: Metro=None, created_by: User=None, href: str=None, created_at: datetime=None, updated_at: datetime=None):
        """Vrf - a model defined in OpenAPI

        :param id: The id of this Vrf.
        :param name: The name of this Vrf.
        :param description: The description of this Vrf.
        :param local_asn: The local_asn of this Vrf.
        :param ip_ranges: The ip_ranges of this Vrf.
        :param project: The project of this Vrf.
        :param metro: The metro of this Vrf.
        :param created_by: The created_by of this Vrf.
        :param href: The href of this Vrf.
        :param created_at: The created_at of this Vrf.
        :param updated_at: The updated_at of this Vrf.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'description': str,
            'local_asn': int,
            'ip_ranges': List[str],
            'project': Project,
            'metro': Metro,
            'created_by': User,
            'href': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'local_asn': 'local_asn',
            'ip_ranges': 'ip_ranges',
            'project': 'project',
            'metro': 'metro',
            'created_by': 'created_by',
            'href': 'href',
            'created_at': 'created_at',
            'updated_at': 'updated_at'
        }

        self._id = id
        self._name = name
        self._description = description
        self._local_asn = local_asn
        self._ip_ranges = ip_ranges
        self._project = project
        self._metro = metro
        self._created_by = created_by
        self._href = href
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Vrf':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Vrf of this Vrf.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Vrf.


        :return: The id of this Vrf.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Vrf.


        :param id: The id of this Vrf.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Vrf.


        :return: The name of this Vrf.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Vrf.


        :param name: The name of this Vrf.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this Vrf.

        Optional field that can be set to describe the VRF

        :return: The description of this Vrf.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Vrf.

        Optional field that can be set to describe the VRF

        :param description: The description of this Vrf.
        :type description: str
        """

        self._description = description

    @property
    def local_asn(self):
        """Gets the local_asn of this Vrf.

        A 4-byte ASN associated with the VRF.

        :return: The local_asn of this Vrf.
        :rtype: int
        """
        return self._local_asn

    @local_asn.setter
    def local_asn(self, local_asn):
        """Sets the local_asn of this Vrf.

        A 4-byte ASN associated with the VRF.

        :param local_asn: The local_asn of this Vrf.
        :type local_asn: int
        """

        self._local_asn = local_asn

    @property
    def ip_ranges(self):
        """Gets the ip_ranges of this Vrf.

        A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].

        :return: The ip_ranges of this Vrf.
        :rtype: List[str]
        """
        return self._ip_ranges

    @ip_ranges.setter
    def ip_ranges(self, ip_ranges):
        """Sets the ip_ranges of this Vrf.

        A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].

        :param ip_ranges: The ip_ranges of this Vrf.
        :type ip_ranges: List[str]
        """

        self._ip_ranges = ip_ranges

    @property
    def project(self):
        """Gets the project of this Vrf.


        :return: The project of this Vrf.
        :rtype: Project
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this Vrf.


        :param project: The project of this Vrf.
        :type project: Project
        """

        self._project = project

    @property
    def metro(self):
        """Gets the metro of this Vrf.


        :return: The metro of this Vrf.
        :rtype: Metro
        """
        return self._metro

    @metro.setter
    def metro(self, metro):
        """Sets the metro of this Vrf.


        :param metro: The metro of this Vrf.
        :type metro: Metro
        """

        self._metro = metro

    @property
    def created_by(self):
        """Gets the created_by of this Vrf.


        :return: The created_by of this Vrf.
        :rtype: User
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Vrf.


        :param created_by: The created_by of this Vrf.
        :type created_by: User
        """

        self._created_by = created_by

    @property
    def href(self):
        """Gets the href of this Vrf.


        :return: The href of this Vrf.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this Vrf.


        :param href: The href of this Vrf.
        :type href: str
        """

        self._href = href

    @property
    def created_at(self):
        """Gets the created_at of this Vrf.


        :return: The created_at of this Vrf.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Vrf.


        :param created_at: The created_at of this Vrf.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this Vrf.


        :return: The updated_at of this Vrf.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Vrf.


        :param updated_at: The updated_at of this Vrf.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
