# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.meta import Meta
from metal.types.vrf_route import VrfRoute
from metal import util


class VrfRouteList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, routes: List[VrfRoute]=None, meta: Meta=None):
        """VrfRouteList - a model defined in OpenAPI

        :param routes: The routes of this VrfRouteList.
        :param meta: The meta of this VrfRouteList.
        """
        self.openapi_types = {
            'routes': List[VrfRoute],
            'meta': Meta
        }

        self.attribute_map = {
            'routes': 'routes',
            'meta': 'meta'
        }

        self._routes = routes
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VrfRouteList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VrfRouteList of this VrfRouteList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def routes(self):
        """Gets the routes of this VrfRouteList.


        :return: The routes of this VrfRouteList.
        :rtype: List[VrfRoute]
        """
        return self._routes

    @routes.setter
    def routes(self, routes):
        """Sets the routes of this VrfRouteList.


        :param routes: The routes of this VrfRouteList.
        :type routes: List[VrfRoute]
        """

        self._routes = routes

    @property
    def meta(self):
        """Gets the meta of this VrfRouteList.


        :return: The meta of this VrfRouteList.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this VrfRouteList.


        :param meta: The meta of this VrfRouteList.
        :type meta: Meta
        """

        self._meta = meta
