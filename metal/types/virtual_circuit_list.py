# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.virtual_circuit_list_virtual_circuits_inner import VirtualCircuitListVirtualCircuitsInner
from metal import util


class VirtualCircuitList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, virtual_circuits: List[VirtualCircuitListVirtualCircuitsInner]=None):
        """VirtualCircuitList - a model defined in OpenAPI

        :param virtual_circuits: The virtual_circuits of this VirtualCircuitList.
        """
        self.openapi_types = {
            'virtual_circuits': List[VirtualCircuitListVirtualCircuitsInner]
        }

        self.attribute_map = {
            'virtual_circuits': 'virtual_circuits'
        }

        self._virtual_circuits = virtual_circuits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualCircuitList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualCircuitList of this VirtualCircuitList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def virtual_circuits(self):
        """Gets the virtual_circuits of this VirtualCircuitList.


        :return: The virtual_circuits of this VirtualCircuitList.
        :rtype: List[VirtualCircuitListVirtualCircuitsInner]
        """
        return self._virtual_circuits

    @virtual_circuits.setter
    def virtual_circuits(self, virtual_circuits):
        """Sets the virtual_circuits of this VirtualCircuitList.


        :param virtual_circuits: The virtual_circuits of this VirtualCircuitList.
        :type virtual_circuits: List[VirtualCircuitListVirtualCircuitsInner]
        """

        self._virtual_circuits = virtual_circuits
