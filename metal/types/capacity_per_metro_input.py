# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.metro_server_info import MetroServerInfo
from metal import util


class CapacityPerMetroInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, servers: List[MetroServerInfo]=None):
        """CapacityPerMetroInput - a model defined in OpenAPI

        :param servers: The servers of this CapacityPerMetroInput.
        """
        self.openapi_types = {
            'servers': List[MetroServerInfo]
        }

        self.attribute_map = {
            'servers': 'servers'
        }

        self._servers = servers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapacityPerMetroInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapacityPerMetroInput of this CapacityPerMetroInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def servers(self):
        """Gets the servers of this CapacityPerMetroInput.


        :return: The servers of this CapacityPerMetroInput.
        :rtype: List[MetroServerInfo]
        """
        return self._servers

    @servers.setter
    def servers(self, servers):
        """Sets the servers of this CapacityPerMetroInput.


        :param servers: The servers of this CapacityPerMetroInput.
        :type servers: List[MetroServerInfo]
        """

        self._servers = servers
