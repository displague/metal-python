# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.plan_specs_cpus_inner import PlanSpecsCpusInner
from metal.types.plan_specs_drives_inner import PlanSpecsDrivesInner
from metal.types.plan_specs_features import PlanSpecsFeatures
from metal.types.plan_specs_nics_inner import PlanSpecsNicsInner
from metal import util


class PlanSpecs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpus: List[PlanSpecsCpusInner]=None, drives: List[PlanSpecsDrivesInner]=None, nics: List[PlanSpecsNicsInner]=None, features: PlanSpecsFeatures=None):
        """PlanSpecs - a model defined in OpenAPI

        :param cpus: The cpus of this PlanSpecs.
        :param drives: The drives of this PlanSpecs.
        :param nics: The nics of this PlanSpecs.
        :param features: The features of this PlanSpecs.
        """
        self.openapi_types = {
            'cpus': List[PlanSpecsCpusInner],
            'drives': List[PlanSpecsDrivesInner],
            'nics': List[PlanSpecsNicsInner],
            'features': PlanSpecsFeatures
        }

        self.attribute_map = {
            'cpus': 'cpus',
            'drives': 'drives',
            'nics': 'nics',
            'features': 'features'
        }

        self._cpus = cpus
        self._drives = drives
        self._nics = nics
        self._features = features

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlanSpecs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Plan_specs of this PlanSpecs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpus(self):
        """Gets the cpus of this PlanSpecs.


        :return: The cpus of this PlanSpecs.
        :rtype: List[PlanSpecsCpusInner]
        """
        return self._cpus

    @cpus.setter
    def cpus(self, cpus):
        """Sets the cpus of this PlanSpecs.


        :param cpus: The cpus of this PlanSpecs.
        :type cpus: List[PlanSpecsCpusInner]
        """

        self._cpus = cpus

    @property
    def drives(self):
        """Gets the drives of this PlanSpecs.


        :return: The drives of this PlanSpecs.
        :rtype: List[PlanSpecsDrivesInner]
        """
        return self._drives

    @drives.setter
    def drives(self, drives):
        """Sets the drives of this PlanSpecs.


        :param drives: The drives of this PlanSpecs.
        :type drives: List[PlanSpecsDrivesInner]
        """

        self._drives = drives

    @property
    def nics(self):
        """Gets the nics of this PlanSpecs.


        :return: The nics of this PlanSpecs.
        :rtype: List[PlanSpecsNicsInner]
        """
        return self._nics

    @nics.setter
    def nics(self, nics):
        """Sets the nics of this PlanSpecs.


        :param nics: The nics of this PlanSpecs.
        :type nics: List[PlanSpecsNicsInner]
        """

        self._nics = nics

    @property
    def features(self):
        """Gets the features of this PlanSpecs.


        :return: The features of this PlanSpecs.
        :rtype: PlanSpecsFeatures
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this PlanSpecs.


        :param features: The features of this PlanSpecs.
        :type features: PlanSpecsFeatures
        """

        self._features = features
