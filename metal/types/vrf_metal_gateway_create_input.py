# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class VrfMetalGatewayCreateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_reservation_id: str=None, virtual_network_id: str=None):
        """VrfMetalGatewayCreateInput - a model defined in OpenAPI

        :param ip_reservation_id: The ip_reservation_id of this VrfMetalGatewayCreateInput.
        :param virtual_network_id: The virtual_network_id of this VrfMetalGatewayCreateInput.
        """
        self.openapi_types = {
            'ip_reservation_id': str,
            'virtual_network_id': str
        }

        self.attribute_map = {
            'ip_reservation_id': 'ip_reservation_id',
            'virtual_network_id': 'virtual_network_id'
        }

        self._ip_reservation_id = ip_reservation_id
        self._virtual_network_id = virtual_network_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VrfMetalGatewayCreateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VrfMetalGatewayCreateInput of this VrfMetalGatewayCreateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_reservation_id(self):
        """Gets the ip_reservation_id of this VrfMetalGatewayCreateInput.

        The UUID an a VRF IP Reservation that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the VRF IP Reservation and the Virtual Network must reside in the same Metro.

        :return: The ip_reservation_id of this VrfMetalGatewayCreateInput.
        :rtype: str
        """
        return self._ip_reservation_id

    @ip_reservation_id.setter
    def ip_reservation_id(self, ip_reservation_id):
        """Sets the ip_reservation_id of this VrfMetalGatewayCreateInput.

        The UUID an a VRF IP Reservation that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the VRF IP Reservation and the Virtual Network must reside in the same Metro.

        :param ip_reservation_id: The ip_reservation_id of this VrfMetalGatewayCreateInput.
        :type ip_reservation_id: str
        """
        if ip_reservation_id is None:
            raise ValueError("Invalid value for `ip_reservation_id`, must not be `None`")

        self._ip_reservation_id = ip_reservation_id

    @property
    def virtual_network_id(self):
        """Gets the virtual_network_id of this VrfMetalGatewayCreateInput.

        THe UUID of a Metro Virtual Network that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the Virtual Network and the VRF IP Reservation must reside in the same metro.

        :return: The virtual_network_id of this VrfMetalGatewayCreateInput.
        :rtype: str
        """
        return self._virtual_network_id

    @virtual_network_id.setter
    def virtual_network_id(self, virtual_network_id):
        """Sets the virtual_network_id of this VrfMetalGatewayCreateInput.

        THe UUID of a Metro Virtual Network that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the Virtual Network and the VRF IP Reservation must reside in the same metro.

        :param virtual_network_id: The virtual_network_id of this VrfMetalGatewayCreateInput.
        :type virtual_network_id: str
        """
        if virtual_network_id is None:
            raise ValueError("Invalid value for `virtual_network_id`, must not be `None`")

        self._virtual_network_id = virtual_network_id
