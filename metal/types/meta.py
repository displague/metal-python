# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util


class Meta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first: Href=None, last: Href=None, next: Href=None, previous: Href=None, _self: Href=None, total: int=None, current_page: int=None, last_page: int=None):
        """Meta - a model defined in OpenAPI

        :param first: The first of this Meta.
        :param last: The last of this Meta.
        :param next: The next of this Meta.
        :param previous: The previous of this Meta.
        :param _self: The _self of this Meta.
        :param total: The total of this Meta.
        :param current_page: The current_page of this Meta.
        :param last_page: The last_page of this Meta.
        """
        self.openapi_types = {
            'first': Href,
            'last': Href,
            'next': Href,
            'previous': Href,
            '_self': Href,
            'total': int,
            'current_page': int,
            'last_page': int
        }

        self.attribute_map = {
            'first': 'first',
            'last': 'last',
            'next': 'next',
            'previous': 'previous',
            '_self': 'self',
            'total': 'total',
            'current_page': 'current_page',
            'last_page': 'last_page'
        }

        self._first = first
        self._last = last
        self._next = next
        self._previous = previous
        self.__self = _self
        self._total = total
        self._current_page = current_page
        self._last_page = last_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Meta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Meta of this Meta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self):
        """Gets the first of this Meta.


        :return: The first of this Meta.
        :rtype: Href
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this Meta.


        :param first: The first of this Meta.
        :type first: Href
        """

        self._first = first

    @property
    def last(self):
        """Gets the last of this Meta.


        :return: The last of this Meta.
        :rtype: Href
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this Meta.


        :param last: The last of this Meta.
        :type last: Href
        """

        self._last = last

    @property
    def next(self):
        """Gets the next of this Meta.


        :return: The next of this Meta.
        :rtype: Href
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this Meta.


        :param next: The next of this Meta.
        :type next: Href
        """

        self._next = next

    @property
    def previous(self):
        """Gets the previous of this Meta.


        :return: The previous of this Meta.
        :rtype: Href
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this Meta.


        :param previous: The previous of this Meta.
        :type previous: Href
        """

        self._previous = previous

    @property
    def _self(self):
        """Gets the _self of this Meta.


        :return: The _self of this Meta.
        :rtype: Href
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this Meta.


        :param _self: The _self of this Meta.
        :type _self: Href
        """

        self.__self = _self

    @property
    def total(self):
        """Gets the total of this Meta.


        :return: The total of this Meta.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Meta.


        :param total: The total of this Meta.
        :type total: int
        """

        self._total = total

    @property
    def current_page(self):
        """Gets the current_page of this Meta.


        :return: The current_page of this Meta.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this Meta.


        :param current_page: The current_page of this Meta.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def last_page(self):
        """Gets the last_page of this Meta.


        :return: The last_page of this Meta.
        :rtype: int
        """
        return self._last_page

    @last_page.setter
    def last_page(self, last_page):
        """Sets the last_page of this Meta.


        :param last_page: The last_page of this Meta.
        :type last_page: int
        """

        self._last_page = last_page
