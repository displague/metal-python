# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class VirtualCircuitUpdateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, speed: str=None, tags: List[str]=None, vnid: str=None):
        """VirtualCircuitUpdateInput - a model defined in OpenAPI

        :param description: The description of this VirtualCircuitUpdateInput.
        :param name: The name of this VirtualCircuitUpdateInput.
        :param speed: The speed of this VirtualCircuitUpdateInput.
        :param tags: The tags of this VirtualCircuitUpdateInput.
        :param vnid: The vnid of this VirtualCircuitUpdateInput.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'speed': str,
            'tags': List[str],
            'vnid': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'speed': 'speed',
            'tags': 'tags',
            'vnid': 'vnid'
        }

        self._description = description
        self._name = name
        self._speed = speed
        self._tags = tags
        self._vnid = vnid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualCircuitUpdateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualCircuitUpdateInput of this VirtualCircuitUpdateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this VirtualCircuitUpdateInput.


        :return: The description of this VirtualCircuitUpdateInput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VirtualCircuitUpdateInput.


        :param description: The description of this VirtualCircuitUpdateInput.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this VirtualCircuitUpdateInput.


        :return: The name of this VirtualCircuitUpdateInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VirtualCircuitUpdateInput.


        :param name: The name of this VirtualCircuitUpdateInput.
        :type name: str
        """

        self._name = name

    @property
    def speed(self):
        """Gets the speed of this VirtualCircuitUpdateInput.

        Speed can be changed only if it is an interconnection on a Dedicated Port

        :return: The speed of this VirtualCircuitUpdateInput.
        :rtype: str
        """
        return self._speed

    @speed.setter
    def speed(self, speed):
        """Sets the speed of this VirtualCircuitUpdateInput.

        Speed can be changed only if it is an interconnection on a Dedicated Port

        :param speed: The speed of this VirtualCircuitUpdateInput.
        :type speed: str
        """

        self._speed = speed

    @property
    def tags(self):
        """Gets the tags of this VirtualCircuitUpdateInput.


        :return: The tags of this VirtualCircuitUpdateInput.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this VirtualCircuitUpdateInput.


        :param tags: The tags of this VirtualCircuitUpdateInput.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def vnid(self):
        """Gets the vnid of this VirtualCircuitUpdateInput.

        A Virtual Network record UUID or the VNID of a Metro Virtual Network in your project.

        :return: The vnid of this VirtualCircuitUpdateInput.
        :rtype: str
        """
        return self._vnid

    @vnid.setter
    def vnid(self, vnid):
        """Sets the vnid of this VirtualCircuitUpdateInput.

        A Virtual Network record UUID or the VNID of a Metro Virtual Network in your project.

        :param vnid: The vnid of this VirtualCircuitUpdateInput.
        :type vnid: str
        """

        self._vnid = vnid
