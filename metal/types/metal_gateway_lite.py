# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class MetalGatewayLite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, gateway_address: str=None, href: str=None, id: str=None, state: str=None, updated_at: datetime=None, vlan: int=None):
        """MetalGatewayLite - a model defined in OpenAPI

        :param created_at: The created_at of this MetalGatewayLite.
        :param gateway_address: The gateway_address of this MetalGatewayLite.
        :param href: The href of this MetalGatewayLite.
        :param id: The id of this MetalGatewayLite.
        :param state: The state of this MetalGatewayLite.
        :param updated_at: The updated_at of this MetalGatewayLite.
        :param vlan: The vlan of this MetalGatewayLite.
        """
        self.openapi_types = {
            'created_at': datetime,
            'gateway_address': str,
            'href': str,
            'id': str,
            'state': str,
            'updated_at': datetime,
            'vlan': int
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'gateway_address': 'gateway_address',
            'href': 'href',
            'id': 'id',
            'state': 'state',
            'updated_at': 'updated_at',
            'vlan': 'vlan'
        }

        self._created_at = created_at
        self._gateway_address = gateway_address
        self._href = href
        self._id = id
        self._state = state
        self._updated_at = updated_at
        self._vlan = vlan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetalGatewayLite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetalGatewayLite of this MetalGatewayLite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this MetalGatewayLite.


        :return: The created_at of this MetalGatewayLite.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MetalGatewayLite.


        :param created_at: The created_at of this MetalGatewayLite.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def gateway_address(self):
        """Gets the gateway_address of this MetalGatewayLite.

        The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.

        :return: The gateway_address of this MetalGatewayLite.
        :rtype: str
        """
        return self._gateway_address

    @gateway_address.setter
    def gateway_address(self, gateway_address):
        """Sets the gateway_address of this MetalGatewayLite.

        The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.

        :param gateway_address: The gateway_address of this MetalGatewayLite.
        :type gateway_address: str
        """

        self._gateway_address = gateway_address

    @property
    def href(self):
        """Gets the href of this MetalGatewayLite.


        :return: The href of this MetalGatewayLite.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this MetalGatewayLite.


        :param href: The href of this MetalGatewayLite.
        :type href: str
        """

        self._href = href

    @property
    def id(self):
        """Gets the id of this MetalGatewayLite.


        :return: The id of this MetalGatewayLite.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MetalGatewayLite.


        :param id: The id of this MetalGatewayLite.
        :type id: str
        """

        self._id = id

    @property
    def state(self):
        """Gets the state of this MetalGatewayLite.

        The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.

        :return: The state of this MetalGatewayLite.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this MetalGatewayLite.

        The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.

        :param state: The state of this MetalGatewayLite.
        :type state: str
        """
        allowed_values = ["ready", "active", "deleting"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def updated_at(self):
        """Gets the updated_at of this MetalGatewayLite.


        :return: The updated_at of this MetalGatewayLite.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this MetalGatewayLite.


        :param updated_at: The updated_at of this MetalGatewayLite.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def vlan(self):
        """Gets the vlan of this MetalGatewayLite.

        The VLAN id of the Virtual Network record associated to this Metal Gateway.

        :return: The vlan of this MetalGatewayLite.
        :rtype: int
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this MetalGatewayLite.

        The VLAN id of the Virtual Network record associated to this Metal Gateway.

        :param vlan: The vlan of this MetalGatewayLite.
        :type vlan: int
        """

        self._vlan = vlan
