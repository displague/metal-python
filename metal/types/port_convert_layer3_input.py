# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.port_convert_layer3_input_request_ips_inner import PortConvertLayer3InputRequestIpsInner
from metal import util


class PortConvertLayer3Input(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_ips: List[PortConvertLayer3InputRequestIpsInner]=None):
        """PortConvertLayer3Input - a model defined in OpenAPI

        :param request_ips: The request_ips of this PortConvertLayer3Input.
        """
        self.openapi_types = {
            'request_ips': List[PortConvertLayer3InputRequestIpsInner]
        }

        self.attribute_map = {
            'request_ips': 'request_ips'
        }

        self._request_ips = request_ips

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortConvertLayer3Input':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PortConvertLayer3Input of this PortConvertLayer3Input.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_ips(self):
        """Gets the request_ips of this PortConvertLayer3Input.


        :return: The request_ips of this PortConvertLayer3Input.
        :rtype: List[PortConvertLayer3InputRequestIpsInner]
        """
        return self._request_ips

    @request_ips.setter
    def request_ips(self, request_ips):
        """Sets the request_ips of this PortConvertLayer3Input.


        :param request_ips: The request_ips of this PortConvertLayer3Input.
        :type request_ips: List[PortConvertLayer3InputRequestIpsInner]
        """

        self._request_ips = request_ips
