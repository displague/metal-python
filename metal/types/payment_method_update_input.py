# coding: utf-8

"""
    Metal API

    This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from metal.configuration import Configuration


class PaymentMethodUpdateInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'name': 'str',
        'default': 'bool',
        'cardholder_name': 'str',
        'expiration_month': 'str',
        'expiration_year': 'int',
        'billing_address': 'object'
    }

    attribute_map = {
        'name': 'name',
        'default': 'default',
        'cardholder_name': 'cardholder_name',
        'expiration_month': 'expiration_month',
        'expiration_year': 'expiration_year',
        'billing_address': 'billing_address'
    }

    def __init__(self, name=None, default=None, cardholder_name=None, expiration_month=None, expiration_year=None, billing_address=None, local_vars_configuration=None):  # noqa: E501
        """PaymentMethodUpdateInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._name = None
        self._default = None
        self._cardholder_name = None
        self._expiration_month = None
        self._expiration_year = None
        self._billing_address = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if default is not None:
            self.default = default
        if cardholder_name is not None:
            self.cardholder_name = cardholder_name
        if expiration_month is not None:
            self.expiration_month = expiration_month
        if expiration_year is not None:
            self.expiration_year = expiration_year
        if billing_address is not None:
            self.billing_address = billing_address

    @property
    def name(self):
        """Gets the name of this PaymentMethodUpdateInput.  # noqa: E501


        :return: The name of this PaymentMethodUpdateInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PaymentMethodUpdateInput.


        :param name: The name of this PaymentMethodUpdateInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def default(self):
        """Gets the default of this PaymentMethodUpdateInput.  # noqa: E501


        :return: The default of this PaymentMethodUpdateInput.  # noqa: E501
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this PaymentMethodUpdateInput.


        :param default: The default of this PaymentMethodUpdateInput.  # noqa: E501
        :type default: bool
        """

        self._default = default

    @property
    def cardholder_name(self):
        """Gets the cardholder_name of this PaymentMethodUpdateInput.  # noqa: E501


        :return: The cardholder_name of this PaymentMethodUpdateInput.  # noqa: E501
        :rtype: str
        """
        return self._cardholder_name

    @cardholder_name.setter
    def cardholder_name(self, cardholder_name):
        """Sets the cardholder_name of this PaymentMethodUpdateInput.


        :param cardholder_name: The cardholder_name of this PaymentMethodUpdateInput.  # noqa: E501
        :type cardholder_name: str
        """

        self._cardholder_name = cardholder_name

    @property
    def expiration_month(self):
        """Gets the expiration_month of this PaymentMethodUpdateInput.  # noqa: E501


        :return: The expiration_month of this PaymentMethodUpdateInput.  # noqa: E501
        :rtype: str
        """
        return self._expiration_month

    @expiration_month.setter
    def expiration_month(self, expiration_month):
        """Sets the expiration_month of this PaymentMethodUpdateInput.


        :param expiration_month: The expiration_month of this PaymentMethodUpdateInput.  # noqa: E501
        :type expiration_month: str
        """

        self._expiration_month = expiration_month

    @property
    def expiration_year(self):
        """Gets the expiration_year of this PaymentMethodUpdateInput.  # noqa: E501


        :return: The expiration_year of this PaymentMethodUpdateInput.  # noqa: E501
        :rtype: int
        """
        return self._expiration_year

    @expiration_year.setter
    def expiration_year(self, expiration_year):
        """Sets the expiration_year of this PaymentMethodUpdateInput.


        :param expiration_year: The expiration_year of this PaymentMethodUpdateInput.  # noqa: E501
        :type expiration_year: int
        """

        self._expiration_year = expiration_year

    @property
    def billing_address(self):
        """Gets the billing_address of this PaymentMethodUpdateInput.  # noqa: E501


        :return: The billing_address of this PaymentMethodUpdateInput.  # noqa: E501
        :rtype: object
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this PaymentMethodUpdateInput.


        :param billing_address: The billing_address of this PaymentMethodUpdateInput.  # noqa: E501
        :type billing_address: object
        """

        self._billing_address = billing_address

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PaymentMethodUpdateInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PaymentMethodUpdateInput):
            return True

        return self.to_dict() != other.to_dict()
