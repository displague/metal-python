# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util


class TransferRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, href: str=None, id: str=None, project: Href=None, target_organization: Href=None, updated_at: datetime=None):
        """TransferRequest - a model defined in OpenAPI

        :param created_at: The created_at of this TransferRequest.
        :param href: The href of this TransferRequest.
        :param id: The id of this TransferRequest.
        :param project: The project of this TransferRequest.
        :param target_organization: The target_organization of this TransferRequest.
        :param updated_at: The updated_at of this TransferRequest.
        """
        self.openapi_types = {
            'created_at': datetime,
            'href': str,
            'id': str,
            'project': Href,
            'target_organization': Href,
            'updated_at': datetime
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'href': 'href',
            'id': 'id',
            'project': 'project',
            'target_organization': 'target_organization',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._href = href
        self._id = id
        self._project = project
        self._target_organization = target_organization
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferRequest of this TransferRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this TransferRequest.


        :return: The created_at of this TransferRequest.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this TransferRequest.


        :param created_at: The created_at of this TransferRequest.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def href(self):
        """Gets the href of this TransferRequest.


        :return: The href of this TransferRequest.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this TransferRequest.


        :param href: The href of this TransferRequest.
        :type href: str
        """

        self._href = href

    @property
    def id(self):
        """Gets the id of this TransferRequest.


        :return: The id of this TransferRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TransferRequest.


        :param id: The id of this TransferRequest.
        :type id: str
        """

        self._id = id

    @property
    def project(self):
        """Gets the project of this TransferRequest.


        :return: The project of this TransferRequest.
        :rtype: Href
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this TransferRequest.


        :param project: The project of this TransferRequest.
        :type project: Href
        """

        self._project = project

    @property
    def target_organization(self):
        """Gets the target_organization of this TransferRequest.


        :return: The target_organization of this TransferRequest.
        :rtype: Href
        """
        return self._target_organization

    @target_organization.setter
    def target_organization(self, target_organization):
        """Sets the target_organization of this TransferRequest.


        :param target_organization: The target_organization of this TransferRequest.
        :type target_organization: Href
        """

        self._target_organization = target_organization

    @property
    def updated_at(self):
        """Gets the updated_at of this TransferRequest.


        :return: The updated_at of this TransferRequest.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this TransferRequest.


        :param updated_at: The updated_at of this TransferRequest.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
