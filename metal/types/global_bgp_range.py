# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util


class GlobalBgpRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_family: int=None, href: str=None, id: str=None, project: Href=None, range: str=None):
        """GlobalBgpRange - a model defined in OpenAPI

        :param address_family: The address_family of this GlobalBgpRange.
        :param href: The href of this GlobalBgpRange.
        :param id: The id of this GlobalBgpRange.
        :param project: The project of this GlobalBgpRange.
        :param range: The range of this GlobalBgpRange.
        """
        self.openapi_types = {
            'address_family': int,
            'href': str,
            'id': str,
            'project': Href,
            'range': str
        }

        self.attribute_map = {
            'address_family': 'address_family',
            'href': 'href',
            'id': 'id',
            'project': 'project',
            'range': 'range'
        }

        self._address_family = address_family
        self._href = href
        self._id = id
        self._project = project
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalBgpRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalBgpRange of this GlobalBgpRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_family(self):
        """Gets the address_family of this GlobalBgpRange.


        :return: The address_family of this GlobalBgpRange.
        :rtype: int
        """
        return self._address_family

    @address_family.setter
    def address_family(self, address_family):
        """Sets the address_family of this GlobalBgpRange.


        :param address_family: The address_family of this GlobalBgpRange.
        :type address_family: int
        """

        self._address_family = address_family

    @property
    def href(self):
        """Gets the href of this GlobalBgpRange.


        :return: The href of this GlobalBgpRange.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this GlobalBgpRange.


        :param href: The href of this GlobalBgpRange.
        :type href: str
        """

        self._href = href

    @property
    def id(self):
        """Gets the id of this GlobalBgpRange.


        :return: The id of this GlobalBgpRange.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GlobalBgpRange.


        :param id: The id of this GlobalBgpRange.
        :type id: str
        """

        self._id = id

    @property
    def project(self):
        """Gets the project of this GlobalBgpRange.


        :return: The project of this GlobalBgpRange.
        :rtype: Href
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this GlobalBgpRange.


        :param project: The project of this GlobalBgpRange.
        :type project: Href
        """

        self._project = project

    @property
    def range(self):
        """Gets the range of this GlobalBgpRange.


        :return: The range of this GlobalBgpRange.
        :rtype: str
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this GlobalBgpRange.


        :param range: The range of this GlobalBgpRange.
        :type range: str
        """

        self._range = range
