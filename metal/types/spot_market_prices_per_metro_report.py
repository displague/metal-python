# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.spot_prices_per_facility import SpotPricesPerFacility
from metal import util


class SpotMarketPricesPerMetroReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, am: SpotPricesPerFacility=None, ch: SpotPricesPerFacility=None, da: SpotPricesPerFacility=None, la: SpotPricesPerFacility=None, ny: SpotPricesPerFacility=None, sg: SpotPricesPerFacility=None, sv: SpotPricesPerFacility=None):
        """SpotMarketPricesPerMetroReport - a model defined in OpenAPI

        :param am: The am of this SpotMarketPricesPerMetroReport.
        :param ch: The ch of this SpotMarketPricesPerMetroReport.
        :param da: The da of this SpotMarketPricesPerMetroReport.
        :param la: The la of this SpotMarketPricesPerMetroReport.
        :param ny: The ny of this SpotMarketPricesPerMetroReport.
        :param sg: The sg of this SpotMarketPricesPerMetroReport.
        :param sv: The sv of this SpotMarketPricesPerMetroReport.
        """
        self.openapi_types = {
            'am': SpotPricesPerFacility,
            'ch': SpotPricesPerFacility,
            'da': SpotPricesPerFacility,
            'la': SpotPricesPerFacility,
            'ny': SpotPricesPerFacility,
            'sg': SpotPricesPerFacility,
            'sv': SpotPricesPerFacility
        }

        self.attribute_map = {
            'am': 'am',
            'ch': 'ch',
            'da': 'da',
            'la': 'la',
            'ny': 'ny',
            'sg': 'sg',
            'sv': 'sv'
        }

        self._am = am
        self._ch = ch
        self._da = da
        self._la = la
        self._ny = ny
        self._sg = sg
        self._sv = sv

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpotMarketPricesPerMetroReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpotMarketPricesPerMetroReport of this SpotMarketPricesPerMetroReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def am(self):
        """Gets the am of this SpotMarketPricesPerMetroReport.


        :return: The am of this SpotMarketPricesPerMetroReport.
        :rtype: SpotPricesPerFacility
        """
        return self._am

    @am.setter
    def am(self, am):
        """Sets the am of this SpotMarketPricesPerMetroReport.


        :param am: The am of this SpotMarketPricesPerMetroReport.
        :type am: SpotPricesPerFacility
        """

        self._am = am

    @property
    def ch(self):
        """Gets the ch of this SpotMarketPricesPerMetroReport.


        :return: The ch of this SpotMarketPricesPerMetroReport.
        :rtype: SpotPricesPerFacility
        """
        return self._ch

    @ch.setter
    def ch(self, ch):
        """Sets the ch of this SpotMarketPricesPerMetroReport.


        :param ch: The ch of this SpotMarketPricesPerMetroReport.
        :type ch: SpotPricesPerFacility
        """

        self._ch = ch

    @property
    def da(self):
        """Gets the da of this SpotMarketPricesPerMetroReport.


        :return: The da of this SpotMarketPricesPerMetroReport.
        :rtype: SpotPricesPerFacility
        """
        return self._da

    @da.setter
    def da(self, da):
        """Sets the da of this SpotMarketPricesPerMetroReport.


        :param da: The da of this SpotMarketPricesPerMetroReport.
        :type da: SpotPricesPerFacility
        """

        self._da = da

    @property
    def la(self):
        """Gets the la of this SpotMarketPricesPerMetroReport.


        :return: The la of this SpotMarketPricesPerMetroReport.
        :rtype: SpotPricesPerFacility
        """
        return self._la

    @la.setter
    def la(self, la):
        """Sets the la of this SpotMarketPricesPerMetroReport.


        :param la: The la of this SpotMarketPricesPerMetroReport.
        :type la: SpotPricesPerFacility
        """

        self._la = la

    @property
    def ny(self):
        """Gets the ny of this SpotMarketPricesPerMetroReport.


        :return: The ny of this SpotMarketPricesPerMetroReport.
        :rtype: SpotPricesPerFacility
        """
        return self._ny

    @ny.setter
    def ny(self, ny):
        """Sets the ny of this SpotMarketPricesPerMetroReport.


        :param ny: The ny of this SpotMarketPricesPerMetroReport.
        :type ny: SpotPricesPerFacility
        """

        self._ny = ny

    @property
    def sg(self):
        """Gets the sg of this SpotMarketPricesPerMetroReport.


        :return: The sg of this SpotMarketPricesPerMetroReport.
        :rtype: SpotPricesPerFacility
        """
        return self._sg

    @sg.setter
    def sg(self, sg):
        """Sets the sg of this SpotMarketPricesPerMetroReport.


        :param sg: The sg of this SpotMarketPricesPerMetroReport.
        :type sg: SpotPricesPerFacility
        """

        self._sg = sg

    @property
    def sv(self):
        """Gets the sv of this SpotMarketPricesPerMetroReport.


        :return: The sv of this SpotMarketPricesPerMetroReport.
        :rtype: SpotPricesPerFacility
        """
        return self._sv

    @sv.setter
    def sv(self, sv):
        """Sets the sv of this SpotMarketPricesPerMetroReport.


        :param sv: The sv of this SpotMarketPricesPerMetroReport.
        :type sv: SpotPricesPerFacility
        """

        self._sv = sv
