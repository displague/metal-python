# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal.types.spot_market_prices_per_metro_report import SpotMarketPricesPerMetroReport
from metal import util


class SpotMarketPricesPerMetroList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, spot_market_prices: SpotMarketPricesPerMetroReport=None):
        """SpotMarketPricesPerMetroList - a model defined in OpenAPI

        :param spot_market_prices: The spot_market_prices of this SpotMarketPricesPerMetroList.
        """
        self.openapi_types = {
            'spot_market_prices': SpotMarketPricesPerMetroReport
        }

        self.attribute_map = {
            'spot_market_prices': 'spot_market_prices'
        }

        self._spot_market_prices = spot_market_prices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpotMarketPricesPerMetroList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpotMarketPricesPerMetroList of this SpotMarketPricesPerMetroList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spot_market_prices(self):
        """Gets the spot_market_prices of this SpotMarketPricesPerMetroList.


        :return: The spot_market_prices of this SpotMarketPricesPerMetroList.
        :rtype: SpotMarketPricesPerMetroReport
        """
        return self._spot_market_prices

    @spot_market_prices.setter
    def spot_market_prices(self, spot_market_prices):
        """Sets the spot_market_prices of this SpotMarketPricesPerMetroList.


        :param spot_market_prices: The spot_market_prices of this SpotMarketPricesPerMetroList.
        :type spot_market_prices: SpotMarketPricesPerMetroReport
        """

        self._spot_market_prices = spot_market_prices
