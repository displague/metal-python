# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class PortVlanAssignmentBatchCreateInputVlanAssignmentsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, native: bool=None, state: str=None, vlan: str=None):
        """PortVlanAssignmentBatchCreateInputVlanAssignmentsInner - a model defined in OpenAPI

        :param native: The native of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :param state: The state of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :param vlan: The vlan of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        """
        self.openapi_types = {
            'native': bool,
            'state': str,
            'vlan': str
        }

        self.attribute_map = {
            'native': 'native',
            'state': 'state',
            'vlan': 'vlan'
        }

        self._native = native
        self._state = state
        self._vlan = vlan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortVlanAssignmentBatchCreateInputVlanAssignmentsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PortVlanAssignmentBatchCreateInput_vlan_assignments_inner of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def native(self):
        """Gets the native of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.


        :return: The native of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :rtype: bool
        """
        return self._native

    @native.setter
    def native(self, native):
        """Sets the native of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.


        :param native: The native of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :type native: bool
        """

        self._native = native

    @property
    def state(self):
        """Gets the state of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.


        :return: The state of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.


        :param state: The state of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :type state: str
        """
        allowed_values = ["assigned", "unassigned"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def vlan(self):
        """Gets the vlan of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.


        :return: The vlan of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :rtype: str
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.


        :param vlan: The vlan of this PortVlanAssignmentBatchCreateInputVlanAssignmentsInner.
        :type vlan: str
        """

        self._vlan = vlan
