# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class MetadataNetworkNetworkBonding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, link_aggregation: str=None, mac: str=None, mode: int=None):
        """MetadataNetworkNetworkBonding - a model defined in OpenAPI

        :param link_aggregation: The link_aggregation of this MetadataNetworkNetworkBonding.
        :param mac: The mac of this MetadataNetworkNetworkBonding.
        :param mode: The mode of this MetadataNetworkNetworkBonding.
        """
        self.openapi_types = {
            'link_aggregation': str,
            'mac': str,
            'mode': int
        }

        self.attribute_map = {
            'link_aggregation': 'link_aggregation',
            'mac': 'mac',
            'mode': 'mode'
        }

        self._link_aggregation = link_aggregation
        self._mac = mac
        self._mode = mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataNetworkNetworkBonding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata_network_network_bonding of this MetadataNetworkNetworkBonding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link_aggregation(self):
        """Gets the link_aggregation of this MetadataNetworkNetworkBonding.


        :return: The link_aggregation of this MetadataNetworkNetworkBonding.
        :rtype: str
        """
        return self._link_aggregation

    @link_aggregation.setter
    def link_aggregation(self, link_aggregation):
        """Sets the link_aggregation of this MetadataNetworkNetworkBonding.


        :param link_aggregation: The link_aggregation of this MetadataNetworkNetworkBonding.
        :type link_aggregation: str
        """

        self._link_aggregation = link_aggregation

    @property
    def mac(self):
        """Gets the mac of this MetadataNetworkNetworkBonding.


        :return: The mac of this MetadataNetworkNetworkBonding.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this MetadataNetworkNetworkBonding.


        :param mac: The mac of this MetadataNetworkNetworkBonding.
        :type mac: str
        """

        self._mac = mac

    @property
    def mode(self):
        """Gets the mode of this MetadataNetworkNetworkBonding.


        :return: The mode of this MetadataNetworkNetworkBonding.
        :rtype: int
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this MetadataNetworkNetworkBonding.


        :param mode: The mode of this MetadataNetworkNetworkBonding.
        :type mode: int
        """

        self._mode = mode
