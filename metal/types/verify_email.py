# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from metal.types.base_model_ import Model
from metal import util


class VerifyEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_token: str=None):
        """VerifyEmail - a model defined in OpenAPI

        :param user_token: The user_token of this VerifyEmail.
        """
        self.openapi_types = {
            'user_token': str
        }

        self.attribute_map = {
            'user_token': 'user_token'
        }

        self._user_token = user_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerifyEmail of this VerifyEmail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_token(self):
        """Gets the user_token of this VerifyEmail.

        User verification token

        :return: The user_token of this VerifyEmail.
        :rtype: str
        """
        return self._user_token

    @user_token.setter
    def user_token(self, user_token):
        """Sets the user_token of this VerifyEmail.

        User verification token

        :param user_token: The user_token of this VerifyEmail.
        :type user_token: str
        """
        if user_token is None:
            raise ValueError("Invalid value for `user_token`, must not be `None`")

        self._user_token = user_token
