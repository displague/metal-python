# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class PaymentMethodBillingAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, street_address=None, postal_code=None, country_code_alpha2=None):  # noqa: E501
        """PaymentMethodBillingAddress - a model defined in OpenAPI

        :param street_address: The street_address of this PaymentMethodBillingAddress.  # noqa: E501
        :type street_address: str
        :param postal_code: The postal_code of this PaymentMethodBillingAddress.  # noqa: E501
        :type postal_code: str
        :param country_code_alpha2: The country_code_alpha2 of this PaymentMethodBillingAddress.  # noqa: E501
        :type country_code_alpha2: str
        """
        self.openapi_types = {
            'street_address': str,
            'postal_code': str,
            'country_code_alpha2': str
        }

        self.attribute_map = {
            'street_address': 'street_address',
            'postal_code': 'postal_code',
            'country_code_alpha2': 'country_code_alpha2'
        }

        self._street_address = street_address
        self._postal_code = postal_code
        self._country_code_alpha2 = country_code_alpha2

    @classmethod
    def from_dict(cls, dikt) -> 'PaymentMethodBillingAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PaymentMethodBillingAddress of this PaymentMethodBillingAddress.  # noqa: E501
        :rtype: PaymentMethodBillingAddress
        """
        return util.deserialize_model(dikt, cls)

    @property
    def street_address(self):
        """Gets the street_address of this PaymentMethodBillingAddress.


        :return: The street_address of this PaymentMethodBillingAddress.
        :rtype: str
        """
        return self._street_address

    @street_address.setter
    def street_address(self, street_address):
        """Sets the street_address of this PaymentMethodBillingAddress.


        :param street_address: The street_address of this PaymentMethodBillingAddress.
        :type street_address: str
        """

        self._street_address = street_address

    @property
    def postal_code(self):
        """Gets the postal_code of this PaymentMethodBillingAddress.


        :return: The postal_code of this PaymentMethodBillingAddress.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this PaymentMethodBillingAddress.


        :param postal_code: The postal_code of this PaymentMethodBillingAddress.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def country_code_alpha2(self):
        """Gets the country_code_alpha2 of this PaymentMethodBillingAddress.


        :return: The country_code_alpha2 of this PaymentMethodBillingAddress.
        :rtype: str
        """
        return self._country_code_alpha2

    @country_code_alpha2.setter
    def country_code_alpha2(self, country_code_alpha2):
        """Sets the country_code_alpha2 of this PaymentMethodBillingAddress.


        :param country_code_alpha2: The country_code_alpha2 of this PaymentMethodBillingAddress.
        :type country_code_alpha2: str
        """

        self._country_code_alpha2 = country_code_alpha2
