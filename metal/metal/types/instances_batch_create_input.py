# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.instances_batch_create_input_batches import InstancesBatchCreateInputBatches
from metal import util

from metal.types.instances_batch_create_input_batches import InstancesBatchCreateInputBatches  # noqa: E501

class InstancesBatchCreateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batches=None):  # noqa: E501
        """InstancesBatchCreateInput - a model defined in OpenAPI

        :param batches: The batches of this InstancesBatchCreateInput.  # noqa: E501
        :type batches: List[InstancesBatchCreateInputBatches]
        """
        self.openapi_types = {
            'batches': List[InstancesBatchCreateInputBatches]
        }

        self.attribute_map = {
            'batches': 'batches'
        }

        self._batches = batches

    @classmethod
    def from_dict(cls, dikt) -> 'InstancesBatchCreateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InstancesBatchCreateInput of this InstancesBatchCreateInput.  # noqa: E501
        :rtype: InstancesBatchCreateInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batches(self):
        """Gets the batches of this InstancesBatchCreateInput.


        :return: The batches of this InstancesBatchCreateInput.
        :rtype: List[InstancesBatchCreateInputBatches]
        """
        return self._batches

    @batches.setter
    def batches(self, batches):
        """Sets the batches of this InstancesBatchCreateInput.


        :param batches: The batches of this InstancesBatchCreateInput.
        :type batches: List[InstancesBatchCreateInputBatches]
        """

        self._batches = batches
