# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class StaffManufacturer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, slug=None, type=None, contact_name=None, contact_phone=None, contact_email=None, website_url=None, logo_url=None):  # noqa: E501
        """StaffManufacturer - a model defined in OpenAPI

        :param id: The id of this StaffManufacturer.  # noqa: E501
        :type id: str
        :param name: The name of this StaffManufacturer.  # noqa: E501
        :type name: str
        :param slug: The slug of this StaffManufacturer.  # noqa: E501
        :type slug: str
        :param type: The type of this StaffManufacturer.  # noqa: E501
        :type type: str
        :param contact_name: The contact_name of this StaffManufacturer.  # noqa: E501
        :type contact_name: str
        :param contact_phone: The contact_phone of this StaffManufacturer.  # noqa: E501
        :type contact_phone: str
        :param contact_email: The contact_email of this StaffManufacturer.  # noqa: E501
        :type contact_email: str
        :param website_url: The website_url of this StaffManufacturer.  # noqa: E501
        :type website_url: str
        :param logo_url: The logo_url of this StaffManufacturer.  # noqa: E501
        :type logo_url: str
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'slug': str,
            'type': str,
            'contact_name': str,
            'contact_phone': str,
            'contact_email': str,
            'website_url': str,
            'logo_url': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'slug': 'slug',
            'type': 'type',
            'contact_name': 'contact_name',
            'contact_phone': 'contact_phone',
            'contact_email': 'contact_email',
            'website_url': 'website_url',
            'logo_url': 'logo_url'
        }

        self._id = id
        self._name = name
        self._slug = slug
        self._type = type
        self._contact_name = contact_name
        self._contact_phone = contact_phone
        self._contact_email = contact_email
        self._website_url = website_url
        self._logo_url = logo_url

    @classmethod
    def from_dict(cls, dikt) -> 'StaffManufacturer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Staff::Manufacturer of this StaffManufacturer.  # noqa: E501
        :rtype: StaffManufacturer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this StaffManufacturer.


        :return: The id of this StaffManufacturer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StaffManufacturer.


        :param id: The id of this StaffManufacturer.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this StaffManufacturer.


        :return: The name of this StaffManufacturer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StaffManufacturer.


        :param name: The name of this StaffManufacturer.
        :type name: str
        """

        self._name = name

    @property
    def slug(self):
        """Gets the slug of this StaffManufacturer.


        :return: The slug of this StaffManufacturer.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this StaffManufacturer.


        :param slug: The slug of this StaffManufacturer.
        :type slug: str
        """

        self._slug = slug

    @property
    def type(self):
        """Gets the type of this StaffManufacturer.


        :return: The type of this StaffManufacturer.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StaffManufacturer.


        :param type: The type of this StaffManufacturer.
        :type type: str
        """

        self._type = type

    @property
    def contact_name(self):
        """Gets the contact_name of this StaffManufacturer.


        :return: The contact_name of this StaffManufacturer.
        :rtype: str
        """
        return self._contact_name

    @contact_name.setter
    def contact_name(self, contact_name):
        """Sets the contact_name of this StaffManufacturer.


        :param contact_name: The contact_name of this StaffManufacturer.
        :type contact_name: str
        """

        self._contact_name = contact_name

    @property
    def contact_phone(self):
        """Gets the contact_phone of this StaffManufacturer.


        :return: The contact_phone of this StaffManufacturer.
        :rtype: str
        """
        return self._contact_phone

    @contact_phone.setter
    def contact_phone(self, contact_phone):
        """Sets the contact_phone of this StaffManufacturer.


        :param contact_phone: The contact_phone of this StaffManufacturer.
        :type contact_phone: str
        """

        self._contact_phone = contact_phone

    @property
    def contact_email(self):
        """Gets the contact_email of this StaffManufacturer.


        :return: The contact_email of this StaffManufacturer.
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email):
        """Sets the contact_email of this StaffManufacturer.


        :param contact_email: The contact_email of this StaffManufacturer.
        :type contact_email: str
        """

        self._contact_email = contact_email

    @property
    def website_url(self):
        """Gets the website_url of this StaffManufacturer.


        :return: The website_url of this StaffManufacturer.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this StaffManufacturer.


        :param website_url: The website_url of this StaffManufacturer.
        :type website_url: str
        """

        self._website_url = website_url

    @property
    def logo_url(self):
        """Gets the logo_url of this StaffManufacturer.


        :return: The logo_url of this StaffManufacturer.
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this StaffManufacturer.


        :param logo_url: The logo_url of this StaffManufacturer.
        :type logo_url: str
        """

        self._logo_url = logo_url
