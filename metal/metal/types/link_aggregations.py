# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class LinkAggregations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, link_aggregations=None):  # noqa: E501
        """LinkAggregations - a model defined in OpenAPI

        :param link_aggregations: The link_aggregations of this LinkAggregations.  # noqa: E501
        :type link_aggregations: List[str]
        """
        self.openapi_types = {
            'link_aggregations': List[str]
        }

        self.attribute_map = {
            'link_aggregations': 'link_aggregations'
        }

        self._link_aggregations = link_aggregations

    @classmethod
    def from_dict(cls, dikt) -> 'LinkAggregations':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LinkAggregations of this LinkAggregations.  # noqa: E501
        :rtype: LinkAggregations
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link_aggregations(self):
        """Gets the link_aggregations of this LinkAggregations.


        :return: The link_aggregations of this LinkAggregations.
        :rtype: List[str]
        """
        return self._link_aggregations

    @link_aggregations.setter
    def link_aggregations(self, link_aggregations):
        """Sets the link_aggregations of this LinkAggregations.


        :param link_aggregations: The link_aggregations of this LinkAggregations.
        :type link_aggregations: List[str]
        """

        self._link_aggregations = link_aggregations
