# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util

from metal.types.href import Href  # noqa: E501

class VolumeSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, status=None, created_at=None, timestamp=None, volume=None):  # noqa: E501
        """VolumeSnapshot - a model defined in OpenAPI

        :param id: The id of this VolumeSnapshot.  # noqa: E501
        :type id: str
        :param status: The status of this VolumeSnapshot.  # noqa: E501
        :type status: str
        :param created_at: The created_at of this VolumeSnapshot.  # noqa: E501
        :type created_at: datetime
        :param timestamp: The timestamp of this VolumeSnapshot.  # noqa: E501
        :type timestamp: datetime
        :param volume: The volume of this VolumeSnapshot.  # noqa: E501
        :type volume: Href
        """
        self.openapi_types = {
            'id': str,
            'status': str,
            'created_at': datetime,
            'timestamp': datetime,
            'volume': Href
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'created_at': 'created_at',
            'timestamp': 'timestamp',
            'volume': 'volume'
        }

        self._id = id
        self._status = status
        self._created_at = created_at
        self._timestamp = timestamp
        self._volume = volume

    @classmethod
    def from_dict(cls, dikt) -> 'VolumeSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VolumeSnapshot of this VolumeSnapshot.  # noqa: E501
        :rtype: VolumeSnapshot
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this VolumeSnapshot.


        :return: The id of this VolumeSnapshot.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VolumeSnapshot.


        :param id: The id of this VolumeSnapshot.
        :type id: str
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this VolumeSnapshot.


        :return: The status of this VolumeSnapshot.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VolumeSnapshot.


        :param status: The status of this VolumeSnapshot.
        :type status: str
        """

        self._status = status

    @property
    def created_at(self):
        """Gets the created_at of this VolumeSnapshot.


        :return: The created_at of this VolumeSnapshot.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this VolumeSnapshot.


        :param created_at: The created_at of this VolumeSnapshot.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def timestamp(self):
        """Gets the timestamp of this VolumeSnapshot.


        :return: The timestamp of this VolumeSnapshot.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this VolumeSnapshot.


        :param timestamp: The timestamp of this VolumeSnapshot.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def volume(self):
        """Gets the volume of this VolumeSnapshot.


        :return: The volume of this VolumeSnapshot.
        :rtype: Href
        """
        return self._volume

    @volume.setter
    def volume(self, volume):
        """Sets the volume of this VolumeSnapshot.


        :param volume: The volume of this VolumeSnapshot.
        :type volume: Href
        """

        self._volume = volume
