# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.license import License
from metal import util

from metal.types.license import License  # noqa: E501

class LicenseList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, licenses=None):  # noqa: E501
        """LicenseList - a model defined in OpenAPI

        :param licenses: The licenses of this LicenseList.  # noqa: E501
        :type licenses: List[License]
        """
        self.openapi_types = {
            'licenses': List[License]
        }

        self.attribute_map = {
            'licenses': 'licenses'
        }

        self._licenses = licenses

    @classmethod
    def from_dict(cls, dikt) -> 'LicenseList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LicenseList of this LicenseList.  # noqa: E501
        :rtype: LicenseList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def licenses(self):
        """Gets the licenses of this LicenseList.


        :return: The licenses of this LicenseList.
        :rtype: List[License]
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses):
        """Sets the licenses of this LicenseList.


        :param licenses: The licenses of this LicenseList.
        :type licenses: List[License]
        """

        self._licenses = licenses
