# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.meta import Meta
from metal.types.subscribable_event import SubscribableEvent
from metal import util

from metal.types.meta import Meta  # noqa: E501
from metal.types.subscribable_event import SubscribableEvent  # noqa: E501

class SubscribableEventsList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscribable_events=None, meta=None):  # noqa: E501
        """SubscribableEventsList - a model defined in OpenAPI

        :param subscribable_events: The subscribable_events of this SubscribableEventsList.  # noqa: E501
        :type subscribable_events: List[SubscribableEvent]
        :param meta: The meta of this SubscribableEventsList.  # noqa: E501
        :type meta: Meta
        """
        self.openapi_types = {
            'subscribable_events': List[SubscribableEvent],
            'meta': Meta
        }

        self.attribute_map = {
            'subscribable_events': 'subscribable_events',
            'meta': 'meta'
        }

        self._subscribable_events = subscribable_events
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt) -> 'SubscribableEventsList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubscribableEventsList of this SubscribableEventsList.  # noqa: E501
        :rtype: SubscribableEventsList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscribable_events(self):
        """Gets the subscribable_events of this SubscribableEventsList.


        :return: The subscribable_events of this SubscribableEventsList.
        :rtype: List[SubscribableEvent]
        """
        return self._subscribable_events

    @subscribable_events.setter
    def subscribable_events(self, subscribable_events):
        """Sets the subscribable_events of this SubscribableEventsList.


        :param subscribable_events: The subscribable_events of this SubscribableEventsList.
        :type subscribable_events: List[SubscribableEvent]
        """

        self._subscribable_events = subscribable_events

    @property
    def meta(self):
        """Gets the meta of this SubscribableEventsList.


        :return: The meta of this SubscribableEventsList.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this SubscribableEventsList.


        :param meta: The meta of this SubscribableEventsList.
        :type meta: Meta
        """

        self._meta = meta
