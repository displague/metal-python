# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.address import Address
from metal.types.entitlement import Entitlement
from metal.types.href import Href
from metal import util

from metal.types.address import Address  # noqa: E501
from metal.types.entitlement import Entitlement  # noqa: E501
from metal.types.href import Href  # noqa: E501

class Organization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, description=None, website=None, twitter=None, logo=None, created_at=None, updated_at=None, projects=None, members=None, memberships=None, address=None, billing_address=None, entitlement=None, terms=None, credit_amount=None, customdata=None, enforce_2fa_at=None):  # noqa: E501
        """Organization - a model defined in OpenAPI

        :param id: The id of this Organization.  # noqa: E501
        :type id: str
        :param name: The name of this Organization.  # noqa: E501
        :type name: str
        :param description: The description of this Organization.  # noqa: E501
        :type description: str
        :param website: The website of this Organization.  # noqa: E501
        :type website: str
        :param twitter: The twitter of this Organization.  # noqa: E501
        :type twitter: str
        :param logo: The logo of this Organization.  # noqa: E501
        :type logo: file
        :param created_at: The created_at of this Organization.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this Organization.  # noqa: E501
        :type updated_at: datetime
        :param projects: The projects of this Organization.  # noqa: E501
        :type projects: List[Href]
        :param members: The members of this Organization.  # noqa: E501
        :type members: List[Href]
        :param memberships: The memberships of this Organization.  # noqa: E501
        :type memberships: List[Href]
        :param address: The address of this Organization.  # noqa: E501
        :type address: Address
        :param billing_address: The billing_address of this Organization.  # noqa: E501
        :type billing_address: Address
        :param entitlement: The entitlement of this Organization.  # noqa: E501
        :type entitlement: Entitlement
        :param terms: The terms of this Organization.  # noqa: E501
        :type terms: int
        :param credit_amount: The credit_amount of this Organization.  # noqa: E501
        :type credit_amount: float
        :param customdata: The customdata of this Organization.  # noqa: E501
        :type customdata: object
        :param enforce_2fa_at: The enforce_2fa_at of this Organization.  # noqa: E501
        :type enforce_2fa_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'description': str,
            'website': str,
            'twitter': str,
            'logo': file,
            'created_at': datetime,
            'updated_at': datetime,
            'projects': List[Href],
            'members': List[Href],
            'memberships': List[Href],
            'address': Address,
            'billing_address': Address,
            'entitlement': Entitlement,
            'terms': int,
            'credit_amount': float,
            'customdata': object,
            'enforce_2fa_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'website': 'website',
            'twitter': 'twitter',
            'logo': 'logo',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'projects': 'projects',
            'members': 'members',
            'memberships': 'memberships',
            'address': 'address',
            'billing_address': 'billing_address',
            'entitlement': 'entitlement',
            'terms': 'terms',
            'credit_amount': 'credit_amount',
            'customdata': 'customdata',
            'enforce_2fa_at': 'enforce_2fa_at'
        }

        self._id = id
        self._name = name
        self._description = description
        self._website = website
        self._twitter = twitter
        self._logo = logo
        self._created_at = created_at
        self._updated_at = updated_at
        self._projects = projects
        self._members = members
        self._memberships = memberships
        self._address = address
        self._billing_address = billing_address
        self._entitlement = entitlement
        self._terms = terms
        self._credit_amount = credit_amount
        self._customdata = customdata
        self._enforce_2fa_at = enforce_2fa_at

    @classmethod
    def from_dict(cls, dikt) -> 'Organization':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Organization of this Organization.  # noqa: E501
        :rtype: Organization
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Organization.


        :return: The id of this Organization.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Organization.


        :param id: The id of this Organization.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Organization.


        :return: The name of this Organization.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Organization.


        :param name: The name of this Organization.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this Organization.


        :return: The description of this Organization.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Organization.


        :param description: The description of this Organization.
        :type description: str
        """

        self._description = description

    @property
    def website(self):
        """Gets the website of this Organization.


        :return: The website of this Organization.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Organization.


        :param website: The website of this Organization.
        :type website: str
        """

        self._website = website

    @property
    def twitter(self):
        """Gets the twitter of this Organization.


        :return: The twitter of this Organization.
        :rtype: str
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this Organization.


        :param twitter: The twitter of this Organization.
        :type twitter: str
        """

        self._twitter = twitter

    @property
    def logo(self):
        """Gets the logo of this Organization.


        :return: The logo of this Organization.
        :rtype: file
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this Organization.


        :param logo: The logo of this Organization.
        :type logo: file
        """

        self._logo = logo

    @property
    def created_at(self):
        """Gets the created_at of this Organization.


        :return: The created_at of this Organization.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Organization.


        :param created_at: The created_at of this Organization.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this Organization.


        :return: The updated_at of this Organization.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Organization.


        :param updated_at: The updated_at of this Organization.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def projects(self):
        """Gets the projects of this Organization.


        :return: The projects of this Organization.
        :rtype: List[Href]
        """
        return self._projects

    @projects.setter
    def projects(self, projects):
        """Sets the projects of this Organization.


        :param projects: The projects of this Organization.
        :type projects: List[Href]
        """

        self._projects = projects

    @property
    def members(self):
        """Gets the members of this Organization.


        :return: The members of this Organization.
        :rtype: List[Href]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this Organization.


        :param members: The members of this Organization.
        :type members: List[Href]
        """

        self._members = members

    @property
    def memberships(self):
        """Gets the memberships of this Organization.


        :return: The memberships of this Organization.
        :rtype: List[Href]
        """
        return self._memberships

    @memberships.setter
    def memberships(self, memberships):
        """Sets the memberships of this Organization.


        :param memberships: The memberships of this Organization.
        :type memberships: List[Href]
        """

        self._memberships = memberships

    @property
    def address(self):
        """Gets the address of this Organization.


        :return: The address of this Organization.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Organization.


        :param address: The address of this Organization.
        :type address: Address
        """

        self._address = address

    @property
    def billing_address(self):
        """Gets the billing_address of this Organization.


        :return: The billing_address of this Organization.
        :rtype: Address
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this Organization.


        :param billing_address: The billing_address of this Organization.
        :type billing_address: Address
        """

        self._billing_address = billing_address

    @property
    def entitlement(self):
        """Gets the entitlement of this Organization.


        :return: The entitlement of this Organization.
        :rtype: Entitlement
        """
        return self._entitlement

    @entitlement.setter
    def entitlement(self, entitlement):
        """Sets the entitlement of this Organization.


        :param entitlement: The entitlement of this Organization.
        :type entitlement: Entitlement
        """

        self._entitlement = entitlement

    @property
    def terms(self):
        """Gets the terms of this Organization.


        :return: The terms of this Organization.
        :rtype: int
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this Organization.


        :param terms: The terms of this Organization.
        :type terms: int
        """

        self._terms = terms

    @property
    def credit_amount(self):
        """Gets the credit_amount of this Organization.


        :return: The credit_amount of this Organization.
        :rtype: float
        """
        return self._credit_amount

    @credit_amount.setter
    def credit_amount(self, credit_amount):
        """Sets the credit_amount of this Organization.


        :param credit_amount: The credit_amount of this Organization.
        :type credit_amount: float
        """

        self._credit_amount = credit_amount

    @property
    def customdata(self):
        """Gets the customdata of this Organization.


        :return: The customdata of this Organization.
        :rtype: object
        """
        return self._customdata

    @customdata.setter
    def customdata(self, customdata):
        """Sets the customdata of this Organization.


        :param customdata: The customdata of this Organization.
        :type customdata: object
        """

        self._customdata = customdata

    @property
    def enforce_2fa_at(self):
        """Gets the enforce_2fa_at of this Organization.

        Force to all members to have enabled the two factor authentication after that date, unless the value is null  # noqa: E501

        :return: The enforce_2fa_at of this Organization.
        :rtype: datetime
        """
        return self._enforce_2fa_at

    @enforce_2fa_at.setter
    def enforce_2fa_at(self, enforce_2fa_at):
        """Sets the enforce_2fa_at of this Organization.

        Force to all members to have enabled the two factor authentication after that date, unless the value is null  # noqa: E501

        :param enforce_2fa_at: The enforce_2fa_at of this Organization.
        :type enforce_2fa_at: datetime
        """

        self._enforce_2fa_at = enforce_2fa_at
