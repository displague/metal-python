# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class SnapshotPolicyInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshot_count=None, snapshot_frequency=None):  # noqa: E501
        """SnapshotPolicyInput - a model defined in OpenAPI

        :param snapshot_count: The snapshot_count of this SnapshotPolicyInput.  # noqa: E501
        :type snapshot_count: int
        :param snapshot_frequency: The snapshot_frequency of this SnapshotPolicyInput.  # noqa: E501
        :type snapshot_frequency: str
        """
        self.openapi_types = {
            'snapshot_count': int,
            'snapshot_frequency': str
        }

        self.attribute_map = {
            'snapshot_count': 'snapshot_count',
            'snapshot_frequency': 'snapshot_frequency'
        }

        self._snapshot_count = snapshot_count
        self._snapshot_frequency = snapshot_frequency

    @classmethod
    def from_dict(cls, dikt) -> 'SnapshotPolicyInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SnapshotPolicyInput of this SnapshotPolicyInput.  # noqa: E501
        :rtype: SnapshotPolicyInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshot_count(self):
        """Gets the snapshot_count of this SnapshotPolicyInput.


        :return: The snapshot_count of this SnapshotPolicyInput.
        :rtype: int
        """
        return self._snapshot_count

    @snapshot_count.setter
    def snapshot_count(self, snapshot_count):
        """Sets the snapshot_count of this SnapshotPolicyInput.


        :param snapshot_count: The snapshot_count of this SnapshotPolicyInput.
        :type snapshot_count: int
        """

        self._snapshot_count = snapshot_count

    @property
    def snapshot_frequency(self):
        """Gets the snapshot_frequency of this SnapshotPolicyInput.


        :return: The snapshot_frequency of this SnapshotPolicyInput.
        :rtype: str
        """
        return self._snapshot_frequency

    @snapshot_frequency.setter
    def snapshot_frequency(self, snapshot_frequency):
        """Sets the snapshot_frequency of this SnapshotPolicyInput.


        :param snapshot_frequency: The snapshot_frequency of this SnapshotPolicyInput.
        :type snapshot_frequency: str
        """

        self._snapshot_frequency = snapshot_frequency
