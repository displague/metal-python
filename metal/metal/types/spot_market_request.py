# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util

from metal.types.href import Href  # noqa: E501

class SpotMarketRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, devices_min=None, devices_max=None, max_bid_price=None, created_at=None, end_at=None, href=None, facilities=None, project=None, instances=None):  # noqa: E501
        """SpotMarketRequest - a model defined in OpenAPI

        :param id: The id of this SpotMarketRequest.  # noqa: E501
        :type id: str
        :param devices_min: The devices_min of this SpotMarketRequest.  # noqa: E501
        :type devices_min: int
        :param devices_max: The devices_max of this SpotMarketRequest.  # noqa: E501
        :type devices_max: int
        :param max_bid_price: The max_bid_price of this SpotMarketRequest.  # noqa: E501
        :type max_bid_price: float
        :param created_at: The created_at of this SpotMarketRequest.  # noqa: E501
        :type created_at: datetime
        :param end_at: The end_at of this SpotMarketRequest.  # noqa: E501
        :type end_at: datetime
        :param href: The href of this SpotMarketRequest.  # noqa: E501
        :type href: str
        :param facilities: The facilities of this SpotMarketRequest.  # noqa: E501
        :type facilities: Href
        :param project: The project of this SpotMarketRequest.  # noqa: E501
        :type project: Href
        :param instances: The instances of this SpotMarketRequest.  # noqa: E501
        :type instances: Href
        """
        self.openapi_types = {
            'id': str,
            'devices_min': int,
            'devices_max': int,
            'max_bid_price': float,
            'created_at': datetime,
            'end_at': datetime,
            'href': str,
            'facilities': Href,
            'project': Href,
            'instances': Href
        }

        self.attribute_map = {
            'id': 'id',
            'devices_min': 'devices_min',
            'devices_max': 'devices_max',
            'max_bid_price': 'max_bid_price',
            'created_at': 'created_at',
            'end_at': 'end_at',
            'href': 'href',
            'facilities': 'facilities',
            'project': 'project',
            'instances': 'instances'
        }

        self._id = id
        self._devices_min = devices_min
        self._devices_max = devices_max
        self._max_bid_price = max_bid_price
        self._created_at = created_at
        self._end_at = end_at
        self._href = href
        self._facilities = facilities
        self._project = project
        self._instances = instances

    @classmethod
    def from_dict(cls, dikt) -> 'SpotMarketRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SpotMarketRequest of this SpotMarketRequest.  # noqa: E501
        :rtype: SpotMarketRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SpotMarketRequest.


        :return: The id of this SpotMarketRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SpotMarketRequest.


        :param id: The id of this SpotMarketRequest.
        :type id: str
        """

        self._id = id

    @property
    def devices_min(self):
        """Gets the devices_min of this SpotMarketRequest.


        :return: The devices_min of this SpotMarketRequest.
        :rtype: int
        """
        return self._devices_min

    @devices_min.setter
    def devices_min(self, devices_min):
        """Sets the devices_min of this SpotMarketRequest.


        :param devices_min: The devices_min of this SpotMarketRequest.
        :type devices_min: int
        """

        self._devices_min = devices_min

    @property
    def devices_max(self):
        """Gets the devices_max of this SpotMarketRequest.


        :return: The devices_max of this SpotMarketRequest.
        :rtype: int
        """
        return self._devices_max

    @devices_max.setter
    def devices_max(self, devices_max):
        """Sets the devices_max of this SpotMarketRequest.


        :param devices_max: The devices_max of this SpotMarketRequest.
        :type devices_max: int
        """

        self._devices_max = devices_max

    @property
    def max_bid_price(self):
        """Gets the max_bid_price of this SpotMarketRequest.


        :return: The max_bid_price of this SpotMarketRequest.
        :rtype: float
        """
        return self._max_bid_price

    @max_bid_price.setter
    def max_bid_price(self, max_bid_price):
        """Sets the max_bid_price of this SpotMarketRequest.


        :param max_bid_price: The max_bid_price of this SpotMarketRequest.
        :type max_bid_price: float
        """

        self._max_bid_price = max_bid_price

    @property
    def created_at(self):
        """Gets the created_at of this SpotMarketRequest.


        :return: The created_at of this SpotMarketRequest.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SpotMarketRequest.


        :param created_at: The created_at of this SpotMarketRequest.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def end_at(self):
        """Gets the end_at of this SpotMarketRequest.


        :return: The end_at of this SpotMarketRequest.
        :rtype: datetime
        """
        return self._end_at

    @end_at.setter
    def end_at(self, end_at):
        """Sets the end_at of this SpotMarketRequest.


        :param end_at: The end_at of this SpotMarketRequest.
        :type end_at: datetime
        """

        self._end_at = end_at

    @property
    def href(self):
        """Gets the href of this SpotMarketRequest.


        :return: The href of this SpotMarketRequest.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this SpotMarketRequest.


        :param href: The href of this SpotMarketRequest.
        :type href: str
        """

        self._href = href

    @property
    def facilities(self):
        """Gets the facilities of this SpotMarketRequest.


        :return: The facilities of this SpotMarketRequest.
        :rtype: Href
        """
        return self._facilities

    @facilities.setter
    def facilities(self, facilities):
        """Sets the facilities of this SpotMarketRequest.


        :param facilities: The facilities of this SpotMarketRequest.
        :type facilities: Href
        """

        self._facilities = facilities

    @property
    def project(self):
        """Gets the project of this SpotMarketRequest.


        :return: The project of this SpotMarketRequest.
        :rtype: Href
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this SpotMarketRequest.


        :param project: The project of this SpotMarketRequest.
        :type project: Href
        """

        self._project = project

    @property
    def instances(self):
        """Gets the instances of this SpotMarketRequest.


        :return: The instances of this SpotMarketRequest.
        :rtype: Href
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this SpotMarketRequest.


        :param instances: The instances of this SpotMarketRequest.
        :type instances: Href
        """

        self._instances = instances
