# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.virtual_network import VirtualNetwork
from metal import util

from metal.types.virtual_network import VirtualNetwork  # noqa: E501

class VirtualNetworkList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, virtual_networks=None):  # noqa: E501
        """VirtualNetworkList - a model defined in OpenAPI

        :param virtual_networks: The virtual_networks of this VirtualNetworkList.  # noqa: E501
        :type virtual_networks: List[VirtualNetwork]
        """
        self.openapi_types = {
            'virtual_networks': List[VirtualNetwork]
        }

        self.attribute_map = {
            'virtual_networks': 'virtual_networks'
        }

        self._virtual_networks = virtual_networks

    @classmethod
    def from_dict(cls, dikt) -> 'VirtualNetworkList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VirtualNetworkList of this VirtualNetworkList.  # noqa: E501
        :rtype: VirtualNetworkList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def virtual_networks(self):
        """Gets the virtual_networks of this VirtualNetworkList.


        :return: The virtual_networks of this VirtualNetworkList.
        :rtype: List[VirtualNetwork]
        """
        return self._virtual_networks

    @virtual_networks.setter
    def virtual_networks(self, virtual_networks):
        """Sets the virtual_networks of this VirtualNetworkList.


        :param virtual_networks: The virtual_networks of this VirtualNetworkList.
        :type virtual_networks: List[VirtualNetwork]
        """

        self._virtual_networks = virtual_networks
