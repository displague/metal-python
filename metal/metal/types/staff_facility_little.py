# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.staff_metro_little import StaffMetroLittle
from metal import util

from metal.types.staff_metro_little import StaffMetroLittle  # noqa: E501

class StaffFacilityLittle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, code=None, metro=None):  # noqa: E501
        """StaffFacilityLittle - a model defined in OpenAPI

        :param id: The id of this StaffFacilityLittle.  # noqa: E501
        :type id: str
        :param name: The name of this StaffFacilityLittle.  # noqa: E501
        :type name: str
        :param code: The code of this StaffFacilityLittle.  # noqa: E501
        :type code: str
        :param metro: The metro of this StaffFacilityLittle.  # noqa: E501
        :type metro: StaffMetroLittle
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'code': str,
            'metro': StaffMetroLittle
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'code': 'code',
            'metro': 'metro'
        }

        self._id = id
        self._name = name
        self._code = code
        self._metro = metro

    @classmethod
    def from_dict(cls, dikt) -> 'StaffFacilityLittle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Staff::FacilityLittle of this StaffFacilityLittle.  # noqa: E501
        :rtype: StaffFacilityLittle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this StaffFacilityLittle.


        :return: The id of this StaffFacilityLittle.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StaffFacilityLittle.


        :param id: The id of this StaffFacilityLittle.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this StaffFacilityLittle.


        :return: The name of this StaffFacilityLittle.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StaffFacilityLittle.


        :param name: The name of this StaffFacilityLittle.
        :type name: str
        """

        self._name = name

    @property
    def code(self):
        """Gets the code of this StaffFacilityLittle.


        :return: The code of this StaffFacilityLittle.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this StaffFacilityLittle.


        :param code: The code of this StaffFacilityLittle.
        :type code: str
        """

        self._code = code

    @property
    def metro(self):
        """Gets the metro of this StaffFacilityLittle.


        :return: The metro of this StaffFacilityLittle.
        :rtype: StaffMetroLittle
        """
        return self._metro

    @metro.setter
    def metro(self, metro):
        """Sets the metro of this StaffFacilityLittle.


        :param metro: The metro of this StaffFacilityLittle.
        :type metro: StaffMetroLittle
        """

        self._metro = metro
