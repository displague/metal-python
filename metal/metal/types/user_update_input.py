# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class UserUpdateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name=None, last_name=None, phone_number=None, timezone=None, password=None, avatar=None, customdata=None):  # noqa: E501
        """UserUpdateInput - a model defined in OpenAPI

        :param first_name: The first_name of this UserUpdateInput.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this UserUpdateInput.  # noqa: E501
        :type last_name: str
        :param phone_number: The phone_number of this UserUpdateInput.  # noqa: E501
        :type phone_number: str
        :param timezone: The timezone of this UserUpdateInput.  # noqa: E501
        :type timezone: str
        :param password: The password of this UserUpdateInput.  # noqa: E501
        :type password: str
        :param avatar: The avatar of this UserUpdateInput.  # noqa: E501
        :type avatar: file
        :param customdata: The customdata of this UserUpdateInput.  # noqa: E501
        :type customdata: object
        """
        self.openapi_types = {
            'first_name': str,
            'last_name': str,
            'phone_number': str,
            'timezone': str,
            'password': str,
            'avatar': file,
            'customdata': object
        }

        self.attribute_map = {
            'first_name': 'first_name',
            'last_name': 'last_name',
            'phone_number': 'phone_number',
            'timezone': 'timezone',
            'password': 'password',
            'avatar': 'avatar',
            'customdata': 'customdata'
        }

        self._first_name = first_name
        self._last_name = last_name
        self._phone_number = phone_number
        self._timezone = timezone
        self._password = password
        self._avatar = avatar
        self._customdata = customdata

    @classmethod
    def from_dict(cls, dikt) -> 'UserUpdateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserUpdateInput of this UserUpdateInput.  # noqa: E501
        :rtype: UserUpdateInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self):
        """Gets the first_name of this UserUpdateInput.


        :return: The first_name of this UserUpdateInput.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UserUpdateInput.


        :param first_name: The first_name of this UserUpdateInput.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this UserUpdateInput.


        :return: The last_name of this UserUpdateInput.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UserUpdateInput.


        :param last_name: The last_name of this UserUpdateInput.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def phone_number(self):
        """Gets the phone_number of this UserUpdateInput.


        :return: The phone_number of this UserUpdateInput.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this UserUpdateInput.


        :param phone_number: The phone_number of this UserUpdateInput.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def timezone(self):
        """Gets the timezone of this UserUpdateInput.


        :return: The timezone of this UserUpdateInput.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this UserUpdateInput.


        :param timezone: The timezone of this UserUpdateInput.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def password(self):
        """Gets the password of this UserUpdateInput.


        :return: The password of this UserUpdateInput.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UserUpdateInput.


        :param password: The password of this UserUpdateInput.
        :type password: str
        """

        self._password = password

    @property
    def avatar(self):
        """Gets the avatar of this UserUpdateInput.


        :return: The avatar of this UserUpdateInput.
        :rtype: file
        """
        return self._avatar

    @avatar.setter
    def avatar(self, avatar):
        """Sets the avatar of this UserUpdateInput.


        :param avatar: The avatar of this UserUpdateInput.
        :type avatar: file
        """

        self._avatar = avatar

    @property
    def customdata(self):
        """Gets the customdata of this UserUpdateInput.


        :return: The customdata of this UserUpdateInput.
        :rtype: object
        """
        return self._customdata

    @customdata.setter
    def customdata(self, customdata):
        """Sets the customdata of this UserUpdateInput.


        :param customdata: The customdata of this UserUpdateInput.
        :type customdata: object
        """

        self._customdata = customdata
