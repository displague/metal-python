# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util

from metal.types.href import Href  # noqa: E501

class BgpSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, status=None, learned_routes=None, address_family=None, device=None, href=None, default_route=None):  # noqa: E501
        """BgpSession - a model defined in OpenAPI

        :param id: The id of this BgpSession.  # noqa: E501
        :type id: str
        :param status: The status of this BgpSession.  # noqa: E501
        :type status: str
        :param learned_routes: The learned_routes of this BgpSession.  # noqa: E501
        :type learned_routes: List[str]
        :param address_family: The address_family of this BgpSession.  # noqa: E501
        :type address_family: str
        :param device: The device of this BgpSession.  # noqa: E501
        :type device: Href
        :param href: The href of this BgpSession.  # noqa: E501
        :type href: str
        :param default_route: The default_route of this BgpSession.  # noqa: E501
        :type default_route: bool
        """
        self.openapi_types = {
            'id': str,
            'status': str,
            'learned_routes': List[str],
            'address_family': str,
            'device': Href,
            'href': str,
            'default_route': bool
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'learned_routes': 'learned_routes',
            'address_family': 'address_family',
            'device': 'device',
            'href': 'href',
            'default_route': 'default_route'
        }

        self._id = id
        self._status = status
        self._learned_routes = learned_routes
        self._address_family = address_family
        self._device = device
        self._href = href
        self._default_route = default_route

    @classmethod
    def from_dict(cls, dikt) -> 'BgpSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BgpSession of this BgpSession.  # noqa: E501
        :rtype: BgpSession
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this BgpSession.


        :return: The id of this BgpSession.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BgpSession.


        :param id: The id of this BgpSession.
        :type id: str
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this BgpSession.


        :return: The status of this BgpSession.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BgpSession.


        :param status: The status of this BgpSession.
        :type status: str
        """

        self._status = status

    @property
    def learned_routes(self):
        """Gets the learned_routes of this BgpSession.


        :return: The learned_routes of this BgpSession.
        :rtype: List[str]
        """
        return self._learned_routes

    @learned_routes.setter
    def learned_routes(self, learned_routes):
        """Sets the learned_routes of this BgpSession.


        :param learned_routes: The learned_routes of this BgpSession.
        :type learned_routes: List[str]
        """

        self._learned_routes = learned_routes

    @property
    def address_family(self):
        """Gets the address_family of this BgpSession.


        :return: The address_family of this BgpSession.
        :rtype: str
        """
        return self._address_family

    @address_family.setter
    def address_family(self, address_family):
        """Sets the address_family of this BgpSession.


        :param address_family: The address_family of this BgpSession.
        :type address_family: str
        """

        self._address_family = address_family

    @property
    def device(self):
        """Gets the device of this BgpSession.


        :return: The device of this BgpSession.
        :rtype: Href
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this BgpSession.


        :param device: The device of this BgpSession.
        :type device: Href
        """

        self._device = device

    @property
    def href(self):
        """Gets the href of this BgpSession.


        :return: The href of this BgpSession.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this BgpSession.


        :param href: The href of this BgpSession.
        :type href: str
        """

        self._href = href

    @property
    def default_route(self):
        """Gets the default_route of this BgpSession.


        :return: The default_route of this BgpSession.
        :rtype: bool
        """
        return self._default_route

    @default_route.setter
    def default_route(self, default_route):
        """Sets the default_route of this BgpSession.


        :param default_route: The default_route of this BgpSession.
        :type default_route: bool
        """

        self._default_route = default_route
