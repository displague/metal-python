# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class BgpNeighborDataRoutesIn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, route=None, exact=None):  # noqa: E501
        """BgpNeighborDataRoutesIn - a model defined in OpenAPI

        :param route: The route of this BgpNeighborDataRoutesIn.  # noqa: E501
        :type route: str
        :param exact: The exact of this BgpNeighborDataRoutesIn.  # noqa: E501
        :type exact: bool
        """
        self.openapi_types = {
            'route': str,
            'exact': bool
        }

        self.attribute_map = {
            'route': 'route',
            'exact': 'exact'
        }

        self._route = route
        self._exact = exact

    @classmethod
    def from_dict(cls, dikt) -> 'BgpNeighborDataRoutesIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BgpNeighborData_routes_in of this BgpNeighborDataRoutesIn.  # noqa: E501
        :rtype: BgpNeighborDataRoutesIn
        """
        return util.deserialize_model(dikt, cls)

    @property
    def route(self):
        """Gets the route of this BgpNeighborDataRoutesIn.

        A project network  # noqa: E501

        :return: The route of this BgpNeighborDataRoutesIn.
        :rtype: str
        """
        return self._route

    @route.setter
    def route(self, route):
        """Sets the route of this BgpNeighborDataRoutesIn.

        A project network  # noqa: E501

        :param route: The route of this BgpNeighborDataRoutesIn.
        :type route: str
        """

        self._route = route

    @property
    def exact(self):
        """Gets the exact of this BgpNeighborDataRoutesIn.


        :return: The exact of this BgpNeighborDataRoutesIn.
        :rtype: bool
        """
        return self._exact

    @exact.setter
    def exact(self, exact):
        """Sets the exact of this BgpNeighborDataRoutesIn.


        :param exact: The exact of this BgpNeighborDataRoutesIn.
        :type exact: bool
        """

        self._exact = exact
