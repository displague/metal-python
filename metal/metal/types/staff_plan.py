# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.staff_plan_version import StaffPlanVersion
from metal import util

from metal.types.staff_plan_version import StaffPlanVersion  # noqa: E501

class StaffPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, slug=None, description=None, line=None, specs=None, legacy=None, pricing=None, available_in_codes=None, default_plan_version_id=None, original_slug=None, deployment_types=None, zoho_item_id=None, configuration=None, features=None, aliases=None, default_preinstallable_operating_system_id=None, default_plan_version=None, plan_versions=None):  # noqa: E501
        """StaffPlan - a model defined in OpenAPI

        :param id: The id of this StaffPlan.  # noqa: E501
        :type id: str
        :param name: The name of this StaffPlan.  # noqa: E501
        :type name: str
        :param slug: The slug of this StaffPlan.  # noqa: E501
        :type slug: str
        :param description: The description of this StaffPlan.  # noqa: E501
        :type description: str
        :param line: The line of this StaffPlan.  # noqa: E501
        :type line: str
        :param specs: The specs of this StaffPlan.  # noqa: E501
        :type specs: object
        :param legacy: The legacy of this StaffPlan.  # noqa: E501
        :type legacy: bool
        :param pricing: The pricing of this StaffPlan.  # noqa: E501
        :type pricing: object
        :param available_in_codes: The available_in_codes of this StaffPlan.  # noqa: E501
        :type available_in_codes: List[str]
        :param default_plan_version_id: The default_plan_version_id of this StaffPlan.  # noqa: E501
        :type default_plan_version_id: str
        :param original_slug: The original_slug of this StaffPlan.  # noqa: E501
        :type original_slug: str
        :param deployment_types: The deployment_types of this StaffPlan.  # noqa: E501
        :type deployment_types: List[str]
        :param zoho_item_id: The zoho_item_id of this StaffPlan.  # noqa: E501
        :type zoho_item_id: str
        :param configuration: The configuration of this StaffPlan.  # noqa: E501
        :type configuration: object
        :param features: The features of this StaffPlan.  # noqa: E501
        :type features: List[str]
        :param aliases: The aliases of this StaffPlan.  # noqa: E501
        :type aliases: List[str]
        :param default_preinstallable_operating_system_id: The default_preinstallable_operating_system_id of this StaffPlan.  # noqa: E501
        :type default_preinstallable_operating_system_id: str
        :param default_plan_version: The default_plan_version of this StaffPlan.  # noqa: E501
        :type default_plan_version: StaffPlanVersion
        :param plan_versions: The plan_versions of this StaffPlan.  # noqa: E501
        :type plan_versions: List[StaffPlanVersion]
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'slug': str,
            'description': str,
            'line': str,
            'specs': object,
            'legacy': bool,
            'pricing': object,
            'available_in_codes': List[str],
            'default_plan_version_id': str,
            'original_slug': str,
            'deployment_types': List[str],
            'zoho_item_id': str,
            'configuration': object,
            'features': List[str],
            'aliases': List[str],
            'default_preinstallable_operating_system_id': str,
            'default_plan_version': StaffPlanVersion,
            'plan_versions': List[StaffPlanVersion]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'slug': 'slug',
            'description': 'description',
            'line': 'line',
            'specs': 'specs',
            'legacy': 'legacy',
            'pricing': 'pricing',
            'available_in_codes': 'available_in_codes',
            'default_plan_version_id': 'default_plan_version_id',
            'original_slug': 'original_slug',
            'deployment_types': 'deployment_types',
            'zoho_item_id': 'zoho_item_id',
            'configuration': 'configuration',
            'features': 'features',
            'aliases': 'aliases',
            'default_preinstallable_operating_system_id': 'default_preinstallable_operating_system_id',
            'default_plan_version': 'default_plan_version',
            'plan_versions': 'plan_versions'
        }

        self._id = id
        self._name = name
        self._slug = slug
        self._description = description
        self._line = line
        self._specs = specs
        self._legacy = legacy
        self._pricing = pricing
        self._available_in_codes = available_in_codes
        self._default_plan_version_id = default_plan_version_id
        self._original_slug = original_slug
        self._deployment_types = deployment_types
        self._zoho_item_id = zoho_item_id
        self._configuration = configuration
        self._features = features
        self._aliases = aliases
        self._default_preinstallable_operating_system_id = default_preinstallable_operating_system_id
        self._default_plan_version = default_plan_version
        self._plan_versions = plan_versions

    @classmethod
    def from_dict(cls, dikt) -> 'StaffPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Staff::Plan of this StaffPlan.  # noqa: E501
        :rtype: StaffPlan
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this StaffPlan.


        :return: The id of this StaffPlan.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StaffPlan.


        :param id: The id of this StaffPlan.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this StaffPlan.


        :return: The name of this StaffPlan.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StaffPlan.


        :param name: The name of this StaffPlan.
        :type name: str
        """

        self._name = name

    @property
    def slug(self):
        """Gets the slug of this StaffPlan.


        :return: The slug of this StaffPlan.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this StaffPlan.


        :param slug: The slug of this StaffPlan.
        :type slug: str
        """

        self._slug = slug

    @property
    def description(self):
        """Gets the description of this StaffPlan.


        :return: The description of this StaffPlan.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StaffPlan.


        :param description: The description of this StaffPlan.
        :type description: str
        """

        self._description = description

    @property
    def line(self):
        """Gets the line of this StaffPlan.


        :return: The line of this StaffPlan.
        :rtype: str
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this StaffPlan.


        :param line: The line of this StaffPlan.
        :type line: str
        """

        self._line = line

    @property
    def specs(self):
        """Gets the specs of this StaffPlan.


        :return: The specs of this StaffPlan.
        :rtype: object
        """
        return self._specs

    @specs.setter
    def specs(self, specs):
        """Sets the specs of this StaffPlan.


        :param specs: The specs of this StaffPlan.
        :type specs: object
        """

        self._specs = specs

    @property
    def legacy(self):
        """Gets the legacy of this StaffPlan.


        :return: The legacy of this StaffPlan.
        :rtype: bool
        """
        return self._legacy

    @legacy.setter
    def legacy(self, legacy):
        """Sets the legacy of this StaffPlan.


        :param legacy: The legacy of this StaffPlan.
        :type legacy: bool
        """

        self._legacy = legacy

    @property
    def pricing(self):
        """Gets the pricing of this StaffPlan.


        :return: The pricing of this StaffPlan.
        :rtype: object
        """
        return self._pricing

    @pricing.setter
    def pricing(self, pricing):
        """Sets the pricing of this StaffPlan.


        :param pricing: The pricing of this StaffPlan.
        :type pricing: object
        """

        self._pricing = pricing

    @property
    def available_in_codes(self):
        """Gets the available_in_codes of this StaffPlan.


        :return: The available_in_codes of this StaffPlan.
        :rtype: List[str]
        """
        return self._available_in_codes

    @available_in_codes.setter
    def available_in_codes(self, available_in_codes):
        """Sets the available_in_codes of this StaffPlan.


        :param available_in_codes: The available_in_codes of this StaffPlan.
        :type available_in_codes: List[str]
        """

        self._available_in_codes = available_in_codes

    @property
    def default_plan_version_id(self):
        """Gets the default_plan_version_id of this StaffPlan.


        :return: The default_plan_version_id of this StaffPlan.
        :rtype: str
        """
        return self._default_plan_version_id

    @default_plan_version_id.setter
    def default_plan_version_id(self, default_plan_version_id):
        """Sets the default_plan_version_id of this StaffPlan.


        :param default_plan_version_id: The default_plan_version_id of this StaffPlan.
        :type default_plan_version_id: str
        """

        self._default_plan_version_id = default_plan_version_id

    @property
    def original_slug(self):
        """Gets the original_slug of this StaffPlan.


        :return: The original_slug of this StaffPlan.
        :rtype: str
        """
        return self._original_slug

    @original_slug.setter
    def original_slug(self, original_slug):
        """Sets the original_slug of this StaffPlan.


        :param original_slug: The original_slug of this StaffPlan.
        :type original_slug: str
        """

        self._original_slug = original_slug

    @property
    def deployment_types(self):
        """Gets the deployment_types of this StaffPlan.


        :return: The deployment_types of this StaffPlan.
        :rtype: List[str]
        """
        return self._deployment_types

    @deployment_types.setter
    def deployment_types(self, deployment_types):
        """Sets the deployment_types of this StaffPlan.


        :param deployment_types: The deployment_types of this StaffPlan.
        :type deployment_types: List[str]
        """

        self._deployment_types = deployment_types

    @property
    def zoho_item_id(self):
        """Gets the zoho_item_id of this StaffPlan.


        :return: The zoho_item_id of this StaffPlan.
        :rtype: str
        """
        return self._zoho_item_id

    @zoho_item_id.setter
    def zoho_item_id(self, zoho_item_id):
        """Sets the zoho_item_id of this StaffPlan.


        :param zoho_item_id: The zoho_item_id of this StaffPlan.
        :type zoho_item_id: str
        """

        self._zoho_item_id = zoho_item_id

    @property
    def configuration(self):
        """Gets the configuration of this StaffPlan.


        :return: The configuration of this StaffPlan.
        :rtype: object
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this StaffPlan.


        :param configuration: The configuration of this StaffPlan.
        :type configuration: object
        """

        self._configuration = configuration

    @property
    def features(self):
        """Gets the features of this StaffPlan.


        :return: The features of this StaffPlan.
        :rtype: List[str]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this StaffPlan.


        :param features: The features of this StaffPlan.
        :type features: List[str]
        """

        self._features = features

    @property
    def aliases(self):
        """Gets the aliases of this StaffPlan.


        :return: The aliases of this StaffPlan.
        :rtype: List[str]
        """
        return self._aliases

    @aliases.setter
    def aliases(self, aliases):
        """Sets the aliases of this StaffPlan.


        :param aliases: The aliases of this StaffPlan.
        :type aliases: List[str]
        """

        self._aliases = aliases

    @property
    def default_preinstallable_operating_system_id(self):
        """Gets the default_preinstallable_operating_system_id of this StaffPlan.


        :return: The default_preinstallable_operating_system_id of this StaffPlan.
        :rtype: str
        """
        return self._default_preinstallable_operating_system_id

    @default_preinstallable_operating_system_id.setter
    def default_preinstallable_operating_system_id(self, default_preinstallable_operating_system_id):
        """Sets the default_preinstallable_operating_system_id of this StaffPlan.


        :param default_preinstallable_operating_system_id: The default_preinstallable_operating_system_id of this StaffPlan.
        :type default_preinstallable_operating_system_id: str
        """

        self._default_preinstallable_operating_system_id = default_preinstallable_operating_system_id

    @property
    def default_plan_version(self):
        """Gets the default_plan_version of this StaffPlan.


        :return: The default_plan_version of this StaffPlan.
        :rtype: StaffPlanVersion
        """
        return self._default_plan_version

    @default_plan_version.setter
    def default_plan_version(self, default_plan_version):
        """Sets the default_plan_version of this StaffPlan.


        :param default_plan_version: The default_plan_version of this StaffPlan.
        :type default_plan_version: StaffPlanVersion
        """

        self._default_plan_version = default_plan_version

    @property
    def plan_versions(self):
        """Gets the plan_versions of this StaffPlan.


        :return: The plan_versions of this StaffPlan.
        :rtype: List[StaffPlanVersion]
        """
        return self._plan_versions

    @plan_versions.setter
    def plan_versions(self, plan_versions):
        """Sets the plan_versions of this StaffPlan.


        :param plan_versions: The plan_versions of this StaffPlan.
        :type plan_versions: List[StaffPlanVersion]
        """

        self._plan_versions = plan_versions
