# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class Email(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, address=None, default=None, verified=None, href=None):  # noqa: E501
        """Email - a model defined in OpenAPI

        :param id: The id of this Email.  # noqa: E501
        :type id: str
        :param address: The address of this Email.  # noqa: E501
        :type address: str
        :param default: The default of this Email.  # noqa: E501
        :type default: bool
        :param verified: The verified of this Email.  # noqa: E501
        :type verified: bool
        :param href: The href of this Email.  # noqa: E501
        :type href: str
        """
        self.openapi_types = {
            'id': str,
            'address': str,
            'default': bool,
            'verified': bool,
            'href': str
        }

        self.attribute_map = {
            'id': 'id',
            'address': 'address',
            'default': 'default',
            'verified': 'verified',
            'href': 'href'
        }

        self._id = id
        self._address = address
        self._default = default
        self._verified = verified
        self._href = href

    @classmethod
    def from_dict(cls, dikt) -> 'Email':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Email of this Email.  # noqa: E501
        :rtype: Email
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Email.


        :return: The id of this Email.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Email.


        :param id: The id of this Email.
        :type id: str
        """

        self._id = id

    @property
    def address(self):
        """Gets the address of this Email.


        :return: The address of this Email.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Email.


        :param address: The address of this Email.
        :type address: str
        """

        self._address = address

    @property
    def default(self):
        """Gets the default of this Email.


        :return: The default of this Email.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this Email.


        :param default: The default of this Email.
        :type default: bool
        """

        self._default = default

    @property
    def verified(self):
        """Gets the verified of this Email.


        :return: The verified of this Email.
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this Email.


        :param verified: The verified of this Email.
        :type verified: bool
        """

        self._verified = verified

    @property
    def href(self):
        """Gets the href of this Email.


        :return: The href of this Email.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this Email.


        :param href: The href of this Email.
        :type href: str
        """

        self._href = href
