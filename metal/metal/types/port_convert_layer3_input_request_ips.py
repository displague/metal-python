# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class PortConvertLayer3InputRequestIps(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_family=None, public=None):  # noqa: E501
        """PortConvertLayer3InputRequestIps - a model defined in OpenAPI

        :param address_family: The address_family of this PortConvertLayer3InputRequestIps.  # noqa: E501
        :type address_family: int
        :param public: The public of this PortConvertLayer3InputRequestIps.  # noqa: E501
        :type public: bool
        """
        self.openapi_types = {
            'address_family': int,
            'public': bool
        }

        self.attribute_map = {
            'address_family': 'address_family',
            'public': 'public'
        }

        self._address_family = address_family
        self._public = public

    @classmethod
    def from_dict(cls, dikt) -> 'PortConvertLayer3InputRequestIps':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PortConvertLayer3Input_request_ips of this PortConvertLayer3InputRequestIps.  # noqa: E501
        :rtype: PortConvertLayer3InputRequestIps
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_family(self):
        """Gets the address_family of this PortConvertLayer3InputRequestIps.


        :return: The address_family of this PortConvertLayer3InputRequestIps.
        :rtype: int
        """
        return self._address_family

    @address_family.setter
    def address_family(self, address_family):
        """Sets the address_family of this PortConvertLayer3InputRequestIps.


        :param address_family: The address_family of this PortConvertLayer3InputRequestIps.
        :type address_family: int
        """

        self._address_family = address_family

    @property
    def public(self):
        """Gets the public of this PortConvertLayer3InputRequestIps.


        :return: The public of this PortConvertLayer3InputRequestIps.
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this PortConvertLayer3InputRequestIps.


        :param public: The public of this PortConvertLayer3InputRequestIps.
        :type public: bool
        """

        self._public = public
