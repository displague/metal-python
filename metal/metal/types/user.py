# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal import util

from metal.types.href import Href  # noqa: E501

class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, short_id=None, first_name=None, last_name=None, full_name=None, email=None, avatar_url=None, avatar_thumb_url=None, two_factor_auth=None, max_projects=None, max_organizations=None, created_at=None, updated_at=None, timezone=None, fraud_score=None, last_login_at=None, emails=None, href=None, phone_number=None, customdata=None):  # noqa: E501
        """User - a model defined in OpenAPI

        :param id: The id of this User.  # noqa: E501
        :type id: str
        :param short_id: The short_id of this User.  # noqa: E501
        :type short_id: str
        :param first_name: The first_name of this User.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this User.  # noqa: E501
        :type last_name: str
        :param full_name: The full_name of this User.  # noqa: E501
        :type full_name: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param avatar_url: The avatar_url of this User.  # noqa: E501
        :type avatar_url: str
        :param avatar_thumb_url: The avatar_thumb_url of this User.  # noqa: E501
        :type avatar_thumb_url: str
        :param two_factor_auth: The two_factor_auth of this User.  # noqa: E501
        :type two_factor_auth: str
        :param max_projects: The max_projects of this User.  # noqa: E501
        :type max_projects: int
        :param max_organizations: The max_organizations of this User.  # noqa: E501
        :type max_organizations: int
        :param created_at: The created_at of this User.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this User.  # noqa: E501
        :type updated_at: datetime
        :param timezone: The timezone of this User.  # noqa: E501
        :type timezone: str
        :param fraud_score: The fraud_score of this User.  # noqa: E501
        :type fraud_score: str
        :param last_login_at: The last_login_at of this User.  # noqa: E501
        :type last_login_at: datetime
        :param emails: The emails of this User.  # noqa: E501
        :type emails: List[Href]
        :param href: The href of this User.  # noqa: E501
        :type href: str
        :param phone_number: The phone_number of this User.  # noqa: E501
        :type phone_number: str
        :param customdata: The customdata of this User.  # noqa: E501
        :type customdata: object
        """
        self.openapi_types = {
            'id': str,
            'short_id': str,
            'first_name': str,
            'last_name': str,
            'full_name': str,
            'email': str,
            'avatar_url': str,
            'avatar_thumb_url': str,
            'two_factor_auth': str,
            'max_projects': int,
            'max_organizations': int,
            'created_at': datetime,
            'updated_at': datetime,
            'timezone': str,
            'fraud_score': str,
            'last_login_at': datetime,
            'emails': List[Href],
            'href': str,
            'phone_number': str,
            'customdata': object
        }

        self.attribute_map = {
            'id': 'id',
            'short_id': 'short_id',
            'first_name': 'first_name',
            'last_name': 'last_name',
            'full_name': 'full_name',
            'email': 'email',
            'avatar_url': 'avatar_url',
            'avatar_thumb_url': 'avatar_thumb_url',
            'two_factor_auth': 'two_factor_auth',
            'max_projects': 'max_projects',
            'max_organizations': 'max_organizations',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'timezone': 'timezone',
            'fraud_score': 'fraud_score',
            'last_login_at': 'last_login_at',
            'emails': 'emails',
            'href': 'href',
            'phone_number': 'phone_number',
            'customdata': 'customdata'
        }

        self._id = id
        self._short_id = short_id
        self._first_name = first_name
        self._last_name = last_name
        self._full_name = full_name
        self._email = email
        self._avatar_url = avatar_url
        self._avatar_thumb_url = avatar_thumb_url
        self._two_factor_auth = two_factor_auth
        self._max_projects = max_projects
        self._max_organizations = max_organizations
        self._created_at = created_at
        self._updated_at = updated_at
        self._timezone = timezone
        self._fraud_score = fraud_score
        self._last_login_at = last_login_at
        self._emails = emails
        self._href = href
        self._phone_number = phone_number
        self._customdata = customdata

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id

    @property
    def short_id(self):
        """Gets the short_id of this User.


        :return: The short_id of this User.
        :rtype: str
        """
        return self._short_id

    @short_id.setter
    def short_id(self, short_id):
        """Sets the short_id of this User.


        :param short_id: The short_id of this User.
        :type short_id: str
        """

        self._short_id = short_id

    @property
    def first_name(self):
        """Gets the first_name of this User.


        :return: The first_name of this User.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this User.


        :param first_name: The first_name of this User.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this User.


        :return: The last_name of this User.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this User.


        :param last_name: The last_name of this User.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def full_name(self):
        """Gets the full_name of this User.


        :return: The full_name of this User.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this User.


        :param full_name: The full_name of this User.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def email(self):
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def avatar_url(self):
        """Gets the avatar_url of this User.


        :return: The avatar_url of this User.
        :rtype: str
        """
        return self._avatar_url

    @avatar_url.setter
    def avatar_url(self, avatar_url):
        """Sets the avatar_url of this User.


        :param avatar_url: The avatar_url of this User.
        :type avatar_url: str
        """

        self._avatar_url = avatar_url

    @property
    def avatar_thumb_url(self):
        """Gets the avatar_thumb_url of this User.


        :return: The avatar_thumb_url of this User.
        :rtype: str
        """
        return self._avatar_thumb_url

    @avatar_thumb_url.setter
    def avatar_thumb_url(self, avatar_thumb_url):
        """Sets the avatar_thumb_url of this User.


        :param avatar_thumb_url: The avatar_thumb_url of this User.
        :type avatar_thumb_url: str
        """

        self._avatar_thumb_url = avatar_thumb_url

    @property
    def two_factor_auth(self):
        """Gets the two_factor_auth of this User.


        :return: The two_factor_auth of this User.
        :rtype: str
        """
        return self._two_factor_auth

    @two_factor_auth.setter
    def two_factor_auth(self, two_factor_auth):
        """Sets the two_factor_auth of this User.


        :param two_factor_auth: The two_factor_auth of this User.
        :type two_factor_auth: str
        """

        self._two_factor_auth = two_factor_auth

    @property
    def max_projects(self):
        """Gets the max_projects of this User.


        :return: The max_projects of this User.
        :rtype: int
        """
        return self._max_projects

    @max_projects.setter
    def max_projects(self, max_projects):
        """Sets the max_projects of this User.


        :param max_projects: The max_projects of this User.
        :type max_projects: int
        """

        self._max_projects = max_projects

    @property
    def max_organizations(self):
        """Gets the max_organizations of this User.


        :return: The max_organizations of this User.
        :rtype: int
        """
        return self._max_organizations

    @max_organizations.setter
    def max_organizations(self, max_organizations):
        """Sets the max_organizations of this User.


        :param max_organizations: The max_organizations of this User.
        :type max_organizations: int
        """

        self._max_organizations = max_organizations

    @property
    def created_at(self):
        """Gets the created_at of this User.


        :return: The created_at of this User.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this User.


        :param created_at: The created_at of this User.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this User.


        :return: The updated_at of this User.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this User.


        :param updated_at: The updated_at of this User.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def timezone(self):
        """Gets the timezone of this User.


        :return: The timezone of this User.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this User.


        :param timezone: The timezone of this User.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def fraud_score(self):
        """Gets the fraud_score of this User.


        :return: The fraud_score of this User.
        :rtype: str
        """
        return self._fraud_score

    @fraud_score.setter
    def fraud_score(self, fraud_score):
        """Sets the fraud_score of this User.


        :param fraud_score: The fraud_score of this User.
        :type fraud_score: str
        """

        self._fraud_score = fraud_score

    @property
    def last_login_at(self):
        """Gets the last_login_at of this User.


        :return: The last_login_at of this User.
        :rtype: datetime
        """
        return self._last_login_at

    @last_login_at.setter
    def last_login_at(self, last_login_at):
        """Sets the last_login_at of this User.


        :param last_login_at: The last_login_at of this User.
        :type last_login_at: datetime
        """

        self._last_login_at = last_login_at

    @property
    def emails(self):
        """Gets the emails of this User.


        :return: The emails of this User.
        :rtype: List[Href]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this User.


        :param emails: The emails of this User.
        :type emails: List[Href]
        """

        self._emails = emails

    @property
    def href(self):
        """Gets the href of this User.


        :return: The href of this User.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this User.


        :param href: The href of this User.
        :type href: str
        """

        self._href = href

    @property
    def phone_number(self):
        """Gets the phone_number of this User.


        :return: The phone_number of this User.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this User.


        :param phone_number: The phone_number of this User.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def customdata(self):
        """Gets the customdata of this User.


        :return: The customdata of this User.
        :rtype: object
        """
        return self._customdata

    @customdata.setter
    def customdata(self, customdata):
        """Sets the customdata of this User.


        :param customdata: The customdata of this User.
        :type customdata: object
        """

        self._customdata = customdata
