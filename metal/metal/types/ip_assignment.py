# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.href import Href
from metal.types.parent_block import ParentBlock
from metal import util

from metal.types.href import Href  # noqa: E501
from metal.types.parent_block import ParentBlock  # noqa: E501

class IPAssignment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, address_family=None, netmask=None, public=None, enabled=None, cidr=None, management=None, manageable=None, assigned_to=None, network=None, address=None, gateway=None, href=None, created_at=None, parent_block=None):  # noqa: E501
        """IPAssignment - a model defined in OpenAPI

        :param id: The id of this IPAssignment.  # noqa: E501
        :type id: str
        :param address_family: The address_family of this IPAssignment.  # noqa: E501
        :type address_family: int
        :param netmask: The netmask of this IPAssignment.  # noqa: E501
        :type netmask: str
        :param public: The public of this IPAssignment.  # noqa: E501
        :type public: bool
        :param enabled: The enabled of this IPAssignment.  # noqa: E501
        :type enabled: bool
        :param cidr: The cidr of this IPAssignment.  # noqa: E501
        :type cidr: int
        :param management: The management of this IPAssignment.  # noqa: E501
        :type management: bool
        :param manageable: The manageable of this IPAssignment.  # noqa: E501
        :type manageable: bool
        :param assigned_to: The assigned_to of this IPAssignment.  # noqa: E501
        :type assigned_to: Href
        :param network: The network of this IPAssignment.  # noqa: E501
        :type network: str
        :param address: The address of this IPAssignment.  # noqa: E501
        :type address: str
        :param gateway: The gateway of this IPAssignment.  # noqa: E501
        :type gateway: str
        :param href: The href of this IPAssignment.  # noqa: E501
        :type href: str
        :param created_at: The created_at of this IPAssignment.  # noqa: E501
        :type created_at: datetime
        :param parent_block: The parent_block of this IPAssignment.  # noqa: E501
        :type parent_block: ParentBlock
        """
        self.openapi_types = {
            'id': str,
            'address_family': int,
            'netmask': str,
            'public': bool,
            'enabled': bool,
            'cidr': int,
            'management': bool,
            'manageable': bool,
            'assigned_to': Href,
            'network': str,
            'address': str,
            'gateway': str,
            'href': str,
            'created_at': datetime,
            'parent_block': ParentBlock
        }

        self.attribute_map = {
            'id': 'id',
            'address_family': 'address_family',
            'netmask': 'netmask',
            'public': 'public',
            'enabled': 'enabled',
            'cidr': 'cidr',
            'management': 'management',
            'manageable': 'manageable',
            'assigned_to': 'assigned_to',
            'network': 'network',
            'address': 'address',
            'gateway': 'gateway',
            'href': 'href',
            'created_at': 'created_at',
            'parent_block': 'parent_block'
        }

        self._id = id
        self._address_family = address_family
        self._netmask = netmask
        self._public = public
        self._enabled = enabled
        self._cidr = cidr
        self._management = management
        self._manageable = manageable
        self._assigned_to = assigned_to
        self._network = network
        self._address = address
        self._gateway = gateway
        self._href = href
        self._created_at = created_at
        self._parent_block = parent_block

    @classmethod
    def from_dict(cls, dikt) -> 'IPAssignment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IPAssignment of this IPAssignment.  # noqa: E501
        :rtype: IPAssignment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this IPAssignment.


        :return: The id of this IPAssignment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IPAssignment.


        :param id: The id of this IPAssignment.
        :type id: str
        """

        self._id = id

    @property
    def address_family(self):
        """Gets the address_family of this IPAssignment.


        :return: The address_family of this IPAssignment.
        :rtype: int
        """
        return self._address_family

    @address_family.setter
    def address_family(self, address_family):
        """Sets the address_family of this IPAssignment.


        :param address_family: The address_family of this IPAssignment.
        :type address_family: int
        """

        self._address_family = address_family

    @property
    def netmask(self):
        """Gets the netmask of this IPAssignment.


        :return: The netmask of this IPAssignment.
        :rtype: str
        """
        return self._netmask

    @netmask.setter
    def netmask(self, netmask):
        """Sets the netmask of this IPAssignment.


        :param netmask: The netmask of this IPAssignment.
        :type netmask: str
        """

        self._netmask = netmask

    @property
    def public(self):
        """Gets the public of this IPAssignment.


        :return: The public of this IPAssignment.
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this IPAssignment.


        :param public: The public of this IPAssignment.
        :type public: bool
        """

        self._public = public

    @property
    def enabled(self):
        """Gets the enabled of this IPAssignment.


        :return: The enabled of this IPAssignment.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this IPAssignment.


        :param enabled: The enabled of this IPAssignment.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def cidr(self):
        """Gets the cidr of this IPAssignment.


        :return: The cidr of this IPAssignment.
        :rtype: int
        """
        return self._cidr

    @cidr.setter
    def cidr(self, cidr):
        """Sets the cidr of this IPAssignment.


        :param cidr: The cidr of this IPAssignment.
        :type cidr: int
        """

        self._cidr = cidr

    @property
    def management(self):
        """Gets the management of this IPAssignment.


        :return: The management of this IPAssignment.
        :rtype: bool
        """
        return self._management

    @management.setter
    def management(self, management):
        """Sets the management of this IPAssignment.


        :param management: The management of this IPAssignment.
        :type management: bool
        """

        self._management = management

    @property
    def manageable(self):
        """Gets the manageable of this IPAssignment.


        :return: The manageable of this IPAssignment.
        :rtype: bool
        """
        return self._manageable

    @manageable.setter
    def manageable(self, manageable):
        """Sets the manageable of this IPAssignment.


        :param manageable: The manageable of this IPAssignment.
        :type manageable: bool
        """

        self._manageable = manageable

    @property
    def assigned_to(self):
        """Gets the assigned_to of this IPAssignment.


        :return: The assigned_to of this IPAssignment.
        :rtype: Href
        """
        return self._assigned_to

    @assigned_to.setter
    def assigned_to(self, assigned_to):
        """Sets the assigned_to of this IPAssignment.


        :param assigned_to: The assigned_to of this IPAssignment.
        :type assigned_to: Href
        """

        self._assigned_to = assigned_to

    @property
    def network(self):
        """Gets the network of this IPAssignment.


        :return: The network of this IPAssignment.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this IPAssignment.


        :param network: The network of this IPAssignment.
        :type network: str
        """

        self._network = network

    @property
    def address(self):
        """Gets the address of this IPAssignment.


        :return: The address of this IPAssignment.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this IPAssignment.


        :param address: The address of this IPAssignment.
        :type address: str
        """

        self._address = address

    @property
    def gateway(self):
        """Gets the gateway of this IPAssignment.


        :return: The gateway of this IPAssignment.
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this IPAssignment.


        :param gateway: The gateway of this IPAssignment.
        :type gateway: str
        """

        self._gateway = gateway

    @property
    def href(self):
        """Gets the href of this IPAssignment.


        :return: The href of this IPAssignment.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this IPAssignment.


        :param href: The href of this IPAssignment.
        :type href: str
        """

        self._href = href

    @property
    def created_at(self):
        """Gets the created_at of this IPAssignment.


        :return: The created_at of this IPAssignment.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this IPAssignment.


        :param created_at: The created_at of this IPAssignment.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def parent_block(self):
        """Gets the parent_block of this IPAssignment.


        :return: The parent_block of this IPAssignment.
        :rtype: ParentBlock
        """
        return self._parent_block

    @parent_block.setter
    def parent_block(self, parent_block):
        """Sets the parent_block of this IPAssignment.


        :param parent_block: The parent_block of this IPAssignment.
        :type parent_block: ParentBlock
        """

        self._parent_block = parent_block
