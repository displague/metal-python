# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.device import Device
from metal.types.facility import Facility
from metal.types.plan import Plan
from metal.types.project import Project
from metal import util

from metal.types.device import Device  # noqa: E501
from metal.types.facility import Facility  # noqa: E501
from metal.types.plan import Plan  # noqa: E501
from metal.types.project import Project  # noqa: E501

class HardwareReservation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, short_id=None, facility=None, plan=None, href=None, project=None, device=None, created_at=None, remove_at=None):  # noqa: E501
        """HardwareReservation - a model defined in OpenAPI

        :param id: The id of this HardwareReservation.  # noqa: E501
        :type id: str
        :param short_id: The short_id of this HardwareReservation.  # noqa: E501
        :type short_id: str
        :param facility: The facility of this HardwareReservation.  # noqa: E501
        :type facility: Facility
        :param plan: The plan of this HardwareReservation.  # noqa: E501
        :type plan: Plan
        :param href: The href of this HardwareReservation.  # noqa: E501
        :type href: str
        :param project: The project of this HardwareReservation.  # noqa: E501
        :type project: Project
        :param device: The device of this HardwareReservation.  # noqa: E501
        :type device: Device
        :param created_at: The created_at of this HardwareReservation.  # noqa: E501
        :type created_at: datetime
        :param remove_at: The remove_at of this HardwareReservation.  # noqa: E501
        :type remove_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'short_id': str,
            'facility': Facility,
            'plan': Plan,
            'href': str,
            'project': Project,
            'device': Device,
            'created_at': datetime,
            'remove_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'short_id': 'short_id',
            'facility': 'facility',
            'plan': 'plan',
            'href': 'href',
            'project': 'project',
            'device': 'device',
            'created_at': 'created_at',
            'remove_at': 'remove_at'
        }

        self._id = id
        self._short_id = short_id
        self._facility = facility
        self._plan = plan
        self._href = href
        self._project = project
        self._device = device
        self._created_at = created_at
        self._remove_at = remove_at

    @classmethod
    def from_dict(cls, dikt) -> 'HardwareReservation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HardwareReservation of this HardwareReservation.  # noqa: E501
        :rtype: HardwareReservation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this HardwareReservation.


        :return: The id of this HardwareReservation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HardwareReservation.


        :param id: The id of this HardwareReservation.
        :type id: str
        """

        self._id = id

    @property
    def short_id(self):
        """Gets the short_id of this HardwareReservation.


        :return: The short_id of this HardwareReservation.
        :rtype: str
        """
        return self._short_id

    @short_id.setter
    def short_id(self, short_id):
        """Sets the short_id of this HardwareReservation.


        :param short_id: The short_id of this HardwareReservation.
        :type short_id: str
        """

        self._short_id = short_id

    @property
    def facility(self):
        """Gets the facility of this HardwareReservation.


        :return: The facility of this HardwareReservation.
        :rtype: Facility
        """
        return self._facility

    @facility.setter
    def facility(self, facility):
        """Sets the facility of this HardwareReservation.


        :param facility: The facility of this HardwareReservation.
        :type facility: Facility
        """

        self._facility = facility

    @property
    def plan(self):
        """Gets the plan of this HardwareReservation.


        :return: The plan of this HardwareReservation.
        :rtype: Plan
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this HardwareReservation.


        :param plan: The plan of this HardwareReservation.
        :type plan: Plan
        """

        self._plan = plan

    @property
    def href(self):
        """Gets the href of this HardwareReservation.


        :return: The href of this HardwareReservation.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this HardwareReservation.


        :param href: The href of this HardwareReservation.
        :type href: str
        """

        self._href = href

    @property
    def project(self):
        """Gets the project of this HardwareReservation.


        :return: The project of this HardwareReservation.
        :rtype: Project
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this HardwareReservation.


        :param project: The project of this HardwareReservation.
        :type project: Project
        """

        self._project = project

    @property
    def device(self):
        """Gets the device of this HardwareReservation.


        :return: The device of this HardwareReservation.
        :rtype: Device
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this HardwareReservation.


        :param device: The device of this HardwareReservation.
        :type device: Device
        """

        self._device = device

    @property
    def created_at(self):
        """Gets the created_at of this HardwareReservation.


        :return: The created_at of this HardwareReservation.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this HardwareReservation.


        :param created_at: The created_at of this HardwareReservation.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def remove_at(self):
        """Gets the remove_at of this HardwareReservation.


        :return: The remove_at of this HardwareReservation.
        :rtype: datetime
        """
        return self._remove_at

    @remove_at.setter
    def remove_at(self, remove_at):
        """Sets the remove_at of this HardwareReservation.


        :param remove_at: The remove_at of this HardwareReservation.
        :type remove_at: datetime
        """

        self._remove_at = remove_at
