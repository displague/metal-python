# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class CreateEmailInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address=None):  # noqa: E501
        """CreateEmailInput - a model defined in OpenAPI

        :param address: The address of this CreateEmailInput.  # noqa: E501
        :type address: str
        """
        self.openapi_types = {
            'address': str
        }

        self.attribute_map = {
            'address': 'address'
        }

        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'CreateEmailInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateEmailInput of this CreateEmailInput.  # noqa: E501
        :rtype: CreateEmailInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this CreateEmailInput.


        :return: The address of this CreateEmailInput.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this CreateEmailInput.


        :param address: The address of this CreateEmailInput.
        :type address: str
        """
        if address is None:
            raise ValueError("Invalid value for `address`, must not be `None`")  # noqa: E501

        self._address = address
