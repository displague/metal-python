# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class EventType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group=None, events=None):  # noqa: E501
        """EventType - a model defined in OpenAPI

        :param group: The group of this EventType.  # noqa: E501
        :type group: str
        :param events: The events of this EventType.  # noqa: E501
        :type events: List[str]
        """
        self.openapi_types = {
            'group': str,
            'events': List[str]
        }

        self.attribute_map = {
            'group': 'group',
            'events': 'events'
        }

        self._group = group
        self._events = events

    @classmethod
    def from_dict(cls, dikt) -> 'EventType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EventType of this EventType.  # noqa: E501
        :rtype: EventType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group(self):
        """Gets the group of this EventType.


        :return: The group of this EventType.
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this EventType.


        :param group: The group of this EventType.
        :type group: str
        """

        self._group = group

    @property
    def events(self):
        """Gets the events of this EventType.


        :return: The events of this EventType.
        :rtype: List[str]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this EventType.


        :param events: The events of this EventType.
        :type events: List[str]
        """

        self._events = events
