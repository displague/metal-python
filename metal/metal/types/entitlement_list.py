# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal.types.entitlement import Entitlement
from metal.types.meta import Meta
from metal import util

from metal.types.entitlement import Entitlement  # noqa: E501
from metal.types.meta import Meta  # noqa: E501

class EntitlementList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entitlements=None, meta=None):  # noqa: E501
        """EntitlementList - a model defined in OpenAPI

        :param entitlements: The entitlements of this EntitlementList.  # noqa: E501
        :type entitlements: List[Entitlement]
        :param meta: The meta of this EntitlementList.  # noqa: E501
        :type meta: Meta
        """
        self.openapi_types = {
            'entitlements': List[Entitlement],
            'meta': Meta
        }

        self.attribute_map = {
            'entitlements': 'entitlements',
            'meta': 'meta'
        }

        self._entitlements = entitlements
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt) -> 'EntitlementList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EntitlementList of this EntitlementList.  # noqa: E501
        :rtype: EntitlementList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entitlements(self):
        """Gets the entitlements of this EntitlementList.


        :return: The entitlements of this EntitlementList.
        :rtype: List[Entitlement]
        """
        return self._entitlements

    @entitlements.setter
    def entitlements(self, entitlements):
        """Sets the entitlements of this EntitlementList.


        :param entitlements: The entitlements of this EntitlementList.
        :type entitlements: List[Entitlement]
        """

        self._entitlements = entitlements

    @property
    def meta(self):
        """Gets the meta of this EntitlementList.


        :return: The meta of this EntitlementList.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this EntitlementList.


        :param meta: The meta of this EntitlementList.
        :type meta: Meta
        """

        self._meta = meta
