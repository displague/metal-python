# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from metal.types.base_model_ import Model
from metal import util


class ProjectUpdateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, payment_method_id=None, backend_transfer_enabled=None, customdata=None):  # noqa: E501
        """ProjectUpdateInput - a model defined in OpenAPI

        :param name: The name of this ProjectUpdateInput.  # noqa: E501
        :type name: str
        :param payment_method_id: The payment_method_id of this ProjectUpdateInput.  # noqa: E501
        :type payment_method_id: str
        :param backend_transfer_enabled: The backend_transfer_enabled of this ProjectUpdateInput.  # noqa: E501
        :type backend_transfer_enabled: bool
        :param customdata: The customdata of this ProjectUpdateInput.  # noqa: E501
        :type customdata: object
        """
        self.openapi_types = {
            'name': str,
            'payment_method_id': str,
            'backend_transfer_enabled': bool,
            'customdata': object
        }

        self.attribute_map = {
            'name': 'name',
            'payment_method_id': 'payment_method_id',
            'backend_transfer_enabled': 'backend_transfer_enabled',
            'customdata': 'customdata'
        }

        self._name = name
        self._payment_method_id = payment_method_id
        self._backend_transfer_enabled = backend_transfer_enabled
        self._customdata = customdata

    @classmethod
    def from_dict(cls, dikt) -> 'ProjectUpdateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProjectUpdateInput of this ProjectUpdateInput.  # noqa: E501
        :rtype: ProjectUpdateInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ProjectUpdateInput.


        :return: The name of this ProjectUpdateInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectUpdateInput.


        :param name: The name of this ProjectUpdateInput.
        :type name: str
        """

        self._name = name

    @property
    def payment_method_id(self):
        """Gets the payment_method_id of this ProjectUpdateInput.


        :return: The payment_method_id of this ProjectUpdateInput.
        :rtype: str
        """
        return self._payment_method_id

    @payment_method_id.setter
    def payment_method_id(self, payment_method_id):
        """Sets the payment_method_id of this ProjectUpdateInput.


        :param payment_method_id: The payment_method_id of this ProjectUpdateInput.
        :type payment_method_id: str
        """

        self._payment_method_id = payment_method_id

    @property
    def backend_transfer_enabled(self):
        """Gets the backend_transfer_enabled of this ProjectUpdateInput.


        :return: The backend_transfer_enabled of this ProjectUpdateInput.
        :rtype: bool
        """
        return self._backend_transfer_enabled

    @backend_transfer_enabled.setter
    def backend_transfer_enabled(self, backend_transfer_enabled):
        """Sets the backend_transfer_enabled of this ProjectUpdateInput.


        :param backend_transfer_enabled: The backend_transfer_enabled of this ProjectUpdateInput.
        :type backend_transfer_enabled: bool
        """

        self._backend_transfer_enabled = backend_transfer_enabled

    @property
    def customdata(self):
        """Gets the customdata of this ProjectUpdateInput.


        :return: The customdata of this ProjectUpdateInput.
        :rtype: object
        """
        return self._customdata

    @customdata.setter
    def customdata(self, customdata):
        """Sets the customdata of this ProjectUpdateInput.


        :param customdata: The customdata of this ProjectUpdateInput.
        :type customdata: object
        """

        self._customdata = customdata
